grf {
	grfid: "UFI\90";
	name: string(STR_GRF_NAME);
	desc: string(STR_GRF_DESCRIPTION);
	url:  string(STR_GRF_URL);
	version: 301;
	min_compatible_version: 301;
        param 0 {
            param_gui {
                type: int;
                name: string(STR_PARAM_GUI_NAME);
                desc: string(STR_PARAM_GUI_DESC);
                min_value: 0;
                max_value: 2;
                def_value: 0;
                names: {
                        0: string(STR_PARAM_GUI_0);
                        1: string(STR_PARAM_GUI_1);
                        2: string(STR_PARAM_GUI_2);
                };
            }
        }
        param 1 {
            param_fences {
                type: int;
                name: string(STR_PARAM_FENCES_NAME);
                desc: string(STR_PARAM_FENCES_DESC);
                min_value: 0;
                max_value: 4;
                def_value: 2;
                names: {
                    0: string(STR_PARAM_FENCES_0);
                    1: string(STR_PARAM_FENCES_1);
                    2: string(STR_PARAM_FENCES_2);
                    3: string(STR_PARAM_FENCES_3);
                    4: string(STR_PARAM_FENCES_4);
                };
            }
        }
        param 2 {
            param_3rd {
                type: int;
                name: string(STR_PARAM_3RD_NAME);
                desc: string(STR_PARAM_3RD_DESC);
                min_value: 0;
                max_value: 5;
                def_value: 5;
                names: {
                    0: string(STR_PARAM_3RD_0);
                    1: string(STR_PARAM_3RD_1);
                    2: string(STR_PARAM_3RD_2);
                    3: string(STR_PARAM_3RD_3);
                    4: string(STR_PARAM_3RD_4);
                    5: string(STR_PARAM_3RD_4);
                };
            }
        }
        param 3 {
            param_tunnel {
                type: bool;
                name: string(STR_PARAM_TUNNEL_NAME);
                desc: string(STR_PARAM_TUNNEL_DESC);
                def_value: 1;
            }
        }
        param 4 {
            param_speed_1 {
                type: int;
                name: string(STR_PARAM_SPEED_1_NAME);
                desc: string(STR_STRING_2, string(STR_PARAM_SPEED_1_DESC), string(STR_STRING_DISABLE_DESC));
                min_value:  29;
                max_value: 255;
                def_value:  60;
                names: {
                    29: string(STR_STRING_DISABLE);
                };
            }
        }
        param 5 {
            param_speed_2 {
                type: int;
                name: string(STR_PARAM_SPEED_2_NAME);
                desc: string(STR_STRING_2, string(STR_PARAM_SPEED_2_DESC), string(STR_STRING_DISABLE_DESC));
                min_value:  29;
                max_value: 255;
                def_value: 101;
                names: {
                    29: string(STR_STRING_DISABLE);
                };
            }
        }
        param 6 {
            param_speed_3 {
                type: int;
                name: string(STR_PARAM_SPEED_3_NAME);
                desc: string(STR_STRING_2, string(STR_PARAM_SPEED_3_DESC), string(STR_STRING_DISABLE_DESC));
                min_value:  29;
                max_value: 255;
                def_value: 151;
            }
        }
        param 7 {
            param_speed_4 {
                type: int;
                name: string(STR_PARAM_SPEED_4_NAME);
                desc: string(STR_STRING_2, string(STR_PARAM_SPEED_4_DESC), string(STR_STRING_DISABLE_DESC));
                min_value: 99;
                max_value: 501;
                def_value: 210;
                names: {
                    501: string(STR_STRING_UNLIMITED);
                };
            }
        }
        param 8 {
            param_speed_5 {
                type: int;
                name: string(STR_PARAM_SPEED_5_NAME);
                desc: string(STR_STRING_2, string(STR_PARAM_SPEED_5_DESC), string(STR_STRING_DISABLE_DESC));
                min_value:  99;
                max_value: 501;
                def_value: 281;
                names: {
                    99:  string(STR_STRING_DISABLE);
                    501: string(STR_STRING_UNLIMITED);
                };
            }
        }
        param 9 {
            param_speed_6 {
                type: int;
                name: string(STR_PARAM_SPEED_6_NAME);
                desc: string(STR_STRING_2, string(STR_PARAM_SPEED_6_DESC), string(STR_STRING_DISABLE_DESC));
                min_value:  99;
                max_value: 501;
                def_value: 360;
                names: {
                    99:  string(STR_STRING_DISABLE);
                    501: string(STR_STRING_UNLIMITED);
                };
            }
        }
        param 10 {
            param_speed_7 {
                type: int;
                name: string(STR_PARAM_SPEED_7_NAME);
                desc: string(STR_STRING_2, string(STR_PARAM_SPEED_7_DESC), string(STR_STRING_DISABLE_DESC));
                min_value:  29;
                max_value: 255;
                def_value: 121;
                names: {
                    29:  string(STR_STRING_DISABLE);
                };
            }
        }
        param 11 {
            param_speed_8 {
                type: int;
                name: string(STR_PARAM_SPEED_8_NAME);
                desc: string(STR_STRING_2, string(STR_PARAM_SPEED_8_DESC), string(STR_STRING_DISABLE_DESC));
                min_value:  29;
                max_value: 255;
                def_value:  60;
            }
        }
        param 12 {
            param_speed_9 {
                type: int;
                name: string(STR_PARAM_SPEED_9_NAME);
                desc: string(STR_STRING_2, string(STR_PARAM_SPEED_9_DESC), string(STR_STRING_DISABLE_DESC));
                min_value:  29;
                max_value: 255;
                def_value: 111;
            }
        }
        param 13 {
            param_speed_10 {
                type: int;
                name: string(STR_PARAM_SPEED_10_NAME);
                desc: string(STR_STRING_2, string(STR_PARAM_SPEED_10_DESC), string(STR_STRING_DISABLE_DESC));
                min_value:  29;
                max_value: 255;
                def_value:  91;
                names: {
                    29: string(STR_STRING_DISABLE);
                };
            }
        }
        param 14 {
            param_speed_11 {
                type: int;
                name: string(STR_PARAM_SPEED_11_NAME);
                desc: string(STR_STRING_2, string(STR_PARAM_SPEED_11_DESC), string(STR_STRING_DISABLE_DESC));
                min_value:  29;
                max_value: 255;
                def_value:  60;
                names: {
                    29: string(STR_STRING_DISABLE);
                };
            }
        }
        param 15 {
            param_speed_12 {
                type: int;
                name: string(STR_PARAM_SPEED_12_NAME);
                desc: string(STR_STRING_2, string(STR_PARAM_SPEED_12_DESC), string(STR_STRING_DISABLE_DESC));
                min_value:  29;
                max_value: 255;
                def_value: 121;
                names: {
                    29: string(STR_STRING_DISABLE);
                };
            }
        }
        param 16 {
            param_speed_13 {
                type: int;
                name: string(STR_PARAM_SPEED_13_NAME);
                desc: string(STR_STRING_2, string(STR_PARAM_SPEED_13_DESC), string(STR_STRING_DISABLE_DESC));
                min_value:  29;
                max_value: 255;
                def_value:  60;
            }
        }
        param 17 {
            param_speed_14 {
                type: int;
                name: string(STR_PARAM_SPEED_14_NAME);
                desc: string(STR_STRING_2, string(STR_PARAM_SPEED_14_DESC), string(STR_STRING_DISABLE_DESC));
                min_value: 29;
                max_value: 255;
                def_value: 91;
            }
        }
        param 18 {
            param_speed_15 {
                type: int;
                name: string(STR_PARAM_SPEED_15_NAME);
                desc: string(STR_STRING_2, string(STR_PARAM_SPEED_15_DESC), string(STR_STRING_DISABLE_DESC));
                min_value: 29;
                max_value: 255;
                def_value: 121;
                names: {
                    29: string(STR_STRING_DISABLE);
                };
            }
        }
        param 19 {
            param_speed_16 {
                type: int;
                name: string(STR_PARAM_SPEED_16_NAME);
                desc: string(STR_STRING_2, string(STR_PARAM_SPEED_16_DESC), string(STR_STRING_DISABLE_DESC));
                min_value: 29;
                max_value: 255;
                def_value: 151;
                names: {
                    29: string(STR_STRING_DISABLE);
                };
            }
        }
        param 20 {
            param_speed_17 {
                type: int;
                name: string(STR_PARAM_SPEED_17_NAME);
                desc: string(STR_STRING_2, string(STR_PARAM_SPEED_17_DESC), string(STR_STRING_DISABLE_DESC));
                min_value: 29;
                max_value: 255;
                def_value: 101;
                names: {
                    29: string(STR_STRING_DISABLE);
                };
            }
        }
        param 21 {
            param_speed_18 {
                type: int;
                name: string(STR_PARAM_SPEED_18_NAME);
                desc: string(STR_STRING_2, string(STR_PARAM_SPEED_18_DESC), string(STR_STRING_DISABLE_DESC));
                min_value: 29;
                max_value: 255;
                def_value: 60;
            }
        }
        param 22 {
            param_speed_19 {
                type: int;
                name: string(STR_PARAM_SPEED_19_NAME);
                desc: string(STR_STRING_2, string(STR_PARAM_SPEED_19_DESC), string(STR_STRING_DISABLE_DESC));
                min_value: 29;
                max_value: 255;
                def_value: 91;
            }
        }
	}

if (ttd_platform != PLATFORM_OPENTTD || (openttd_version < version_openttd(1, 13, 0, 0))) {
	error(FATAL, REQUIRES_OPENTTD, string(STR_OPENTTD_VERSION));
}
//==================================================================================================================================
//								SPEED LIMIT
//==================================================================================================================================
if ((param[4]  < 29) || (param[4]  > 255))  { param[4]  = 60;  }
if ((param[5]  < 29) || (param[5]  > 255))  { param[5]  = 101; }
if ((param[6]  < 29) || (param[6]  > 255))  { param[6]  = 151; }
if ((param[7]  < 99) || (param[7]  > 501))  { param[7]  = 210; }
if ((param[8]  < 99) || (param[8]  > 501))  { param[8]  = 281; }
if ((param[9]  < 99) || (param[9]  > 501))  { param[9]  = 360; }
if ((param[10] < 29) || (param[10] > 255))  { param[10] = 121; }
if ((param[11] < 29) || (param[11] > 255))  { param[11] = 60;  }
if ((param[12] < 29) || (param[12] > 255))  { param[12] = 111; }
if ((param[13] < 29) || (param[13] > 255))  { param[13] = 91;  }
if ((param[14] < 29) || (param[14] > 255))  { param[14] = 60;  }
if ((param[15] < 29) || (param[15] > 255))  { param[15] = 121; }
if ((param[16] < 29) || (param[16] > 255))  { param[16] = 60;  }
if ((param[17] < 29) || (param[17] > 255))  { param[17] = 91;  }
if ((param[18] < 29) || (param[18] > 255))  { param[18] = 121; }
if ((param[19] < 29) || (param[19] > 255))  { param[19] = 151; }
if ((param[20] < 29) || (param[20] > 255))  { param[20] = 101; }
if ((param[21] < 29) || (param[21] > 255))  { param[21] = 60;  }
if ((param[22] < 29) || (param[22] > 255))  { param[22] = 91;  }
//==================================================================================================================================
//								BASECOST
//==================================================================================================================================
basecost {
	PR_BUILD_RAIL: -1;
}
basecost {
    PR_MAINTENANCE_RAIL: -2;
}
//==================================================================================================================================
//												TEMPLATES
//==================================================================================================================================
template overlay_tile(x, y) { [x, y, 64, 31, -31, 0] }
template tmpl_overlay_straight() {
    overlay_tile(  1,  1)
    overlay_tile( 70,  1)
}
template tmpl_overlay_diagonal() {
    overlay_tile(139,  1)
    overlay_tile(208,  1)
    overlay_tile(277,  1)
    overlay_tile(346,  1)
}
template tmpl_overlay_slopes() {
    [   415,     1,    64,    39,    -31,    -8] 
    [   484,     1,    64,    23,    -31,     0]
    [   553,     1,    64,    23,    -31,     0]
    [   622,     1,    64,    39,    -31,    -8]
}
template tmpl_overlay_type() {
    tmpl_overlay_straight()
    tmpl_overlay_diagonal()
    tmpl_overlay_slopes()
}

template precombined_tile(x, y) { [x, y, 64, 31, -31, 0] }
template tmpl_precombined_type() {
	precombined_tile( 70, 45)
	precombined_tile(139, 45)
	precombined_tile(208, 45)
	precombined_tile(277, 45)
	precombined_tile(346, 45)
	precombined_tile(415, 45)
	precombined_tile(484, 45)
	precombined_tile(  1, 81)
	precombined_tile( 70, 81)
	precombined_tile(139, 81)
	precombined_tile(208, 81)
	precombined_tile(277, 81)
	precombined_tile(346, 81)
	precombined_tile(415, 81)
	precombined_tile(484, 81)
	precombined_tile(  1,117)
	precombined_tile( 70,117)
	precombined_tile(139,117)
	precombined_tile(208,117)
	precombined_tile(277,117)
	precombined_tile(346,117)
	precombined_tile(415,117)
	precombined_tile(484,117)
	precombined_tile(  1,153)
	precombined_tile( 70,153)
	precombined_tile(139,153)
	precombined_tile(208,153)
	precombined_tile(277,153)
	precombined_tile(346,153)
	precombined_tile(415,153)
	precombined_tile(484,153)
	precombined_tile(  1,189)
	precombined_tile( 70,189)
	precombined_tile(139,189)
	precombined_tile(208,189)
	precombined_tile(277,189)
	precombined_tile(346,189)
	precombined_tile(415,189)
	precombined_tile(484,189)
	precombined_tile(  1,225)
	precombined_tile( 70,225)
	precombined_tile(139,225)
	precombined_tile(208,225)
	precombined_tile(277,225)
	precombined_tile(346,225)
	precombined_tile(415,225)
	precombined_tile(484,225)
	precombined_tile(  1,261)
	precombined_tile( 70,261)
	precombined_tile(139,261)
	precombined_tile(208,261)
	precombined_tile(277,261)
	precombined_tile(346,261)
	precombined_tile(415,261)
	precombined_tile(484,261)
	precombined_tile(  1,297)
	precombined_tile( 70,297)
	precombined_tile(139,297)
	precombined_tile(208,297)
	precombined_tile(277,297)
	precombined_tile(346,297)
	precombined_tile(415,297)
	precombined_tile(484,297)
}

template underlay_tile(x, y) { [x, y, 64, 31, -31, 0] }
template tmp_underlay_flat(y) {
	underlay_tile(  1,333+y)
	underlay_tile( 70,333+y)
	underlay_tile(139,333+y)
	underlay_tile(208,333+y)
	underlay_tile(277,333+y)
	underlay_tile(346,333+y)
}
template tmp_underlay_slope(y) {
    [   415,   333+y,    64,    39,    -31,    -8] 
    [   484,   333+y,    64,    23,    -31,     0]
    [   553,   333+y,    64,    23,    -31,     0]
    [   622,   333+y,    64,    39,    -31,    -8]
}
template tmp_underlay_crossing(y) {
	underlay_tile(691,333+y)
}
template tmp_underlay_juction(y) {
	underlay_tile(  1,377+y)
	underlay_tile( 70,377+y)
	underlay_tile(139,377+y)
	underlay_tile(208,377+y)
	underlay_tile(277,377+y)
}
template tmpl_underlay_type(y) {
	tmp_underlay_flat(y)
	tmp_underlay_slope(y)
	tmp_underlay_crossing(y)
	tmp_underlay_juction(y)
}

template tmpl_bridge_straight(x) {
    underlay_tile(  1+x, 493)
    underlay_tile( 70+x, 493)
}
template tmpl_bridge_slope(x) {
    [   139+x,   493,    64,    39,    -31,    -8]
    [   208+x,   493,    64,    23,    -31,     0]
    [   277+x,   493,    64,    23,    -31,     0]
    [   346+x,   493,    64,    39,    -31,    -8]
}
template tmpl_bridge_surfaces(x) {
    tmpl_bridge_straight(x)
    tmpl_bridge_slope(x)
}

template tmpl_level_crossings(a,b,x,y) {
    underlay_tile(  1+a, 537+b)
    underlay_tile( 70+a, 537+b) 
    [   277+x,  537+y,    20,    30,     -9,   -19, ANIM]
    [   302+x,  537+y,    20,    30,     -9,   -19, ANIM]
	[   327+x,  537+y,    20,    30,    -19,   -24, ANIM]
	[   352+x,  537+y,    35,    40,    -34,   -33, ANIM]
	[   392+x,  537+y,    35,    40,      1,   -33, ANIM]
	[   432+x,  537+y,    20,    30,      1,   -24, ANIM]
	[   457+x,  537+y,    35,    40,     -9,   -38, ANIM]
	[   497+x,  537+y,    35,    40,    -24,   -38, ANIM]
}

template tunnel_tile(x, y) { [x, y, 64, 39, -31, -8] }
template tmpl_tunnel_type(x) {
    tunnel_tile(  1+x,627)
    tunnel_tile( 70+x,627)
    tunnel_tile(139+x,627)
    tunnel_tile(208+x,627)
}

template tunnel_overlay_tile(x, y) { [x, y, 64, 39, -31, -38] }
template tmpl_tunnel_overlay_type(x) {
    tunnel_overlay_tile(  1+x,671)
    tunnel_overlay_tile( 70+x,671)
    tunnel_overlay_tile(139+x,671)
    tunnel_overlay_tile(208+x,671)
}

template tmpl_depot(x) {
    [    1+x,  715,   64,   61,   -31,  -34]
    [   70+x,  715,   64,   61,    -9,  -45]
    [  139+x,  715,   64,   61,   -31,  -34]
    [  208+x,  715,   64,   61,   -53,  -45]
    [  277+x,  715,   64,   61,   -53,  -45]
    [  346+x,  715,   64,   61,    -9,  -45]
}

template tmpl_pylons_catenary(y) {
    [   553,   627+y,    20,    28,    -9,   -25]
    [   578,   627+y,    20,    28,    -9,   -25]
    [   603,   627+y,    20,    28,    -9,   -25]
    [   628,   627+y,    20,    28,    -9,   -25]
    [   653,   627+y,    11,    28,    -4,   -28]
    [   669,   627+y,    11,    28,    -4,   -26]
    [   685,   627+y,    20,    28,   -10,   -24]
    [   710,   627+y,    20,    28,   -10,   -24]
}

template tmpl_wires_catenary(y) {
    [     1,     1+y,    32,    22,   -29, 	  -8]
    [    34,     1+y,    32,    22,    -1, 	  -8]
    [    67,     1+y,    32,     7,    -1, 	  -9]
    [   100,     1+y,     1,    22,     0, 	  -9]
    [   102,     1+y,    32,    30,   -29,    -9]		//5
    [   135,     1+y,    32,    15,    -1,     0]
    [   168,     1+y,    32,    15,   -29,     0]
    [   201,     1+y,    32,    30,    -1,    -9]
    [   234,     1+y,    32,    22,   -29,    -8]
    [   267,     1+y,    32,    22,    -1,    -8]		//10
    [   300,     1+y,    32,     7,    -1,    -9]
    [   333,     1+y,     1,    22,     0,    -9]
    [   335,     1+y,    32,    27,   -29,    -6]
    [   368,     1+y,    32,    12,    -1,     3]
    [   401,     1+y,    32,    12,   -29,     3]		//15
    [   434,     1+y,    32,    27,    -1,    -6]
    [     1,    32+y,    32,    22,   -29,    -8]
    [    34,    32+y,    32,    22,    -1,    -8]
    [    67,    32+y,    32,     7,    -1,    -9]
    [   100,    32+y,     1,    22,     0,    -9]		//20
    [   102,    32+y,    32,    30,   -29,    -9]
    [   135,    32+y,    32,    15,    -1,     0]
    [   168,    32+y,    32,    15,   -29,     0]
    [   201,    32+y,    32,    30,    -1,    -9]
    [   234,    32+y,    16,    12,   -29,     2]		//25
    [   251,    32+y,    16,    14,    -1,    -8]
    [   268,    32+y,    16,    14,   -13,    -8]
    [   285,    32+y,    16,    12,    15,     2]
}

template tmpl_fences(y) {
    [     1,     781+y,    32,    22,   -33,    -7]
    [    38,     781+y,    32,    22,     3,    -7]
    [    75,     781+y,     2,    38,     0,   -23]
    [    82,     781+y,    64,     7,   -31,    -7]
    [   151,     781+y,    32,    14,   -33,    -7]
    [   188,     781+y,    32,    14,     3,    -7]
    [   225,     781+y,    32,    30,   -33,   -15]
    [   262,     781+y,    32,    30,     3,   -15]
    [   299,     781+y,    32,    22,   -29,    -6]
    [   336,     781+y,    32,    22,    -1,    -6]
    [   373,     781+y,     2,    38,     0,   -23]
    [   380,     781+y,    64,     7,   -31,    -7]
    [   449,     781+y,    32,    14,   -29,    -6]
    [   486,     781+y,    32,    14,    -1,    -6]
    [   523,     781+y,    32,    30,   -29,   -14]
    [   560,     781+y,    32,    30,    -1,   -14]
}

template tmpl_fences_empty() {
	[1, 1, 1, 1, 0, 0]
	[1, 1, 1, 1, 0, 0]
	[1, 1, 1, 1, 0, 0]
	[1, 1, 1, 1, 0, 0]
	[1, 1, 1, 1, 0, 0]
	[1, 1, 1, 1, 0, 0]
	[1, 1, 1, 1, 0, 0]
	[1, 1, 1, 1, 0, 0]
}

template tmpl_gui_icon(x, y) { [x, y, 20, 20, 0, 0] }
template tmpl_gui_cursor(x, y) { [x, y, 32, 32, 0, 0] }
template tmpl_gui_gfx() {
    tmpl_gui_icon(  1, 867)
    tmpl_gui_icon( 22, 867)
    tmpl_gui_icon( 43, 867)
    tmpl_gui_icon( 64, 867)
    tmpl_gui_icon( 85, 867)
    tmpl_gui_icon(106, 867)
	tmpl_gui_icon(127, 867)
	tmpl_gui_icon(169, 867)

    tmpl_gui_cursor(  1, 888)
    tmpl_gui_cursor( 34, 888)
    tmpl_gui_cursor( 67, 888)
    tmpl_gui_cursor(100, 888)
    tmpl_gui_cursor(133, 888)
    tmpl_gui_cursor(166, 888)
	tmpl_gui_cursor(199, 888)
	tmpl_gui_cursor(232, 888)
}

template tmpl_gui_ttd() {
    tmpl_gui_icon(  1, 867)
    tmpl_gui_icon( 22, 867)
    tmpl_gui_icon( 43, 867)
    tmpl_gui_icon( 64, 867)
    tmpl_gui_icon( 85, 867)
    tmpl_gui_icon(106, 867)
	tmpl_gui_icon(127, 867)
	tmpl_gui_icon(148, 867)
    [    1,  921,   38,   30,    -4,  -15]
	[   40,  921,   72,   44,   -16,   -8]
	[  113,  921,   44,   34,   -21,   -2]
	[  158,  921,   72,   44,   -16,  -36]
	[  231,  921,   56,   43,    0,    0]
    tmpl_gui_cursor(288, 921)
    tmpl_gui_cursor(321, 921)
    tmpl_gui_cursor(354, 921)
}

template tmpl_UGUI_icon(x, y) { [x, y, 33, 33, 0, 0] }
template tmpl_UGUI_cursor(x, y) { [x, y, 30, 36, 0, 0] }
template tmpl_gui_UGUI() {
    tmpl_UGUI_icon(  1, 966)
    tmpl_UGUI_icon( 35, 966)
    tmpl_UGUI_icon( 69, 966)
    tmpl_UGUI_icon(103, 966)
    tmpl_UGUI_icon(137, 966)
    tmpl_UGUI_icon(171, 966)
	tmpl_UGUI_icon(205, 966)
	tmpl_UGUI_icon(239, 966)

    tmpl_UGUI_cursor(  1, 1000)
    tmpl_UGUI_cursor( 32, 1000)
    tmpl_UGUI_cursor( 63, 1000)
    tmpl_UGUI_cursor( 94, 1000)
    tmpl_UGUI_cursor(125, 1000)
    tmpl_UGUI_cursor(156, 1000)
	tmpl_UGUI_cursor(187, 1000)
	tmpl_UGUI_cursor(218, 1000)
}
//==================================================================================================================================
//												Rail Sprites
//==================================================================================================================================
//============================================================================
//						BRANCH LINE (SAAN)
//============================================================================
spriteset(switch_SAAN_overlay, "gfx/SAAN.png") {											// OVERLAY
    tmpl_overlay_type()
}

spriteset(normal_SAAN_precombined, "gfx/SAAN.png") {										// PRECOMBINED
    tmpl_precombined_type()
}
spriteset(snow_SAAN_precombined, "gfx/SAAN_1.png") {
    tmpl_precombined_type()
}
switch(FEAT_RAILTYPES, SELF, switch_SAAN_precombined, terrain_type) {
    TILETYPE_SNOW: snow_SAAN_precombined;
    normal_SAAN_precombined;
}

spriteset(normal_SAAN_underlay, "gfx/SAAN.png") {											// UNDERLAY
    tmpl_underlay_type(0)
}
spriteset(snow_SAAN_underlay, "gfx/SAAN.png") {
    tmpl_underlay_type(80)
}
switch(FEAT_RAILTYPES, SELF, switch_SAAN_underlay, terrain_type) {
    TILETYPE_SNOW: snow_SAAN_underlay;
    normal_SAAN_underlay;
}

spriteset(normal_SAAN_bridge, "gfx/SAAN.png") {												// BRIDGE
    tmpl_bridge_surfaces(0)
}
spriteset(snow_SAAN_bridge, "gfx/SAAN.png") {
    tmpl_bridge_surfaces(414)
}
switch(FEAT_RAILTYPES, SELF, switch_SAAN_bridge, terrain_type) {
    TILETYPE_SNOW: snow_SAAN_bridge;
    normal_SAAN_bridge;
}

spriteset(normal_SAAN_lc_right_townzone_edge, "gfx/SAAN.png") {								// LEVEL_CROSSING
    tmpl_level_crossings(0,0,0,0)
}
spriteset(snow_SAAN_lc_right_townzone_edge, "gfx/SAAN.png") {
    tmpl_level_crossings(0,45,0,0)
}
spriteset(normal_SAAN_lc_right_townzone, "gfx/SAAN.png") {
    tmpl_level_crossings(138,0,0,0)
}
spriteset(snow_SAAN_lc_right_townzone, "gfx/SAAN.png") {
    tmpl_level_crossings(138,45,0,0)
}
spriteset(normal_SAAN_lc_left_townzone_edge, "gfx/SAAN.png") {
    tmpl_level_crossings(0,0,276,0)
}
spriteset(snow_SAAN_lc_left_townzone_edge, "gfx/SAAN.png") {
    tmpl_level_crossings(0,45,276,0)
}
spriteset(normal_SAAN_lc_left_townzone, "gfx/SAAN.png") {
    tmpl_level_crossings(138,0,276,0)
}
spriteset(snow_SAAN_lc_left_townzone, "gfx/SAAN.png") {
    tmpl_level_crossings(138,45,276,0)
}
switch(FEAT_RAILTYPES, SELF, switch_SAAN_lc_right_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_SAAN_lc_right_townzone_edge; 
	normal_SAAN_lc_right_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_SAAN_lc_right_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_SAAN_lc_right_townzone; 
	normal_SAAN_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SAAN_lc_left_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_SAAN_lc_left_townzone_edge; 
	normal_SAAN_lc_left_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_SAAN_lc_left_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_SAAN_lc_left_townzone; 
	normal_SAAN_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SAAN_lc_right, town_zone) {
	TOWNZONE_EDGE: switch_SAAN_lc_right_townzone_edge;
	switch_SAAN_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SAAN_lc_left, town_zone) {
	TOWNZONE_EDGE: switch_SAAN_lc_left_townzone_edge;
	switch_SAAN_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SAAN_level_crossings, traffic_side) {
	TRAFFIC_SIDE_LEFT: switch_SAAN_lc_left;
	switch_SAAN_lc_right;
}

spriteset(normal_SAAN_tunnel_overlay, "gfx/SAAN.png") {										// TUNNEL_OVERLAY
    tmpl_tunnel_overlay_type(0)
}
spriteset(snow_SAAN_tunnel_overlay, "gfx/SAAN.png") {
    tmpl_tunnel_overlay_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_SAAN_tunnel_overlay, terrain_type) {
    TILETYPE_SNOW: snow_SAAN_tunnel_overlay;
    normal_SAAN_tunnel_overlay;
}

spriteset(normal_SAAN_tunnel_1, "gfx/SAAN.png") {											// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_SAAN_tunnel_1, "gfx/SAAN.png") {
    tmpl_tunnel_type(276)
}
spriteset(normal_SAAN_tunnel_0, "gfx/SAAN_1.png") {											// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_SAAN_tunnel_0, "gfx/SAAN_1.png") {
    tmpl_tunnel_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_SAAN_tunnel_1, terrain_type) {
    TILETYPE_SNOW: snow_SAAN_tunnel_1;
    normal_SAAN_tunnel_1;
}
switch(FEAT_RAILTYPES, SELF, switch_SAAN_tunnel_0, terrain_type) {
    TILETYPE_SNOW: snow_SAAN_tunnel_0;
    normal_SAAN_tunnel_0;
}
switch(FEAT_RAILTYPES, SELF, switch_SAAN_tunnel, param_tunnel) {
	1: switch_SAAN_tunnel_1;
	switch_SAAN_tunnel_0;
}

spriteset(normal_SAAN_depots_1, "gfx/SAAN.png") {											//DEPOTS
    tmpl_depot(0)
}
spriteset(snow_SAAN_depots_1, "gfx/SAAN.png") {
    tmpl_depot(414)
}
spriteset(normal_SAAN_depots_2, "gfx/SAAN_1.png") {
    tmpl_depot(0)
}
spriteset(snow_SAAN_depots_2, "gfx/SAAN_1.png") {
    tmpl_depot(414)
}
switch(FEAT_RAILTYPES, SELF, switch_SAAN_depots_1, terrain_type) {
    TILETYPE_SNOW: snow_SAAN_depots_1;
    normal_SAAN_depots_1;
}
switch(FEAT_RAILTYPES, SELF, switch_SAAN_depots_2, terrain_type) {
    TILETYPE_SNOW: snow_SAAN_depots_2;
    normal_SAAN_depots_2;
}
switch(FEAT_RAILTYPES, SELF, switch_SAAN_depots, max(build_date - date(1959,1,1),0)) {
	0: switch_SAAN_depots_1;
	switch_SAAN_depots_2;
}

spriteset(fences_SAAN, "gfx/SAAN.png") {
	tmpl_fences(0)
}
spriteset(fences_SAAN_cc, "gfx/SAAN.png") {
	tmpl_fences(43)
}
switch(FEAT_RAILTYPES, SELF, switch_SAAN_fences, param_fences) {
    0: fences_empty;
	2: fences_empty;
	3: fences_SAAN;
	4: fences_SAAN_cc;
}

spriteset(gui_SAAN_UGUI, "gfx/SAAN.png") {													//GUI						
    tmpl_gui_UGUI()
}
spriteset(gui_SAAN_opengfx, "gfx/SAAN.png") {												
    tmpl_gui_gfx()
}
spriteset(gui_SAAN_ttd, "gfx/SAAN.png") {
    tmpl_gui_ttd()
}
switch (FEAT_RAILTYPES, SELF, switch_SAAN_gui, param_gui) {
    1: gui_SAAN_opengfx;
    2: gui_SAAN_UGUI;
	gui_SAAN_ttd;
}
//============================================================================
//						MAIN LINE (SBAN)
//============================================================================
spriteset(switch_SBBN_overlay, "gfx/SBAN.png") {											// OVERLAY
    tmpl_overlay_type()
}

spriteset(normal_SBBN_precombined, "gfx/SBAN.png") {										// PRECOMBINED
    tmpl_precombined_type()
}
spriteset(snow_SBBN_precombined, "gfx/SBAE.png") {
    tmpl_precombined_type()
}
switch(FEAT_RAILTYPES, SELF, switch_SBBN_precombined, terrain_type) {
    TILETYPE_SNOW: snow_SBBN_precombined;
    normal_SBBN_precombined;
}

spriteset(normal_SBBN_underlay, "gfx/SBAN.png") {											// UNDERLAY
    tmpl_underlay_type(0)
}
spriteset(snow_SBBN_underlay, "gfx/SBAN.png") {
    tmpl_underlay_type(80)
}
switch(FEAT_RAILTYPES, SELF, switch_SBBN_underlay, terrain_type) {
    TILETYPE_SNOW: snow_SBBN_underlay;
    normal_SBBN_underlay;
}

spriteset(normal_SBBN_bridge, "gfx/SBAN.png") {												// BRIDGE
    tmpl_bridge_surfaces(0)
}
spriteset(snow_SBBN_bridge, "gfx/SBAN.png") {
    tmpl_bridge_surfaces(414)
}
switch(FEAT_RAILTYPES, SELF, switch_SBBN_bridge, terrain_type) {
    TILETYPE_SNOW: snow_SBBN_bridge;
    normal_SBBN_bridge;
}

spriteset(normal_SBBN_lc_right_townzone_edge_open, "gfx/SBAN.png") {						// LEVEL_CROSSING
    tmpl_level_crossings(0,0,0,0)
}
spriteset(normal_SBBN_lc_right_townzone_edge_closed, "gfx/SBAN.png") {
    tmpl_level_crossings(0,0,0,45)
}
spriteset(snow_SBBN_lc_right_townzone_edge_open, "gfx/SBAN.png") {
    tmpl_level_crossings(0,45,0,0)
}
spriteset(snow_SBBN_lc_right_townzone_edge_closed, "gfx/SBAN.png") {
    tmpl_level_crossings(0,45,0,45)
}
spriteset(normal_SBBN_lc_right_townzone_open, "gfx/SBAN.png") {
    tmpl_level_crossings(138,0,0,0)
}
spriteset(normal_SBBN_lc_right_townzone_closed, "gfx/SBAN.png") {
    tmpl_level_crossings(138,0,0,45)
}
spriteset(snow_SBBN_lc_right_townzone_open, "gfx/SBAN.png") {
    tmpl_level_crossings(138,45,0,0)
}
spriteset(snow_SBBN_lc_right_townzone_closed, "gfx/SBAN.png") {
    tmpl_level_crossings(138,45,0,45)
}
spriteset(normal_SBBN_lc_left_townzone_edge_open, "gfx/SBAN.png") {
    tmpl_level_crossings(0,0,276,0)
}
spriteset(normal_SBBN_lc_left_townzone_edge_closed, "gfx/SBAN.png") {
    tmpl_level_crossings(0,0,276,45)
}
spriteset(snow_SBBN_lc_left_townzone_edge_open, "gfx/SBAN.png") {
    tmpl_level_crossings(0,45,276,0)
}
spriteset(snow_SBBN_lc_left_townzone_edge_closed, "gfx/SBAN.png") {
    tmpl_level_crossings(0,45,276,45)
}
spriteset(normal_SBBN_lc_left_townzone_open, "gfx/SBAN.png") {
    tmpl_level_crossings(138,0,276,0)
}
spriteset(normal_SBBN_lc_left_townzone_closed, "gfx/SBAN.png") {
    tmpl_level_crossings(138,0,276,45)
}
spriteset(snow_SBBN_lc_left_townzone_open, "gfx/SBAN.png") {
    tmpl_level_crossings(138,45,276,0)
}
spriteset(snow_SBBN_lc_left_townzone_closed, "gfx/SBAN.png") {
    tmpl_level_crossings(138,45,276,45)
}
switch(FEAT_RAILTYPES, SELF, snow_SBBN_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_SBBN_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_SBBN_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_SBBN_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_SBBN_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_SBBN_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_SBBN_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_SBBN_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_SBBN_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_SBBN_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_SBBN_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_SBBN_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_SBBN_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_SBBN_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_SBBN_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_SBBN_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_SBBN_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_SBBN_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_SBBN_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_SBBN_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_SBBN_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_SBBN_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_SBBN_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_SBBN_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, switch_SBBN_lc_right_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_SBBN_lc_right_townzone_edge; 
	normal_SBBN_lc_right_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_SBBN_lc_right_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_SBBN_lc_right_townzone; 
	normal_SBBN_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SBBN_lc_left_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_SBBN_lc_left_townzone_edge; 
	normal_SBBN_lc_left_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_SBBN_lc_left_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_SBBN_lc_left_townzone; 
	normal_SBBN_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SBBN_lc_right, town_zone) {
	TOWNZONE_EDGE: switch_SBBN_lc_right_townzone_edge;
	switch_SBBN_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SBBN_lc_left, town_zone) {
	TOWNZONE_EDGE: switch_SBBN_lc_left_townzone_edge;
	switch_SBBN_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SBBN_level_crossings, traffic_side) {
	TRAFFIC_SIDE_LEFT: switch_SBBN_lc_left;
	switch_SBBN_lc_right;
}

spriteset(normal_SBBN_tunnel_overlay, "gfx/SBAN.png") {										// TUNNEL_OVERLAY
    tmpl_tunnel_overlay_type(0)
}
spriteset(snow_SBBN_tunnel_overlay, "gfx/SBAN.png") {
    tmpl_tunnel_overlay_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_SBBN_tunnel_overlay, terrain_type) {
    TILETYPE_SNOW: snow_SBBN_tunnel_overlay;
    normal_SBBN_tunnel_overlay;
}

spriteset(normal_SBBN_tunnel_1, "gfx/SBAN.png") {											// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_SBBN_tunnel_1, "gfx/SBAN.png") {
    tmpl_tunnel_type(276)
}
spriteset(normal_SBBN_tunnel_0, "gfx/SBAN_1.png") {											// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_SBBN_tunnel_0, "gfx/SBAN_1.png") {
    tmpl_tunnel_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_SBBN_tunnel_1, terrain_type) {
    TILETYPE_SNOW: snow_SBBN_tunnel_1;
    normal_SBBN_tunnel_1;
}
switch(FEAT_RAILTYPES, SELF, switch_SBBN_tunnel_0, terrain_type) {
    TILETYPE_SNOW: snow_SBBN_tunnel_0;
    normal_SBBN_tunnel_0;
}
switch(FEAT_RAILTYPES, SELF, switch_SBBN_tunnel, param_tunnel) {
	1: switch_SBBN_tunnel_1;
	switch_SBBN_tunnel_0;
}

spriteset(normal_SBBN_depots_1, "gfx/SBAN.png") {											//DEPOTS
    tmpl_depot(0)
}
spriteset(snow_SBBN_depots_1, "gfx/SBAN.png") {
    tmpl_depot(414)
}
spriteset(normal_SBBN_depots_2, "gfx/SBAN_1.png") {
    tmpl_depot(0)
}
spriteset(snow_SBBN_depots_2, "gfx/SBAN_1.png") {
    tmpl_depot(414)
}
switch(FEAT_RAILTYPES, SELF, switch_SBBN_depots_1, terrain_type) {
    TILETYPE_SNOW: snow_SBBN_depots_1;
    normal_SBBN_depots_1;
}
switch(FEAT_RAILTYPES, SELF, switch_SBBN_depots_2, terrain_type) {
    TILETYPE_SNOW: snow_SBBN_depots_2;
    normal_SBBN_depots_2;
}
switch(FEAT_RAILTYPES, SELF, switch_SBBN_depots, max(build_date - date(1979,1,1),0)) {
	0: switch_SBBN_depots_1;
	switch_SBBN_depots_2;
}

spriteset(fences_SBBN, "gfx/SBAN.png") {
	tmpl_fences(0)
}
spriteset(fences_SBBN_cc, "gfx/SBAN.png") {
	tmpl_fences(43)
}
switch(FEAT_RAILTYPES, SELF, switch_SBBN_fences, param_fences) {
    0: fences_empty;
	2: fences_empty;
	3: fences_SBBN;
	4: fences_SBBN_cc;
}

spriteset(gui_SBBN_UGUI, "gfx/SBAN.png") {													//GUI						
    tmpl_gui_UGUI()
}
spriteset(gui_SBBN_opengfx, "gfx/SBAN.png") {												//GUI
    tmpl_gui_gfx()
}
spriteset(gui_SBBN_ttd, "gfx/SBAN.png") {
    tmpl_gui_ttd()
}
switch (FEAT_RAILTYPES, SELF, switch_SBBN_gui, param_gui) {
    1: gui_SBBN_opengfx;
    2: gui_SBBN_UGUI;
	gui_SBBN_ttd;
}
//============================================================================
//						MAIN LINE EL(SBAE)
//============================================================================
spriteset(switch_SBB_comma_pylons_catenary_1, "gfx/SBAE.png") {									// PYLONS
    tmpl_pylons_catenary(0)
}
spriteset(switch_SBB_comma_pylons_catenary_2, "gfx/SBAE.png") {									// PYLONS
    tmpl_pylons_catenary(36)
}
switch (FEAT_RAILTYPES, SELF, switch_SBB_comma_pylons_catenary, random_bits) {
    1: switch_SBB_comma_pylons_catenary_2;
	switch_SBB_comma_pylons_catenary_1;
}

spriteset(normal_SBB_comma_depots_1, "gfx/SBAE.png") {											//DEPOTS
    tmpl_depot(0)
}
spriteset(snow_SBB_comma_depots_1, "gfx/SBAE.png") {
    tmpl_depot(414)
}
spriteset(normal_SBB_comma_depots_2, "gfx/SBAE_1.png") {
    tmpl_depot(0)
}
spriteset(snow_SBB_comma_depots_2, "gfx/SBAE_1.png") {
    tmpl_depot(414)
}
switch(FEAT_RAILTYPES, SELF, switch_SBB_comma_depots_1, terrain_type) {
    TILETYPE_SNOW: snow_SBB_comma_depots_1;
    normal_SBB_comma_depots_1;
}
switch(FEAT_RAILTYPES, SELF, switch_SBB_comma_depots_2, terrain_type) {
    TILETYPE_SNOW: snow_SBB_comma_depots_2;
    normal_SBB_comma_depots_2;
}
switch(FEAT_RAILTYPES, SELF, switch_SBB_comma_depots, max(build_date - date(1979,1,1),0)) {
	0: switch_SBB_comma_depots_1;
	switch_SBB_comma_depots_2;
}

spriteset(gui_SBB_comma_UGUI, "gfx/SBAE.png") {													//GUI						
    tmpl_gui_UGUI()
}
spriteset(gui_SBB_comma_opengfx, "gfx/SBAE.png") {												//GUI
    tmpl_gui_gfx()
}
spriteset(gui_SBB_comma_ttd, "gfx/SBAE.png") {
    tmpl_gui_ttd()
}
switch (FEAT_RAILTYPES, SELF, switch_SBB_comma_gui, param_gui) {
    1: gui_SBB_comma_opengfx;
    2: gui_SBB_comma_UGUI;
	gui_SBB_comma_ttd;
}
//============================================================================
//						MODERN MAIN LINE (SCAN)
//============================================================================
spriteset(switch_SDDN_overlay, "gfx/SCAN.png") {											// OVERLAY
    tmpl_overlay_type()
}

spriteset(normal_SDDN_precombined, "gfx/SCAN.png") {										// PRECOMBINED
    tmpl_precombined_type()
}
spriteset(snow_SDDN_precombined, "gfx/SCAE.png") {
    tmpl_precombined_type()
}
switch(FEAT_RAILTYPES, SELF, switch_SDDN_precombined, terrain_type) {
    TILETYPE_SNOW: snow_SDDN_precombined;
    normal_SDDN_precombined;
}

spriteset(normal_SDDN_underlay, "gfx/SCAN.png") {											// UNDERLAY
    tmpl_underlay_type(0)
}
spriteset(snow_SDDN_underlay, "gfx/SCAN.png") {
    tmpl_underlay_type(80)
}
switch(FEAT_RAILTYPES, SELF, switch_SDDN_underlay, terrain_type) {
    TILETYPE_SNOW: snow_SDDN_underlay;
    normal_SDDN_underlay;
}

spriteset(normal_SDDN_bridge, "gfx/SCAN.png") {												// BRIDGE
    tmpl_bridge_surfaces(0)
}
spriteset(snow_SDDN_bridge, "gfx/SCAN.png") {
    tmpl_bridge_surfaces(414)
}
switch(FEAT_RAILTYPES, SELF, switch_SDDN_bridge, terrain_type) {
    TILETYPE_SNOW: snow_SDDN_bridge;
    normal_SDDN_bridge;
}

spriteset(normal_SDDN_lc_right_townzone_edge_open, "gfx/SCAN.png") {						// LEVEL_CROSSING
    tmpl_level_crossings(0,0,0,0)
}
spriteset(normal_SDDN_lc_right_townzone_edge_closed, "gfx/SCAN.png") {
    tmpl_level_crossings(0,0,0,45)
}
spriteset(snow_SDDN_lc_right_townzone_edge_open, "gfx/SCAN.png") {
    tmpl_level_crossings(0,45,0,0)
}
spriteset(snow_SDDN_lc_right_townzone_edge_closed, "gfx/SCAN.png") {
    tmpl_level_crossings(0,45,0,45)
}
spriteset(normal_SDDN_lc_right_townzone_open, "gfx/SCAN.png") {
    tmpl_level_crossings(138,0,0,0)
}
spriteset(normal_SDDN_lc_right_townzone_closed, "gfx/SCAN.png") {
    tmpl_level_crossings(138,0,0,45)
}
spriteset(snow_SDDN_lc_right_townzone_open, "gfx/SCAN.png") {
    tmpl_level_crossings(138,45,0,0)
}
spriteset(snow_SDDN_lc_right_townzone_closed, "gfx/SCAN.png") {
    tmpl_level_crossings(138,45,0,45)
}
spriteset(normal_SDDN_lc_left_townzone_edge_open, "gfx/SCAN.png") {
    tmpl_level_crossings(0,0,276,0)
}
spriteset(normal_SDDN_lc_left_townzone_edge_closed, "gfx/SCAN.png") {
    tmpl_level_crossings(0,0,276,45)
}
spriteset(snow_SDDN_lc_left_townzone_edge_open, "gfx/SCAN.png") {
    tmpl_level_crossings(0,45,276,0)
}
spriteset(snow_SDDN_lc_left_townzone_edge_closed, "gfx/SCAN.png") {
    tmpl_level_crossings(0,45,276,45)
}
spriteset(normal_SDDN_lc_left_townzone_open, "gfx/SCAN.png") {
    tmpl_level_crossings(138,0,276,0)
}
spriteset(normal_SDDN_lc_left_townzone_closed, "gfx/SCAN.png") {
    tmpl_level_crossings(138,0,276,45)
}
spriteset(snow_SDDN_lc_left_townzone_open, "gfx/SCAN.png") {
    tmpl_level_crossings(138,45,276,0)
}
spriteset(snow_SDDN_lc_left_townzone_closed, "gfx/SCAN.png") {
    tmpl_level_crossings(138,45,276,45)
}
switch(FEAT_RAILTYPES, SELF, snow_SDDN_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_SDDN_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_SDDN_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_SDDN_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_SDDN_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_SDDN_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_SDDN_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_SDDN_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_SDDN_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_SDDN_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_SDDN_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_SDDN_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_SDDN_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_SDDN_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_SDDN_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_SDDN_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_SDDN_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_SDDN_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_SDDN_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_SDDN_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_SDDN_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_SDDN_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_SDDN_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_SDDN_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, switch_SDDN_lc_right_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_SDDN_lc_right_townzone_edge; 
	normal_SDDN_lc_right_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_SDDN_lc_right_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_SDDN_lc_right_townzone; 
	normal_SDDN_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SDDN_lc_left_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_SDDN_lc_left_townzone_edge; 
	normal_SDDN_lc_left_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_SDDN_lc_left_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_SDDN_lc_left_townzone; 
	normal_SDDN_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SDDN_lc_right, town_zone) {
	TOWNZONE_EDGE: switch_SDDN_lc_right_townzone_edge;
	switch_SDDN_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SDDN_lc_left, town_zone) {
	TOWNZONE_EDGE: switch_SDDN_lc_left_townzone_edge;
	switch_SDDN_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SDDN_level_crossings, traffic_side) {
	TRAFFIC_SIDE_LEFT: switch_SDDN_lc_left;
	switch_SDDN_lc_right;
}

spriteset(normal_SDDN_tunnel_overlay, "gfx/SCAN.png") {										// TUNNEL_OVERLAY
    tmpl_tunnel_overlay_type(0)
}
spriteset(snow_SDDN_tunnel_overlay, "gfx/SCAN.png") {
    tmpl_tunnel_overlay_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_SDDN_tunnel_overlay, terrain_type) {
    TILETYPE_SNOW: snow_SDDN_tunnel_overlay;
    normal_SDDN_tunnel_overlay;
}

spriteset(normal_SDDN_tunnel_1, "gfx/SCAN.png") {											// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_SDDN_tunnel_1, "gfx/SCAN.png") {
    tmpl_tunnel_type(276)
}
spriteset(normal_SDDN_tunnel_0, "gfx/SCAE.png") {											// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_SDDN_tunnel_0, "gfx/SCAE.png") {
    tmpl_tunnel_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_SDDN_tunnel_1, terrain_type) {
    TILETYPE_SNOW: snow_SDDN_tunnel_1;
    normal_SDDN_tunnel_1;
}
switch(FEAT_RAILTYPES, SELF, switch_SDDN_tunnel_0, terrain_type) {
    TILETYPE_SNOW: snow_SDDN_tunnel_0;
    normal_SDDN_tunnel_0;
}
switch(FEAT_RAILTYPES, SELF, switch_SDDN_tunnel, param_tunnel) {
	1: switch_SDDN_tunnel_1;
	switch_SDDN_tunnel_0;
}

spriteset(normal_SDDN_depots, "gfx/SCAN.png") {												//DEPOTS
    tmpl_depot(0)
}
spriteset(snow_SDDN_depots, "gfx/SCAN.png") {
    tmpl_depot(414)
}
switch(FEAT_RAILTYPES, SELF, switch_SDDN_depots, terrain_type) {
    TILETYPE_SNOW: snow_SDDN_depots;
    normal_SDDN_depots;
}

spriteset(fences_SDDN, "gfx/SCAN.png") {													//FENCES
	tmpl_fences(0)
}
spriteset(fences_SDDN_cc, "gfx/SCAN.png") {													//FENCES
	tmpl_fences(43)
}
switch(FEAT_RAILTYPES, SELF, switch_SDDN_fences, param_fences) {
    0: fences_empty;
	2: fences_empty;
	3: fences_SDDN;
	4: fences_SDDN_cc;
}

spriteset(gui_SDDN_UGUI, "gfx/SCAN.png") {													//GUI
    tmpl_gui_UGUI()
}
spriteset(gui_SDDN_opengfx, "gfx/SCAN.png") {												//GUI
    tmpl_gui_gfx()
}
spriteset(gui_SDDN_ttd, "gfx/SCAN.png") {
    tmpl_gui_ttd()
}
switch (FEAT_RAILTYPES, SELF, switch_SDDN_gui, param_gui) {
    1: gui_SDDN_opengfx;
    2: gui_SDDN_UGUI;
	gui_SDDN_ttd;
}
//============================================================================
//						MODERN MAIN LINE EL(SCAE)
//============================================================================
spriteset(switch_SDD_asterisk_pylons_catenary_1, "gfx/SCAE.png") {									// PYLONS
    tmpl_pylons_catenary(0)
}
spriteset(switch_SDD_asterisk_pylons_catenary_2, "gfx/SCAE.png") {									// PYLONS
    tmpl_pylons_catenary(36)
}
switch (FEAT_RAILTYPES, SELF, switch_SDD_asterisk_pylons_catenary, random_bits) {
    1: switch_SDD_asterisk_pylons_catenary_2;
	switch_SDD_asterisk_pylons_catenary_1;
}

spriteset(normal_SDD_asterisk_depots, "gfx/SCAE.png") {												//DEPOTS
    tmpl_depot(0)
}
spriteset(snow_SDD_asterisk_depots, "gfx/SCAE.png") {
    tmpl_depot(414)
}
switch(FEAT_RAILTYPES, SELF, switch_SDD_asterisk_depots, terrain_type) {
    TILETYPE_SNOW: snow_SDD_asterisk_depots;
    normal_SDD_asterisk_depots;
}

spriteset(gui_SDD_asterisk_UGUI, "gfx/SCAE.png") {													//GUI						
    tmpl_gui_UGUI()
}
spriteset(gui_SDD_asterisk_opengfx, "gfx/SCAE.png") {												//GUI
    tmpl_gui_gfx()
}
spriteset(gui_SDD_asterisk_ttd, "gfx/SCAE.png") {
    tmpl_gui_ttd()
}
switch (FEAT_RAILTYPES, SELF, switch_SDD_asterisk_gui, param_gui) {
    1: gui_SDD_asterisk_opengfx;
    2: gui_SDD_asterisk_UGUI;
	gui_SDD_asterisk_ttd;
}
//============================================================================
//						HIGHSPEED LINE (SDAN)
//============================================================================
spriteset(switch_SEDN_overlay, "gfx/SDAN.png") {											// OVERLAY
    tmpl_overlay_type()
}

spriteset(normal_SEDN_precombined, "gfx/SDAN.png") {										// PRECOMBINED
    tmpl_precombined_type()
}
spriteset(snow_SEDN_precombined, "gfx/SDAE.png") {
    tmpl_precombined_type()
}
switch(FEAT_RAILTYPES, SELF, switch_SEDN_precombined, terrain_type) {
    TILETYPE_SNOW: snow_SEDN_precombined;
    normal_SEDN_precombined;
}

spriteset(normal_SEDN_underlay, "gfx/SDAN.png") {											// UNDERLAY
    tmpl_underlay_type(0)
}
spriteset(snow_SEDN_underlay, "gfx/SDAN.png") {
    tmpl_underlay_type(80)
}
switch(FEAT_RAILTYPES, SELF, switch_SEDN_underlay, terrain_type) {
    TILETYPE_SNOW: snow_SEDN_underlay;
    normal_SEDN_underlay;
}

spriteset(normal_SEDN_bridge, "gfx/SDAN.png") {												// BRIDGE
    tmpl_bridge_surfaces(0)
}
spriteset(snow_SEDN_bridge, "gfx/SDAN.png") {
    tmpl_bridge_surfaces(414)
}
switch(FEAT_RAILTYPES, SELF, switch_SEDN_bridge, terrain_type) {
    TILETYPE_SNOW: snow_SEDN_bridge;
    normal_SEDN_bridge;
}

spriteset(normal_SEDN_lc_right_townzone_edge_open, "gfx/SDAN.png") {						// LEVEL_CROSSING
    tmpl_level_crossings(0,0,0,0)
}
spriteset(normal_SEDN_lc_right_townzone_edge_closed, "gfx/SDAN.png") {
    tmpl_level_crossings(0,0,0,45)
}
spriteset(snow_SEDN_lc_right_townzone_edge_open, "gfx/SDAN.png") {
    tmpl_level_crossings(0,45,0,0)
}
spriteset(snow_SEDN_lc_right_townzone_edge_closed, "gfx/SDAN.png") {
    tmpl_level_crossings(0,45,0,45)
}
spriteset(normal_SEDN_lc_right_townzone_open, "gfx/SDAN.png") {
    tmpl_level_crossings(138,0,0,0)
}
spriteset(normal_SEDN_lc_right_townzone_closed, "gfx/SDAN.png") {
    tmpl_level_crossings(138,0,0,45)
}
spriteset(snow_SEDN_lc_right_townzone_open, "gfx/SDAN.png") {
    tmpl_level_crossings(138,45,0,0)
}
spriteset(snow_SEDN_lc_right_townzone_closed, "gfx/SDAN.png") {
    tmpl_level_crossings(138,45,0,45)
}
spriteset(normal_SEDN_lc_left_townzone_edge_open, "gfx/SDAN.png") {
    tmpl_level_crossings(0,0,276,0)
}
spriteset(normal_SEDN_lc_left_townzone_edge_closed, "gfx/SDAN.png") {
    tmpl_level_crossings(0,0,276,45)
}
spriteset(snow_SEDN_lc_left_townzone_edge_open, "gfx/SDAN.png") {
    tmpl_level_crossings(0,45,276,0)
}
spriteset(snow_SEDN_lc_left_townzone_edge_closed, "gfx/SDAN.png") {
    tmpl_level_crossings(0,45,276,45)
}
spriteset(normal_SEDN_lc_left_townzone_open, "gfx/SDAN.png") {
    tmpl_level_crossings(138,0,276,0)
}
spriteset(normal_SEDN_lc_left_townzone_closed, "gfx/SDAN.png") {
    tmpl_level_crossings(138,0,276,45)
}
spriteset(snow_SEDN_lc_left_townzone_open, "gfx/SDAN.png") {
    tmpl_level_crossings(138,45,276,0)
}
spriteset(snow_SEDN_lc_left_townzone_closed, "gfx/SDAN.png") {
    tmpl_level_crossings(138,45,276,45)
}
switch(FEAT_RAILTYPES, SELF, snow_SEDN_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_SEDN_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_SEDN_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_SEDN_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_SEDN_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_SEDN_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_SEDN_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_SEDN_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_SEDN_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_SEDN_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_SEDN_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_SEDN_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_SEDN_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_SEDN_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_SEDN_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_SEDN_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_SEDN_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_SEDN_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_SEDN_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_SEDN_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_SEDN_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_SEDN_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_SEDN_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_SEDN_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, switch_SEDN_lc_right_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_SEDN_lc_right_townzone_edge; 
	normal_SEDN_lc_right_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_SEDN_lc_right_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_SEDN_lc_right_townzone; 
	normal_SEDN_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SEDN_lc_left_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_SEDN_lc_left_townzone_edge; 
	normal_SEDN_lc_left_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_SEDN_lc_left_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_SEDN_lc_left_townzone; 
	normal_SEDN_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SEDN_lc_right, town_zone) {
	TOWNZONE_EDGE: switch_SEDN_lc_right_townzone_edge;
	switch_SEDN_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SEDN_lc_left, town_zone) {
	TOWNZONE_EDGE: switch_SEDN_lc_left_townzone_edge;
	switch_SEDN_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SEDN_level_crossings, traffic_side) {
	TRAFFIC_SIDE_LEFT: switch_SEDN_lc_left;
	switch_SEDN_lc_right;
}

spriteset(normal_SEDN_tunnel_overlay, "gfx/SDAN.png") {											// TUNNEL_OVERLAY
    tmpl_tunnel_overlay_type(0)
}
spriteset(snow_SEDN_tunnel_overlay, "gfx/SDAN.png") {
    tmpl_tunnel_overlay_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_SEDN_tunnel_overlay, terrain_type) {
    TILETYPE_SNOW: snow_SEDN_tunnel_overlay;
    normal_SEDN_tunnel_overlay;
}

spriteset(normal_SEDN_tunnel_1, "gfx/SDAN.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_SEDN_tunnel_1, "gfx/SDAN.png") {
    tmpl_tunnel_type(276)
}
spriteset(normal_SEDN_tunnel_0, "gfx/SDAE.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_SEDN_tunnel_0, "gfx/SDAE.png") {
    tmpl_tunnel_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_SEDN_tunnel_1, terrain_type) {
    TILETYPE_SNOW: snow_SEDN_tunnel_1;
    normal_SEDN_tunnel_1;
}
switch(FEAT_RAILTYPES, SELF, switch_SEDN_tunnel_0, terrain_type) {
    TILETYPE_SNOW: snow_SEDN_tunnel_0;
    normal_SEDN_tunnel_0;
}
switch(FEAT_RAILTYPES, SELF, switch_SEDN_tunnel, param_tunnel) {
	1: switch_SEDN_tunnel_1;
	switch_SEDN_tunnel_0;
}

spriteset(normal_SEDN_depots, "gfx/SDAN.png") {													//DEPOTS
    tmpl_depot(0)
}
spriteset(snow_SEDN_depots, "gfx/SDAN.png") {
    tmpl_depot(414)
}
switch(FEAT_RAILTYPES, SELF, switch_SEDN_depots, terrain_type) {
    TILETYPE_SNOW: snow_SEDN_depots;
    normal_SEDN_depots;
}

spriteset(fences_SEDN, "gfx/SDAN.png") {														//FENCES
	tmpl_fences(0)
}
spriteset(fences_SEDN_cc, "gfx/SDAN.png") {														//FENCES
	tmpl_fences(43)
}
switch(FEAT_RAILTYPES, SELF, switch_SEDN_fences, param_fences) {
    0: fences_empty;
	2: fences_empty;
	3: fences_SEDN;
	4: fences_SEDN_cc;
}

spriteset(gui_SEDN_UGUI, "gfx/SDAN.png") {														//GUI						
    tmpl_gui_UGUI()
}
spriteset(gui_SEDN_opengfx, "gfx/SDAN.png") {													//GUI
    tmpl_gui_gfx()
}
spriteset(gui_SEDN_ttd, "gfx/SDAN.png") {
    tmpl_gui_ttd()
}
switch (FEAT_RAILTYPES, SELF, switch_SEDN_gui, param_gui) {
    1: gui_SEDN_opengfx;
    2: gui_SEDN_UGUI;
	gui_SEDN_ttd;
}
//============================================================================
//						HIGHSPEED MAIN LINE EL(SDAE)
//============================================================================
spriteset(normal_SED_asterisk_depots, "gfx/SDAE.png") {													//DEPOTS
    tmpl_depot(0)
}
spriteset(snow_SED_asterisk_depots, "gfx/SDAE.png") {
    tmpl_depot(414)
}
switch(FEAT_RAILTYPES, SELF, switch_SED_asterisk_depots, terrain_type) {
    TILETYPE_SNOW: snow_SED_asterisk_depots;
    normal_SED_asterisk_depots;
}


spriteset(switch_SED_asterisk_pylons_catenary_1, "gfx/SDAE.png") {										// PYLONS
    tmpl_pylons_catenary(0)
}
spriteset(switch_SED_asterisk_pylons_catenary_2, "gfx/SDAE.png") {										// PYLONS
    tmpl_pylons_catenary(36)
}
switch (FEAT_RAILTYPES, SELF, switch_SED_asterisk_pylons_catenary, random_bits) {
	1: switch_SED_asterisk_pylons_catenary_2;
	switch_SED_asterisk_pylons_catenary_1;
}

spriteset(gui_SED_asterisk_UGUI, "gfx/SDAE.png") {														//GUI						
    tmpl_gui_UGUI()
}
spriteset(gui_SED_asterisk_opengfx, "gfx/SDAE.png") {													//GUI
    tmpl_gui_gfx()
}
spriteset(gui_SED_asterisk_ttd, "gfx/SDAE.png") {
    tmpl_gui_ttd()
}
switch (FEAT_RAILTYPES, SELF, switch_SED_asterisk_gui, param_gui) {
    1: gui_SED_asterisk_opengfx;
    2: gui_SED_asterisk_UGUI;
	gui_SED_asterisk_ttd;
}
//============================================================================
//						MODERN HIGHSPEED LINE EL (SEAE)
//============================================================================
spriteset(switch_SFBA_overlay, "gfx/SEAE.png") {												// OVERLAY
    tmpl_overlay_type()
}

spriteset(normal_SFBA_precombined, "gfx/SEAE.png") {											// PRECOMBINED
    tmpl_precombined_type()
}
spriteset(snow_SFBA_precombined, "gfx/SEAE_1.png") {
    tmpl_precombined_type()
}
switch(FEAT_RAILTYPES, SELF, switch_SFBA_precombined, terrain_type) {
    TILETYPE_SNOW: snow_SFBA_precombined;
    normal_SFBA_precombined;
}

spriteset(normal_SFBA_underlay, "gfx/SEAE.png") {												// UNDERLAY
    tmpl_underlay_type(0)
}
spriteset(snow_SFBA_underlay, "gfx/SEAE.png") {
    tmpl_underlay_type(80)
}
switch(FEAT_RAILTYPES, SELF, switch_SFBA_underlay, terrain_type) {
    TILETYPE_SNOW: snow_SFBA_underlay;
    normal_SFBA_underlay;
}

spriteset(normal_SFBA_bridge, "gfx/SEAE.png") {													// BRIDGE
    tmpl_bridge_surfaces(0)
}
spriteset(snow_SFBA_bridge, "gfx/SEAE.png") {
    tmpl_bridge_surfaces(414)
}
switch(FEAT_RAILTYPES, SELF, switch_SFBA_bridge, terrain_type) {
    TILETYPE_SNOW: snow_SFBA_bridge;
    normal_SFBA_bridge;
}

spriteset(normal_SFBA_depots, "gfx/SEAE.png") {													//DEPOTS
    tmpl_depot(0)
}
spriteset(snow_SFBA_depots, "gfx/SEAE.png") {
    tmpl_depot(414)
}
switch(FEAT_RAILTYPES, SELF, switch_SFBA_depots, terrain_type) {
    TILETYPE_SNOW: snow_SFBA_depots;
    normal_SFBA_depots;
}


spriteset(switch_SFBA_pylons_catenary_1, "gfx/SEAE.png") {										// PYLONS
    tmpl_pylons_catenary(0)
}
spriteset(switch_SFBA_pylons_catenary_2, "gfx/SEAE.png") {
    tmpl_pylons_catenary(36)
}
switch (FEAT_RAILTYPES, SELF, switch_SFBA_pylons_catenary, random_bits) {
    1: switch_SFBA_pylons_catenary_2;
	switch_SFBA_pylons_catenary_1;
}

spriteset(normal_SFBA_tunnel_overlay, "gfx/SEAE.png") {											// TUNNEL_OVERLAY
    tmpl_tunnel_overlay_type(0)
}
spriteset(snow_SFBA_tunnel_overlay, "gfx/SEAE.png") {
    tmpl_tunnel_overlay_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_SFBA_tunnel_overlay, terrain_type) {
    TILETYPE_SNOW: snow_SFBA_tunnel_overlay;
    normal_SFBA_tunnel_overlay;
}

spriteset(normal_SFBA_tunnel_1, "gfx/SEAE.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_SFBA_tunnel_1, "gfx/SEAE.png") {
    tmpl_tunnel_type(276)
}
spriteset(normal_SFBA_tunnel_0, "gfx/SEAE_1.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_SFBA_tunnel_0, "gfx/SEAE_1.png") {
    tmpl_tunnel_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_SFBA_tunnel_1, terrain_type) {
    TILETYPE_SNOW: snow_SFBA_tunnel_1;
    normal_SFBA_tunnel_1;
}
switch(FEAT_RAILTYPES, SELF, switch_SFBA_tunnel_0, terrain_type) {
    TILETYPE_SNOW: snow_SFBA_tunnel_0;
    normal_SFBA_tunnel_0;
}
switch(FEAT_RAILTYPES, SELF, switch_SFBA_tunnel, param_tunnel) {
	1: switch_SFBA_tunnel_1;
	switch_SFBA_tunnel_0;
}

spriteset(fences_SFBA, "gfx/SEAE.png") {														//FENCES
	tmpl_fences(0)
}
spriteset(fences_SFBA_cc, "gfx/SEAE.png") {														//FENCES
	tmpl_fences(43)
}
switch(FEAT_RAILTYPES, SELF, switch_SFBA_fences, param_fences) {
    0: fences_empty;
	2: fences_SFBA;
	3: fences_SFBA;
	4: fences_SFBA_cc;
}

spriteset(gui_SFBA_UGUI, "gfx/SEAE.png") {														//GUI						
    tmpl_gui_UGUI()
}
spriteset(gui_SFBA_opengfx, "gfx/SEAE.png") {													//GUI
    tmpl_gui_gfx()
}
spriteset(gui_SFBA_ttd, "gfx/SEAE.png") {
    tmpl_gui_ttd()
}
switch (FEAT_RAILTYPES, SELF, switch_SFBA_gui, param_gui) {
    1: gui_SFBA_opengfx;
    2: gui_SFBA_UGUI;
	gui_SFBA_ttd;
}
//============================================================================
//						VERY HIGHSPEED LINE EL (SFAE)
//============================================================================
spriteset(switch_SGAA_overlay, "gfx/SFAE.png") {												// OVERLAY
    tmpl_overlay_type()
}

spriteset(normal_SGAA_precombined, "gfx/SFAE.png") {											// PRECOMBINED
    tmpl_precombined_type()
}
spriteset(snow_SGAA_precombined, "gfx/SFAE_1.png") {
    tmpl_precombined_type()
}
switch(FEAT_RAILTYPES, SELF, switch_SGAA_precombined, terrain_type) {
    TILETYPE_SNOW: snow_SGAA_precombined;
    normal_SGAA_precombined;
}

spriteset(normal_SGAA_underlay, "gfx/SFAE.png") {												// UNDERLAY
    tmpl_underlay_type(0)
}
spriteset(snow_SGAA_underlay, "gfx/SFAE.png") {
    tmpl_underlay_type(80)
}
switch(FEAT_RAILTYPES, SELF, switch_SGAA_underlay, terrain_type) {
    TILETYPE_SNOW: snow_SGAA_underlay;
    normal_SGAA_underlay;
}

spriteset(normal_SGAA_bridge, "gfx/SFAE.png") {													// BRIDGE
    tmpl_bridge_surfaces(0)
}
spriteset(snow_SGAA_bridge, "gfx/SFAE.png") {
    tmpl_bridge_surfaces(414)
}
switch(FEAT_RAILTYPES, SELF, switch_SGAA_bridge, terrain_type) {
    TILETYPE_SNOW: snow_SGAA_bridge;
    normal_SGAA_bridge;
}

spriteset(normal_SGAA_depots, "gfx/SFAE.png") {													//DEPOTS
    tmpl_depot(0)
}
spriteset(snow_SGAA_depots, "gfx/SFAE.png") {
    tmpl_depot(414)
}
switch(FEAT_RAILTYPES, SELF, switch_SGAA_depots, terrain_type) {
    TILETYPE_SNOW: snow_SGAA_depots;
    normal_SGAA_depots;
}

spriteset(switch_SGAA_pylons_catenary_1, "gfx/SFAE.png") {										// PYLONS
    tmpl_pylons_catenary(0)
}
spriteset(switch_SGAA_pylons_catenary_2, "gfx/SFAE.png") {
    tmpl_pylons_catenary(36)
}
switch (FEAT_RAILTYPES, SELF, switch_SGAA_pylons_catenary, random_bits) {
    1: switch_SGAA_pylons_catenary_2;
	switch_SGAA_pylons_catenary_1;
}

spriteset(normal_SGAA_tunnel_overlay, "gfx/SFAE.png") {											// TUNNEL_OVERLAY
    tmpl_tunnel_overlay_type(0)
}
spriteset(snow_SGAA_tunnel_overlay, "gfx/SFAE.png") {
    tmpl_tunnel_overlay_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_SGAA_tunnel_overlay, terrain_type) {
    TILETYPE_SNOW: snow_SGAA_tunnel_overlay;
    normal_SGAA_tunnel_overlay;
}

spriteset(normal_SGAA_tunnel_1, "gfx/SFAE.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_SGAA_tunnel_1, "gfx/SFAE.png") {
    tmpl_tunnel_type(276)
}
spriteset(normal_SGAA_tunnel_0, "gfx/SFAE_1.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_SGAA_tunnel_0, "gfx/SFAE_1.png") {
    tmpl_tunnel_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_SGAA_tunnel_1, terrain_type) {
    TILETYPE_SNOW: snow_SGAA_tunnel_1;
    normal_SGAA_tunnel_1;
}
switch(FEAT_RAILTYPES, SELF, switch_SGAA_tunnel_0, terrain_type) {
    TILETYPE_SNOW: snow_SGAA_tunnel_0;
    normal_SGAA_tunnel_0;
}
switch(FEAT_RAILTYPES, SELF, switch_SGAA_tunnel, param_tunnel) {
	1: switch_SGAA_tunnel_1;
	switch_SGAA_tunnel_0;
}

spriteset(fences_SGAA, "gfx/SFAE.png") {														//FENCES
	tmpl_fences(0)
}
spriteset(fences_SGAA_cc, "gfx/SFAE.png") {														//FENCES
	tmpl_fences(43)
}
switch(FEAT_RAILTYPES, SELF, switch_SGAA_fences, param_fences) {
    0: fences_empty;
	2: fences_SGAA;
	3: fences_SGAA;
	4: fences_SGAA_cc;
}

spriteset(gui_SGAA_UGUI, "gfx/SFAE.png") {														//GUI						
    tmpl_gui_UGUI()
}
spriteset(gui_SGAA_opengfx, "gfx/SFAE.png") {													//GUI
    tmpl_gui_gfx()
}
spriteset(gui_SGAA_ttd, "gfx/SFAE.png") {
    tmpl_gui_ttd()
}
switch (FEAT_RAILTYPES, SELF, switch_SGAA_gui, param_gui) {
    1: gui_SGAA_opengfx;
    2: gui_SGAA_UGUI;
	gui_SGAA_ttd;
}
//============================================================================
//						URBAN MAIN LINE EL (SUAE)
//============================================================================
spriteset(switch_SUF_asterisk_overlay, "gfx/SUAE.png") {												// OVERLAY
    tmpl_overlay_type()
}

spriteset(normal_SUF_asterisk_precombined, "gfx/SUAE.png") {											// PRECOMBINED
    tmpl_precombined_type()
}
spriteset(snow_SUF_asterisk_precombined, "gfx/SUAE_1.png") {
    tmpl_precombined_type()
}
switch(FEAT_RAILTYPES, SELF, switch_SUF_asterisk_precombined, terrain_type) {
    TILETYPE_SNOW: snow_SUF_asterisk_precombined;
    normal_SUF_asterisk_precombined;
}

spriteset(normal_SUF_asterisk_underlay, "gfx/SUAE.png") {												// UNDERLAY
    tmpl_underlay_type(0)
}
spriteset(snow_SUF_asterisk_underlay, "gfx/SUAE.png") {
    tmpl_underlay_type(80)
}
switch(FEAT_RAILTYPES, SELF, switch_SUF_asterisk_underlay, terrain_type) {
    TILETYPE_SNOW: snow_SUF_asterisk_underlay;
    normal_SUF_asterisk_underlay;
}

spriteset(normal_SUF_asterisk_bridge, "gfx/SUAE.png") {													// BRIDGE
    tmpl_bridge_surfaces(0)
}
spriteset(snow_SUF_asterisk_bridge, "gfx/SUAE.png") {
    tmpl_bridge_surfaces(414)
}
switch(FEAT_RAILTYPES, SELF, switch_SUF_asterisk_bridge, terrain_type) {
    TILETYPE_SNOW: snow_SUF_asterisk_bridge;
    normal_SUF_asterisk_bridge;
}

spriteset(normal_SUF_asterisk_lc_right_townzone_edge_open, "gfx/SUAE.png") {							// LEVEL_CROSSING
    tmpl_level_crossings(0,0,0,0)
}
spriteset(normal_SUF_asterisk_lc_right_townzone_edge_closed, "gfx/SUAE.png") {
    tmpl_level_crossings(0,0,0,45)
}
spriteset(snow_SUF_asterisk_lc_right_townzone_edge_open, "gfx/SUAE.png") {
    tmpl_level_crossings(0,45,0,0)
}
spriteset(snow_SUF_asterisk_lc_right_townzone_edge_closed, "gfx/SUAE.png") {
    tmpl_level_crossings(0,45,0,45)
}
spriteset(normal_SUF_asterisk_lc_right_townzone_open, "gfx/SUAE.png") {
    tmpl_level_crossings(138,0,0,0)
}
spriteset(normal_SUF_asterisk_lc_right_townzone_closed, "gfx/SUAE.png") {
    tmpl_level_crossings(138,0,0,45)
}
spriteset(snow_SUF_asterisk_lc_right_townzone_open, "gfx/SUAE.png") {
    tmpl_level_crossings(138,45,0,0)
}
spriteset(snow_SUF_asterisk_lc_right_townzone_closed, "gfx/SUAE.png") {
    tmpl_level_crossings(138,45,0,45)
}
spriteset(normal_SUF_asterisk_lc_left_townzone_edge_open, "gfx/SUAE.png") {
    tmpl_level_crossings(0,0,276,0)
}
spriteset(normal_SUF_asterisk_lc_left_townzone_edge_closed, "gfx/SUAE.png") {
    tmpl_level_crossings(0,0,276,45)
}
spriteset(snow_SUF_asterisk_lc_left_townzone_edge_open, "gfx/SUAE.png") {
    tmpl_level_crossings(0,45,276,0)
}
spriteset(snow_SUF_asterisk_lc_left_townzone_edge_closed, "gfx/SUAE.png") {
    tmpl_level_crossings(0,45,276,45)
}
spriteset(normal_SUF_asterisk_lc_left_townzone_open, "gfx/SUAE.png") {
    tmpl_level_crossings(138,0,276,0)
}
spriteset(normal_SUF_asterisk_lc_left_townzone_closed, "gfx/SUAE.png") {
    tmpl_level_crossings(138,0,276,45)
}
spriteset(snow_SUF_asterisk_lc_left_townzone_open, "gfx/SUAE.png") {
    tmpl_level_crossings(138,45,276,0)
}
spriteset(snow_SUF_asterisk_lc_left_townzone_closed, "gfx/SUAE.png") {
    tmpl_level_crossings(138,45,276,45)
}
switch(FEAT_RAILTYPES, SELF, snow_SUF_asterisk_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_SUF_asterisk_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_SUF_asterisk_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_SUF_asterisk_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_SUF_asterisk_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_SUF_asterisk_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_SUF_asterisk_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_SUF_asterisk_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_SUF_asterisk_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_SUF_asterisk_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_SUF_asterisk_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_SUF_asterisk_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_SUF_asterisk_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_SUF_asterisk_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_SUF_asterisk_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_SUF_asterisk_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_SUF_asterisk_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_SUF_asterisk_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_SUF_asterisk_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_SUF_asterisk_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_SUF_asterisk_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_SUF_asterisk_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_SUF_asterisk_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_SUF_asterisk_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, switch_SUF_asterisk_lc_right_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_SUF_asterisk_lc_right_townzone_edge; 
	normal_SUF_asterisk_lc_right_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_SUF_asterisk_lc_right_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_SUF_asterisk_lc_right_townzone; 
	normal_SUF_asterisk_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SUF_asterisk_lc_left_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_SUF_asterisk_lc_left_townzone_edge; 
	normal_SUF_asterisk_lc_left_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_SUF_asterisk_lc_left_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_SUF_asterisk_lc_left_townzone; 
	normal_SUF_asterisk_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SUF_asterisk_lc_right, town_zone) {
	TOWNZONE_EDGE: switch_SUF_asterisk_lc_right_townzone_edge;
	switch_SUF_asterisk_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SUF_asterisk_lc_left, town_zone) {
	TOWNZONE_EDGE: switch_SUF_asterisk_lc_left_townzone_edge;
	switch_SUF_asterisk_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SUF_asterisk_level_crossings, traffic_side) {
	TRAFFIC_SIDE_LEFT: switch_SUF_asterisk_lc_left;
	switch_SUF_asterisk_lc_right;
}

spriteset(normal_SUF_asterisk_tunnel_overlay, "gfx/SUAE.png") {											// TUNNEL_OVERLAY
    tmpl_tunnel_overlay_type(0)
}
spriteset(snow_SUF_asterisk_tunnel_overlay, "gfx/SUAE.png") {
    tmpl_tunnel_overlay_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_SUF_asterisk_tunnel_overlay, terrain_type) {
    TILETYPE_SNOW: snow_SUF_asterisk_tunnel_overlay;
    normal_SUF_asterisk_tunnel_overlay;
}

spriteset(normal_SUF_asterisk_tunnel_1, "gfx/SUAE.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_SUF_asterisk_tunnel_1, "gfx/SUAE.png") {
    tmpl_tunnel_type(276)
}
spriteset(normal_SUF_asterisk_tunnel_0, "gfx/SUAE_1.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_SUF_asterisk_tunnel_0, "gfx/SUAE_1.png") {
    tmpl_tunnel_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_SUF_asterisk_tunnel_1, terrain_type) {
    TILETYPE_SNOW: snow_SUF_asterisk_tunnel_1;
    normal_SUF_asterisk_tunnel_1;
}
switch(FEAT_RAILTYPES, SELF, switch_SUF_asterisk_tunnel_0, terrain_type) {
    TILETYPE_SNOW: snow_SUF_asterisk_tunnel_0;
    normal_SUF_asterisk_tunnel_0;
}
switch(FEAT_RAILTYPES, SELF, switch_SUF_asterisk_tunnel, param_tunnel) {
	1: switch_SUF_asterisk_tunnel_1;
	switch_SUF_asterisk_tunnel_0;
}

spriteset(normal_SUF_asterisk_depots, "gfx/SUAE.png") {													//DEPOTS
    tmpl_depot(0)
}
spriteset(snow_SUF_asterisk_depots, "gfx/SUAE.png") {
    tmpl_depot(414)
}
switch(FEAT_RAILTYPES, SELF, switch_SUF_asterisk_depots, terrain_type) {
    TILETYPE_SNOW: snow_SUF_asterisk_depots;
    normal_SUF_asterisk_depots;
}

spriteset(switch_SUF_asterisk_pylons_catenary_1, "gfx/SUAE.png") {										// PYLONS
    tmpl_pylons_catenary(0)
}
spriteset(switch_SUF_asterisk_pylons_catenary_2, "gfx/SUAE.png") {
    tmpl_pylons_catenary(36)
}
switch(FEAT_RAILTYPES, SELF, switch_SUF_asterisk_pylons_catenary, random_bits) {
    1: switch_SUF_asterisk_pylons_catenary_2;
	switch_SUF_asterisk_pylons_catenary_1;
}

spriteset(fences_SUF_asterisk, "gfx/SUAE.png") {
	tmpl_fences(0)
}
spriteset(fences_SUF_asterisk_cc, "gfx/SUAE.png") {
	tmpl_fences(43)
}
switch(FEAT_RAILTYPES, SELF, switch_SUF_asterisk_fences, param_fences) {
    0: fences_empty;
	2: fences_SUF_asterisk;
	3: fences_SUF_asterisk;
	4: fences_SUF_asterisk_cc;
}

spriteset(gui_SUF_asterisk_UGUI, "gfx/SUAE.png") {														//GUI						
    tmpl_gui_UGUI()
}
spriteset(gui_SUF_asterisk_opengfx, "gfx/SUAE.png") {													//GUI
    tmpl_gui_gfx()
}
spriteset(gui_SUF_asterisk_ttd, "gfx/SUAE.png") {
    tmpl_gui_ttd()
}
switch (FEAT_RAILTYPES, SELF, switch_SUF_asterisk_gui, param_gui) {
    1: gui_SUF_asterisk_opengfx;
    2: gui_SUF_asterisk_UGUI;
	gui_SUF_asterisk_ttd;
}
//============================================================================
//						METRO LINE (SAA3)
//============================================================================
spriteset(switch_SAA3_overlay, "gfx/SAA3.png") {												// OVERLAY
    tmpl_overlay_type()
}

spriteset(normal_SAA3_precombined, "gfx/SAA3.png") {											// PRECOMBINED
    tmpl_precombined_type()
}
spriteset(snow_SAA3_precombined, "gfx/SAA3_1.png") {
    tmpl_precombined_type()
}
switch(FEAT_RAILTYPES, SELF, switch_SAA3_precombined, terrain_type) {
    TILETYPE_SNOW: snow_SAA3_precombined;
    normal_SAA3_precombined;
}

spriteset(normal_SAA3_underlay, "gfx/SAA3.png") {												// UNDERLAY
    tmpl_underlay_type(0)
}
spriteset(snow_SAA3_underlay, "gfx/SAA3.png") {
    tmpl_underlay_type(80)
}
switch(FEAT_RAILTYPES, SELF, switch_SAA3_underlay, terrain_type) {
    TILETYPE_SNOW: snow_SAA3_underlay;
    normal_SAA3_underlay;
}

spriteset(normal_SAA3_bridge, "gfx/SAA3.png") {													// BRIDGE
    tmpl_bridge_surfaces(0)
}
spriteset(snow_SAA3_bridge, "gfx/SAA3.png") {
    tmpl_bridge_surfaces(414)
}
switch(FEAT_RAILTYPES, SELF, switch_SAA3_bridge, terrain_type) {
    TILETYPE_SNOW: snow_SAA3_bridge;
    normal_SAA3_bridge;
}

spriteset(normal_SAA3_lc_right_townzone_edge_open, "gfx/SAA3.png") {							// LEVEL_CROSSING
    tmpl_level_crossings(0,0,0,0)
}
spriteset(normal_SAA3_lc_right_townzone_edge_closed, "gfx/SAA3.png") {
    tmpl_level_crossings(0,0,0,45)
}
spriteset(snow_SAA3_lc_right_townzone_edge_open, "gfx/SAA3.png") {
    tmpl_level_crossings(0,45,0,0)
}
spriteset(snow_SAA3_lc_right_townzone_edge_closed, "gfx/SAA3.png") {
    tmpl_level_crossings(0,45,0,45)
}
spriteset(normal_SAA3_lc_right_townzone_open, "gfx/SAA3.png") {
    tmpl_level_crossings(138,0,0,0)
}
spriteset(normal_SAA3_lc_right_townzone_closed, "gfx/SAA3.png") {
    tmpl_level_crossings(138,0,0,45)
}
spriteset(snow_SAA3_lc_right_townzone_open, "gfx/SAA3.png") {
    tmpl_level_crossings(138,45,0,0)
}
spriteset(snow_SAA3_lc_right_townzone_closed, "gfx/SAA3.png") {
    tmpl_level_crossings(138,45,0,45)
}
spriteset(normal_SAA3_lc_left_townzone_edge_open, "gfx/SAA3.png") {
    tmpl_level_crossings(0,0,276,0)
}
spriteset(normal_SAA3_lc_left_townzone_edge_closed, "gfx/SAA3.png") {
    tmpl_level_crossings(0,0,276,45)
}
spriteset(snow_SAA3_lc_left_townzone_edge_open, "gfx/SAA3.png") {
    tmpl_level_crossings(0,45,276,0)
}
spriteset(snow_SAA3_lc_left_townzone_edge_closed, "gfx/SAA3.png") {
    tmpl_level_crossings(0,45,276,45)
}
spriteset(normal_SAA3_lc_left_townzone_open, "gfx/SAA3.png") {
    tmpl_level_crossings(138,0,276,0)
}
spriteset(normal_SAA3_lc_left_townzone_closed, "gfx/SAA3.png") {
    tmpl_level_crossings(138,0,276,45)
}
spriteset(snow_SAA3_lc_left_townzone_open, "gfx/SAA3.png") {
    tmpl_level_crossings(138,45,276,0)
}
spriteset(snow_SAA3_lc_left_townzone_closed, "gfx/SAA3.png") {
    tmpl_level_crossings(138,45,276,45)
}
switch(FEAT_RAILTYPES, SELF, snow_SAA3_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_SAA3_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_SAA3_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_SAA3_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_SAA3_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_SAA3_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_SAA3_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_SAA3_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_SAA3_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_SAA3_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_SAA3_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_SAA3_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_SAA3_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_SAA3_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_SAA3_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_SAA3_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_SAA3_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_SAA3_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_SAA3_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_SAA3_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_SAA3_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_SAA3_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_SAA3_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_SAA3_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, switch_SAA3_lc_right_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_SAA3_lc_right_townzone_edge; 
	normal_SAA3_lc_right_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_SAA3_lc_right_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_SAA3_lc_right_townzone; 
	normal_SAA3_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SAA3_lc_left_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_SAA3_lc_left_townzone_edge; 
	normal_SAA3_lc_left_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_SAA3_lc_left_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_SAA3_lc_left_townzone; 
	normal_SAA3_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SAA3_lc_right, town_zone) {
	TOWNZONE_EDGE: switch_SAA3_lc_right_townzone_edge;
	switch_SAA3_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SAA3_lc_left, town_zone) {
	TOWNZONE_EDGE: switch_SAA3_lc_left_townzone_edge;
	switch_SAA3_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SAA3_level_crossings, traffic_side) {
	TRAFFIC_SIDE_LEFT: switch_SAA3_lc_left;
	switch_SAA3_lc_right;
}

spriteset(normal_SAA3_tunnel_overlay, "gfx/SAA3.png") {											// TUNNEL_OVERLAY
    tmpl_tunnel_overlay_type(0)
}
spriteset(snow_SAA3_tunnel_overlay, "gfx/SAA3.png") {
    tmpl_tunnel_overlay_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_SAA3_tunnel_overlay, terrain_type) {
    TILETYPE_SNOW: snow_SAA3_tunnel_overlay;
    normal_SAA3_tunnel_overlay;
}

spriteset(normal_SAA3_tunnel_1, "gfx/SAA3.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_SAA3_tunnel_1, "gfx/SAA3.png") {
    tmpl_tunnel_type(276)
}
spriteset(normal_SAA3_tunnel_0, "gfx/SAA3_1.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_SAA3_tunnel_0, "gfx/SAA3_1.png") {
    tmpl_tunnel_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_SAA3_tunnel_1, terrain_type) {
    TILETYPE_SNOW: snow_SAA3_tunnel_1;
    normal_SAA3_tunnel_1;
}
switch(FEAT_RAILTYPES, SELF, switch_SAA3_tunnel_0, terrain_type) {
    TILETYPE_SNOW: snow_SAA3_tunnel_0;
    normal_SAA3_tunnel_0;
}
switch(FEAT_RAILTYPES, SELF, switch_SAA3_tunnel, param_tunnel) {
	1: switch_SAA3_tunnel_1;
	switch_SAA3_tunnel_0;
}

spriteset(normal_SAA3_depots_1, "gfx/SAA3.png") {												//DEPOTS
    tmpl_depot(0)
}
spriteset(snow_SAA3_depots_1, "gfx/SAA3.png") {
    tmpl_depot(414)
}
spriteset(normal_SAA3_depots_2, "gfx/SAA3_1.png") {
    tmpl_depot(0)
}
spriteset(snow_SAA3_depots_2, "gfx/SAA3_1.png") {
    tmpl_depot(414)
}
switch(FEAT_RAILTYPES, SELF, switch_SAA3_depots_1, terrain_type) {
    TILETYPE_SNOW: snow_SAA3_depots_1;
    normal_SAA3_depots_1;
}
switch(FEAT_RAILTYPES, SELF, switch_SAA3_depots_2, terrain_type) {
    TILETYPE_SNOW: snow_SAA3_depots_2;
    normal_SAA3_depots_2;
}
switch(FEAT_RAILTYPES, SELF, switch_SAA3_depots, max(build_date - date(1959,1,1),0)) {
	0: switch_SAA3_depots_1;
	switch_SAA3_depots_2;
}

spriteset(fences_SAA3, "gfx/SAA3.png") {														//FENCES
	tmpl_fences(0)
}
spriteset(fences_SAA3_cc, "gfx/SAA3.png") {														//FENCES
	tmpl_fences(43)
}
switch(FEAT_RAILTYPES, SELF, switch_SAA3_fences, param_fences) {
    0: fences_empty;
	2: fences_empty;
	3: fences_SAA3;
	4: fences_SAA3_cc;
}

spriteset(gui_SAA3_UGUI, "gfx/SAA3.png") {														//GUI						
    tmpl_gui_UGUI()
}
spriteset(gui_SAA3_opengfx, "gfx/SAA3.png") {													//GUI
    tmpl_gui_gfx()
}
spriteset(gui_SAA3_ttd, "gfx/SAA3.png") {
    tmpl_gui_ttd()
}
switch (FEAT_RAILTYPES, SELF, switch_SAA3_gui, param_gui) {
    1: gui_SAA3_opengfx;
    2: gui_SAA3_UGUI;
	gui_SAA3_ttd;
}
//============================================================================
//						IMPROVE METRO LINE (SBA3)
//============================================================================
spriteset(switch_SBA3_overlay, "gfx/SBA3.png") {												// OVERLAY
    tmpl_overlay_type()
}

spriteset(normal_SBA3_precombined, "gfx/SBA3.png") {											// PRECOMBINED
    tmpl_precombined_type()
}
spriteset(snow_SBA3_precombined, "gfx/SBA3_1.png") {
    tmpl_precombined_type()
}
switch(FEAT_RAILTYPES, SELF, switch_SBA3_precombined, terrain_type) {
    TILETYPE_SNOW: snow_SBA3_precombined;
    normal_SBA3_precombined;
}

spriteset(normal_SBA3_underlay, "gfx/SBA3.png") {												// UNDERLAY
    tmpl_underlay_type(0)
}
spriteset(snow_SBA3_underlay, "gfx/SBA3.png") {
    tmpl_underlay_type(80)
}
switch(FEAT_RAILTYPES, SELF, switch_SBA3_underlay, terrain_type) {
    TILETYPE_SNOW: snow_SBA3_underlay;
    normal_SBA3_underlay;
}

spriteset(normal_SBA3_bridge, "gfx/SBA3.png") {													// BRIDGE
    tmpl_bridge_surfaces(0)
}
spriteset(snow_SBA3_bridge, "gfx/SBA3.png") {
    tmpl_bridge_surfaces(414)
}
switch(FEAT_RAILTYPES, SELF, switch_SBA3_bridge, terrain_type) {
    TILETYPE_SNOW: snow_SBA3_bridge;
    normal_SBA3_bridge;
}

spriteset(normal_SBA3_lc_right_townzone_edge_open, "gfx/SBA3.png") {							// LEVEL_CROSSING
    tmpl_level_crossings(0,0,0,0)
}
spriteset(normal_SBA3_lc_right_townzone_edge_closed, "gfx/SBA3.png") {
    tmpl_level_crossings(0,0,0,45)
}
spriteset(snow_SBA3_lc_right_townzone_edge_open, "gfx/SBA3.png") {
    tmpl_level_crossings(0,45,0,0)
}
spriteset(snow_SBA3_lc_right_townzone_edge_closed, "gfx/SBA3.png") {
    tmpl_level_crossings(0,45,0,45)
}
spriteset(normal_SBA3_lc_right_townzone_open, "gfx/SBA3.png") {
    tmpl_level_crossings(138,0,0,0)
}
spriteset(normal_SBA3_lc_right_townzone_closed, "gfx/SBA3.png") {
    tmpl_level_crossings(138,0,0,45)
}
spriteset(snow_SBA3_lc_right_townzone_open, "gfx/SBA3.png") {
    tmpl_level_crossings(138,45,0,0)
}
spriteset(snow_SBA3_lc_right_townzone_closed, "gfx/SBA3.png") {
    tmpl_level_crossings(138,45,0,45)
}
spriteset(normal_SBA3_lc_left_townzone_edge_open, "gfx/SBA3.png") {
    tmpl_level_crossings(0,0,276,0)
}
spriteset(normal_SBA3_lc_left_townzone_edge_closed, "gfx/SBA3.png") {
    tmpl_level_crossings(0,0,276,45)
}
spriteset(snow_SBA3_lc_left_townzone_edge_open, "gfx/SBA3.png") {
    tmpl_level_crossings(0,45,276,0)
}
spriteset(snow_SBA3_lc_left_townzone_edge_closed, "gfx/SBA3.png") {
    tmpl_level_crossings(0,45,276,45)
}
spriteset(normal_SBA3_lc_left_townzone_open, "gfx/SBA3.png") {
    tmpl_level_crossings(138,0,276,0)
}
spriteset(normal_SBA3_lc_left_townzone_closed, "gfx/SBA3.png") {
    tmpl_level_crossings(138,0,276,45)
}
spriteset(snow_SBA3_lc_left_townzone_open, "gfx/SBA3.png") {
    tmpl_level_crossings(138,45,276,0)
}
spriteset(snow_SBA3_lc_left_townzone_closed, "gfx/SBA3.png") {
    tmpl_level_crossings(138,45,276,45)
}
switch(FEAT_RAILTYPES, SELF, snow_SBA3_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_SBA3_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_SBA3_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_SBA3_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_SBA3_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_SBA3_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_SBA3_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_SBA3_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_SBA3_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_SBA3_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_SBA3_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_SBA3_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_SBA3_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_SBA3_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_SBA3_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_SBA3_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_SBA3_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_SBA3_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_SBA3_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_SBA3_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_SBA3_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_SBA3_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_SBA3_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_SBA3_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, switch_SBA3_lc_right_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_SBA3_lc_right_townzone_edge; 
	normal_SBA3_lc_right_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_SBA3_lc_right_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_SBA3_lc_right_townzone; 
	normal_SBA3_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SBA3_lc_left_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_SBA3_lc_left_townzone_edge; 
	normal_SBA3_lc_left_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_SBA3_lc_left_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_SBA3_lc_left_townzone; 
	normal_SBA3_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SBA3_lc_right, town_zone) {
	TOWNZONE_EDGE: switch_SBA3_lc_right_townzone_edge;
	switch_SBA3_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SBA3_lc_left, town_zone) {
	TOWNZONE_EDGE: switch_SBA3_lc_left_townzone_edge;
	switch_SBA3_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SBA3_level_crossings, traffic_side) {
	TRAFFIC_SIDE_LEFT: switch_SBA3_lc_left;
	switch_SBA3_lc_right;
}

spriteset(normal_SBA3_tunnel_overlay, "gfx/SBA3.png") {											// TUNNEL_OVERLAY
    tmpl_tunnel_overlay_type(0)
}
spriteset(snow_SBA3_tunnel_overlay, "gfx/SBA3.png") {
    tmpl_tunnel_overlay_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_SBA3_tunnel_overlay, terrain_type) {
    TILETYPE_SNOW: snow_SBA3_tunnel_overlay;
    normal_SBA3_tunnel_overlay;
}

spriteset(normal_SBA3_tunnel_1, "gfx/SBA3.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_SBA3_tunnel_1, "gfx/SBA3.png") {
    tmpl_tunnel_type(276)
}
spriteset(normal_SBA3_tunnel_0, "gfx/SBA3_1.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_SBA3_tunnel_0, "gfx/SBA3_1.png") {
    tmpl_tunnel_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_SBA3_tunnel_1, terrain_type) {
    TILETYPE_SNOW: snow_SBA3_tunnel_1;
    normal_SBA3_tunnel_1;
}
switch(FEAT_RAILTYPES, SELF, switch_SBA3_tunnel_0, terrain_type) {
    TILETYPE_SNOW: snow_SBA3_tunnel_0;
    normal_SBA3_tunnel_0;
}
switch(FEAT_RAILTYPES, SELF, switch_SBA3_tunnel, param_tunnel) {
	1: switch_SBA3_tunnel_1;
	switch_SBA3_tunnel_0;
}

spriteset(normal_SBA3_depots, "gfx/SBA3.png") {													//DEPOTS
    tmpl_depot(0)
}
spriteset(snow_SBA3_depots, "gfx/SBA3.png") {
    tmpl_depot(414)
}
switch(FEAT_RAILTYPES, SELF, switch_SBA3_depots, terrain_type) {
    TILETYPE_SNOW: snow_SBA3_depots;
    normal_SBA3_depots;
}

spriteset(fences_SBA3, "gfx/SBA3.png") {														//FENCES
	tmpl_fences(0)
}
spriteset(fences_SBA3_cc, "gfx/SBA3.png") {														//FENCES
	tmpl_fences(43)
}
switch(FEAT_RAILTYPES, SELF, switch_SBA3_fences, param_fences) {
    0: fences_empty;
	2: fences_empty;
	3: fences_SBA3;
	4: fences_SBA3_cc;
}

spriteset(gui_SBA3_UGUI, "gfx/SBA3.png") {														//GUI						
    tmpl_gui_UGUI()
}
spriteset(gui_SBA3_opengfx, "gfx/SBA3.png") {													//GUI
    tmpl_gui_gfx()
}
spriteset(gui_SBA3_ttd, "gfx/SBA3.png") {
    tmpl_gui_ttd()
}
switch (FEAT_RAILTYPES, SELF, switch_SBA3_gui, param_gui) {
    1: gui_SBA3_opengfx;
    2: gui_SBA3_UGUI;
	gui_SBA3_ttd;
}
//============================================================================
//					URBAN METRO LINE (SUA3)
//============================================================================
spriteset(switch_SUA3_overlay, "gfx/SUA3.png") {												// OVERLAY
    tmpl_overlay_type()
}

spriteset(normal_SUA3_precombined, "gfx/SUA3.png") {											// PRECOMBINED
    tmpl_precombined_type()
}
spriteset(snow_SUA3_precombined, "gfx/SUA3_1.png") {
    tmpl_precombined_type()
}
switch(FEAT_RAILTYPES, SELF, switch_SUA3_precombined, terrain_type) {
    TILETYPE_SNOW: snow_SUA3_precombined;
    normal_SUA3_precombined;
}

spriteset(normal_SUA3_underlay, "gfx/SUA3.png") {												// UNDERLAY
    tmpl_underlay_type(0)
}
spriteset(snow_SUA3_underlay, "gfx/SUA3.png") {
    tmpl_underlay_type(80)
}
switch(FEAT_RAILTYPES, SELF, switch_SUA3_underlay, terrain_type) {
    TILETYPE_SNOW: snow_SUA3_underlay;
    normal_SUA3_underlay;
}

spriteset(normal_SUA3_bridge, "gfx/SUA3.png") {													// BRIDGE
    tmpl_bridge_surfaces(0)
}
spriteset(snow_SUA3_bridge, "gfx/SUA3.png") {
    tmpl_bridge_surfaces(414)
}
switch(FEAT_RAILTYPES, SELF, switch_SUA3_bridge, terrain_type) {
    TILETYPE_SNOW: snow_SUA3_bridge;
    normal_SUA3_bridge;
}

spriteset(normal_SUA3_lc_right_townzone_edge_open, "gfx/SUA3.png") {							// LEVEL_CROSSING
    tmpl_level_crossings(0,0,0,0)
}
spriteset(normal_SUA3_lc_right_townzone_edge_closed, "gfx/SUA3.png") {
    tmpl_level_crossings(0,0,0,45)
}
spriteset(snow_SUA3_lc_right_townzone_edge_open, "gfx/SUA3.png") {
    tmpl_level_crossings(0,45,0,0)
}
spriteset(snow_SUA3_lc_right_townzone_edge_closed, "gfx/SUA3.png") {
    tmpl_level_crossings(0,45,0,45)
}
spriteset(normal_SUA3_lc_right_townzone_open, "gfx/SUA3.png") {
    tmpl_level_crossings(138,0,0,0)
}
spriteset(normal_SUA3_lc_right_townzone_closed, "gfx/SUA3.png") {
    tmpl_level_crossings(138,0,0,45)
}
spriteset(snow_SUA3_lc_right_townzone_open, "gfx/SUA3.png") {
    tmpl_level_crossings(138,45,0,0)
}
spriteset(snow_SUA3_lc_right_townzone_closed, "gfx/SUA3.png") {
    tmpl_level_crossings(138,45,0,45)
}
spriteset(normal_SUA3_lc_left_townzone_edge_open, "gfx/SUA3.png") {
    tmpl_level_crossings(0,0,276,0)
}
spriteset(normal_SUA3_lc_left_townzone_edge_closed, "gfx/SUA3.png") {
    tmpl_level_crossings(0,0,276,45)
}
spriteset(snow_SUA3_lc_left_townzone_edge_open, "gfx/SUA3.png") {
    tmpl_level_crossings(0,45,276,0)
}
spriteset(snow_SUA3_lc_left_townzone_edge_closed, "gfx/SUA3.png") {
    tmpl_level_crossings(0,45,276,45)
}
spriteset(normal_SUA3_lc_left_townzone_open, "gfx/SUA3.png") {
    tmpl_level_crossings(138,0,276,0)
}
spriteset(normal_SUA3_lc_left_townzone_closed, "gfx/SUA3.png") {
    tmpl_level_crossings(138,0,276,45)
}
spriteset(snow_SUA3_lc_left_townzone_open, "gfx/SUA3.png") {
    tmpl_level_crossings(138,45,276,0)
}
spriteset(snow_SUA3_lc_left_townzone_closed, "gfx/SUA3.png") {
    tmpl_level_crossings(138,45,276,45)
}
switch(FEAT_RAILTYPES, SELF, snow_SUA3_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_SUA3_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_SUA3_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_SUA3_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_SUA3_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_SUA3_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_SUA3_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_SUA3_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_SUA3_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_SUA3_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_SUA3_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_SUA3_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_SUA3_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_SUA3_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_SUA3_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_SUA3_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_SUA3_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_SUA3_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_SUA3_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_SUA3_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_SUA3_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_SUA3_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_SUA3_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_SUA3_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, switch_SUA3_lc_right_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_SUA3_lc_right_townzone_edge; 
	normal_SUA3_lc_right_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_SUA3_lc_right_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_SUA3_lc_right_townzone; 
	normal_SUA3_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SUA3_lc_left_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_SUA3_lc_left_townzone_edge; 
	normal_SUA3_lc_left_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_SUA3_lc_left_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_SUA3_lc_left_townzone; 
	normal_SUA3_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SUA3_lc_right, town_zone) {
	TOWNZONE_EDGE: switch_SUA3_lc_right_townzone_edge;
	switch_SUA3_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SUA3_lc_left, town_zone) {
	TOWNZONE_EDGE: switch_SUA3_lc_left_townzone_edge;
	switch_SUA3_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SUA3_level_crossings, traffic_side) {
	TRAFFIC_SIDE_LEFT: switch_SUA3_lc_left;
	switch_SUA3_lc_right;
}

spriteset(normal_SUA3_tunnel_overlay, "gfx/SUA3.png") {											// TUNNEL_OVERLAY
    tmpl_tunnel_overlay_type(0)
}
spriteset(snow_SUA3_tunnel_overlay, "gfx/SUA3.png") {
    tmpl_tunnel_overlay_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_SUA3_tunnel_overlay, terrain_type) {
    TILETYPE_SNOW: snow_SUA3_tunnel_overlay;
    normal_SUA3_tunnel_overlay;
}

spriteset(normal_SUA3_tunnel_1, "gfx/SUA3.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_SUA3_tunnel_1, "gfx/SUA3.png") {
    tmpl_tunnel_type(276)
}
spriteset(normal_SUA3_tunnel_0, "gfx/SUA3_1.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_SUA3_tunnel_0, "gfx/SUA3_1.png") {
    tmpl_tunnel_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_SUA3_tunnel_1, terrain_type) {
    TILETYPE_SNOW: snow_SUA3_tunnel_1;
    normal_SUA3_tunnel_1;
}
switch(FEAT_RAILTYPES, SELF, switch_SUA3_tunnel_0, terrain_type) {
    TILETYPE_SNOW: snow_SUA3_tunnel_0;
    normal_SUA3_tunnel_0;
}
switch(FEAT_RAILTYPES, SELF, switch_SUA3_tunnel, param_tunnel) {
	1: switch_SUA3_tunnel_1;
	switch_SUA3_tunnel_0;
}

spriteset(normal_SUA3_depots, "gfx/SUA3.png") {													//DEPOTS
    tmpl_depot(0)
}
spriteset(snow_SUA3_depots, "gfx/SUA3.png") {
    tmpl_depot(414)
}
switch(FEAT_RAILTYPES, SELF, switch_SUA3_depots, terrain_type) {
    TILETYPE_SNOW: snow_SUA3_depots;
    normal_SUA3_depots;
}

spriteset(fences_SUA3, "gfx/SUA3.png") {														//FENCES
	tmpl_fences(0)
}
spriteset(fences_SUA3_cc, "gfx/SUA3.png") {														//FENCES
	tmpl_fences(43)
}
switch(FEAT_RAILTYPES, SELF, switch_SUA3_fences, param_fences) {
    0: fences_empty;
	2: fences_SUA3;
	3: fences_SUA3;
	4: fences_SUA3_cc;
}

spriteset(gui_SUA3_UGUI, "gfx/SUA3.png") {														//GUI						
    tmpl_gui_UGUI()
}
spriteset(gui_SUA3_opengfx, "gfx/SUA3.png") {													//GUI
    tmpl_gui_gfx()
}
spriteset(gui_SUA3_ttd, "gfx/SUA3.png") {
    tmpl_gui_ttd()
}
switch (FEAT_RAILTYPES, SELF, switch_SUA3_gui, param_gui) {
    1: gui_SUA3_opengfx;
    2: gui_SUA3_UGUI;
	gui_SUA3_ttd;
}
//============================================================================
//						METRO LINE (SAAZ)
//============================================================================ 
spriteset(normal_SAAZ_depots, "gfx/SAAZ.png") {
    tmpl_depot(0)
}
spriteset(snow_SAAZ_depots, "gfx/SAAZ.png") {
    tmpl_depot(414)
}
switch(FEAT_RAILTYPES, SELF, switch_SAAZ_depots, terrain_type) {								//DEPOTS
    TILETYPE_SNOW: snow_SAAZ_depots;
    normal_SAAZ_depots;
}

spriteset(gui_SAAZ_UGUI, "gfx/SAAZ.png") {														//GUI						
    tmpl_gui_UGUI()
}
spriteset(gui_SAAZ_opengfx, "gfx/SAAZ.png") {													//GUI
    tmpl_gui_gfx()
}
spriteset(gui_SAAZ_ttd, "gfx/SAAZ.png") {
    tmpl_gui_ttd()
}
switch (FEAT_RAILTYPES, SELF, switch_SAAZ_gui, param_gui) {
    1: gui_SAAZ_opengfx;
    2: gui_SAAZ_UGUI;
	gui_SAAZ_ttd;
}
//============================================================================
//					IMPROVED METRO LINE (SBAZ)
//============================================================================ 
spriteset(normal_SBAZ_depots, "gfx/SBAZ.png") {
    tmpl_depot(0)
}
spriteset(snow_SBAZ_depots, "gfx/SBAZ.png") {
    tmpl_depot(414)
}
switch(FEAT_RAILTYPES, SELF, switch_SBAZ_depots, terrain_type) {								//DEPOTS
    TILETYPE_SNOW: snow_SBAZ_depots;
    normal_SBAZ_depots;
}

spriteset(gui_SBAZ_UGUI, "gfx/SBAZ.png") {														//GUI						
    tmpl_gui_UGUI()
}
spriteset(gui_SBAZ_opengfx, "gfx/SBAZ.png") {													//GUI
    tmpl_gui_gfx()
}
spriteset(gui_SBAZ_ttd, "gfx/SBAZ.png") {
    tmpl_gui_ttd()
}
switch (FEAT_RAILTYPES, SELF, switch_SBAZ_gui, param_gui) {
    1: gui_SBAZ_opengfx;
    2: gui_SBAZ_UGUI;
	gui_SBAZ_ttd;
}
//============================================================================
//					URBAN METRO LINE (SUAZ)
//============================================================================ 
spriteset(normal_SUAZ_depots, "gfx/SUAZ.png") {
    tmpl_depot(0)
}
spriteset(snow_SUAZ_depots, "gfx/SUAZ.png") {
    tmpl_depot(414)
}
switch(FEAT_RAILTYPES, SELF, switch_SUAZ_depots, terrain_type) {								//DEPOTS
    TILETYPE_SNOW: snow_SUAZ_depots;
    normal_SUAZ_depots;
}

spriteset(gui_SUAZ_UGUI, "gfx/SUAZ.png") {														//GUI						
    tmpl_gui_UGUI()
}
spriteset(gui_SUAZ_opengfx, "gfx/SUAZ.png") {													//GUI
    tmpl_gui_gfx()
}
spriteset(gui_SUAZ_ttd, "gfx/SUAZ.png") {
    tmpl_gui_ttd()
}
switch (FEAT_RAILTYPES, SELF, switch_SUAZ_gui, param_gui) {
    1: gui_SUAZ_opengfx;
    2: gui_SUAZ_UGUI;
	gui_SUAZ_ttd;
}
//============================================================================
//						STANDAR + NARROW GAUGE LINE (dAAN)
//============================================================================ 
spriteset(switch_dCBN_overlay, "gfx/dAAN.png") {												// OVERLAY
    tmpl_overlay_type()
}

spriteset(normal_dCBN_precombined, "gfx/dAAN.png") {											// PRECOMBINED
    tmpl_precombined_type()
}
spriteset(snow_dCBN_precombined, "gfx/dAAN_1.png") {
    tmpl_precombined_type()
}
switch(FEAT_RAILTYPES, SELF, switch_dCBN_precombined, terrain_type) {
    TILETYPE_SNOW: snow_dCBN_precombined;
    normal_dCBN_precombined;
}

spriteset(normal_dCBN_underlay, "gfx/dAAN.png") {												// UNDERLAY
    tmpl_underlay_type(0)
}
spriteset(snow_dCBN_underlay, "gfx/dAAN.png") {
    tmpl_underlay_type(80)
}
switch(FEAT_RAILTYPES, SELF, switch_dCBN_underlay, terrain_type) {
    TILETYPE_SNOW: snow_dCBN_underlay;
    normal_dCBN_underlay;
}

spriteset(normal_dCBN_bridge, "gfx/dAAN.png") {													// BRIDGE
    tmpl_bridge_surfaces(0)
}
spriteset(snow_dCBN_bridge, "gfx/dAAN.png") {
    tmpl_bridge_surfaces(414)
}
switch(FEAT_RAILTYPES, SELF, switch_dCBN_bridge, terrain_type) {
    TILETYPE_SNOW: snow_dCBN_bridge;
    normal_dCBN_bridge;
}

spriteset(normal_dCBN_lc_right_townzone_edge_open, "gfx/dAAN.png") {							// LEVEL_CROSSING
    tmpl_level_crossings(0,0,0,0)
}
spriteset(normal_dCBN_lc_right_townzone_edge_closed, "gfx/dAAN.png") {
    tmpl_level_crossings(0,0,0,45)
}
spriteset(snow_dCBN_lc_right_townzone_edge_open, "gfx/dAAN.png") {
    tmpl_level_crossings(0,45,0,0)
}
spriteset(snow_dCBN_lc_right_townzone_edge_closed, "gfx/dAAN.png") {
    tmpl_level_crossings(0,45,0,45)
}
spriteset(normal_dCBN_lc_right_townzone_open, "gfx/dAAN.png") {
    tmpl_level_crossings(138,0,0,0)
}
spriteset(normal_dCBN_lc_right_townzone_closed, "gfx/dAAN.png") {
    tmpl_level_crossings(138,0,0,45)
}
spriteset(snow_dCBN_lc_right_townzone_open, "gfx/dAAN.png") {
    tmpl_level_crossings(138,45,0,0)
}
spriteset(snow_dCBN_lc_right_townzone_closed, "gfx/dAAN.png") {
    tmpl_level_crossings(138,45,0,45)
}
spriteset(normal_dCBN_lc_left_townzone_edge_open, "gfx/dAAN.png") {
    tmpl_level_crossings(0,0,276,0)
}
spriteset(normal_dCBN_lc_left_townzone_edge_closed, "gfx/dAAN.png") {
    tmpl_level_crossings(0,0,276,45)
}
spriteset(snow_dCBN_lc_left_townzone_edge_open, "gfx/dAAN.png") {
    tmpl_level_crossings(0,45,276,0)
}
spriteset(snow_dCBN_lc_left_townzone_edge_closed, "gfx/dAAN.png") {
    tmpl_level_crossings(0,45,276,45)
}
spriteset(normal_dCBN_lc_left_townzone_open, "gfx/dAAN.png") {
    tmpl_level_crossings(138,0,276,0)
}
spriteset(normal_dCBN_lc_left_townzone_closed, "gfx/dAAN.png") {
    tmpl_level_crossings(138,0,276,45)
}
spriteset(snow_dCBN_lc_left_townzone_open, "gfx/dAAN.png") {
    tmpl_level_crossings(138,45,276,0)
}
spriteset(snow_dCBN_lc_left_townzone_closed, "gfx/dAAN.png") {
    tmpl_level_crossings(138,45,276,45)
}
switch(FEAT_RAILTYPES, SELF, snow_dCBN_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_dCBN_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_dCBN_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_dCBN_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_dCBN_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_dCBN_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_dCBN_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_dCBN_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_dCBN_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_dCBN_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_dCBN_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_dCBN_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_dCBN_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_dCBN_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_dCBN_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_dCBN_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_dCBN_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_dCBN_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_dCBN_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_dCBN_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_dCBN_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_dCBN_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_dCBN_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_dCBN_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, switch_dCBN_lc_right_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_dCBN_lc_right_townzone_edge; 
	normal_dCBN_lc_right_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_dCBN_lc_right_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_dCBN_lc_right_townzone; 
	normal_dCBN_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_dCBN_lc_left_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_dCBN_lc_left_townzone_edge; 
	normal_dCBN_lc_left_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_dCBN_lc_left_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_dCBN_lc_left_townzone; 
	normal_dCBN_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_dCBN_lc_right, town_zone) {
	TOWNZONE_EDGE: switch_dCBN_lc_right_townzone_edge;
	switch_dCBN_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_dCBN_lc_left, town_zone) {
	TOWNZONE_EDGE: switch_dCBN_lc_left_townzone_edge;
	switch_dCBN_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_dCBN_level_crossings, traffic_side) {
	TRAFFIC_SIDE_LEFT: switch_dCBN_lc_left;
	switch_dCBN_lc_right;
}

spriteset(normal_dCBN_tunnel_overlay, "gfx/dAAN.png") {											// TUNNEL_OVERLAY
    tmpl_tunnel_overlay_type(0)
}
spriteset(snow_dCBN_tunnel_overlay, "gfx/dAAN.png") {
    tmpl_tunnel_overlay_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_dCBN_tunnel_overlay, terrain_type) {
    TILETYPE_SNOW: snow_dCBN_tunnel_overlay;
    normal_dCBN_tunnel_overlay;
}

spriteset(normal_dCBN_tunnel_1, "gfx/dAAN.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_dCBN_tunnel_1, "gfx/dAAN.png") {
    tmpl_tunnel_type(276)
}
spriteset(normal_dCBN_tunnel_0, "gfx/dAAN_1.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_dCBN_tunnel_0, "gfx/dAAN_1.png") {
    tmpl_tunnel_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_dCBN_tunnel_1, terrain_type) {
    TILETYPE_SNOW: snow_dCBN_tunnel_1;
    normal_dCBN_tunnel_1;
}
switch(FEAT_RAILTYPES, SELF, switch_dCBN_tunnel_0, terrain_type) {
    TILETYPE_SNOW: snow_dCBN_tunnel_0;
    normal_dCBN_tunnel_0;
}
switch(FEAT_RAILTYPES, SELF, switch_dCBN_tunnel, param_tunnel) {
	1: switch_dCBN_tunnel_1;
	switch_dCBN_tunnel_0;
}

spriteset(normal_dCBN_depots, "gfx/dAAN.png") {													//DEPOTS
    tmpl_depot(0)
}
spriteset(snow_dCBN_depots, "gfx/dAAN.png") {
    tmpl_depot(414)
}
switch(FEAT_RAILTYPES, SELF, switch_dCBN_depots, terrain_type) {
    TILETYPE_SNOW: snow_dCBN_depots;
    normal_dCBN_depots;
}

spriteset(fences_dCBN, "gfx/dAAN.png") {														//FENCES
	tmpl_fences(0)
}
spriteset(fences_dCBN_cc, "gfx/dAAN.png") {														//FENCES
	tmpl_fences(43)
}
switch(FEAT_RAILTYPES, SELF, switch_dCBN_fences, param_fences) {
    0: fences_empty;
	2: fences_empty;
	3: fences_dCBN;
	4: fences_dCBN_cc;
}

spriteset(gui_dCBN_UGUI, "gfx/dAAN.png") {														//GUI						
    tmpl_gui_UGUI()
}
spriteset(gui_dCBN_opengfx, "gfx/dAAN.png") {													//GUI
    tmpl_gui_gfx()
}
spriteset(gui_dCBN_ttd, "gfx/dAAN.png") {
    tmpl_gui_ttd()
}
switch (FEAT_RAILTYPES, SELF, switch_dCBN_gui, param_gui) {
    1: gui_dCBN_opengfx;
    2: gui_dCBN_UGUI;
	gui_dCBN_ttd;
}
//============================================================================
//						STANDAR + NARROW GAUGE LINE (dBAN)
//============================================================================ 
spriteset(switch_dCDN_overlay, "gfx/dBAN.png") {												// OVERLAY
    tmpl_overlay_type()
}

spriteset(normal_dCDN_precombined, "gfx/dBAN.png") {											// PRECOMBINED
    tmpl_precombined_type()
}
spriteset(snow_dCDN_precombined, "gfx/dBAE.png") {
    tmpl_precombined_type()
}
switch(FEAT_RAILTYPES, SELF, switch_dCDN_precombined, terrain_type) {
    TILETYPE_SNOW: snow_dCDN_precombined;
    normal_dCDN_precombined;
}

spriteset(normal_dCDN_underlay, "gfx/dBAN.png") {												// UNDERLAY
    tmpl_underlay_type(0)
}
spriteset(snow_dCDN_underlay, "gfx/dBAN.png") {
    tmpl_underlay_type(80)
}
switch(FEAT_RAILTYPES, SELF, switch_dCDN_underlay, terrain_type) {
    TILETYPE_SNOW: snow_dCDN_underlay;
    normal_dCDN_underlay;
}

spriteset(normal_dCDN_bridge, "gfx/dBAN.png") {													// BRIDGE
    tmpl_bridge_surfaces(0)
}
spriteset(snow_dCDN_bridge, "gfx/dBAN.png") {
    tmpl_bridge_surfaces(414)
}
switch(FEAT_RAILTYPES, SELF, switch_dCDN_bridge, terrain_type) {
    TILETYPE_SNOW: snow_dCDN_bridge;
    normal_dCDN_bridge;
}

spriteset(normal_dCDN_lc_right_townzone_edge_open, "gfx/dBAN.png") {							// LEVEL_CROSSING
    tmpl_level_crossings(0,0,0,0)
}
spriteset(normal_dCDN_lc_right_townzone_edge_closed, "gfx/dBAN.png") {
    tmpl_level_crossings(0,0,0,45)
}
spriteset(snow_dCDN_lc_right_townzone_edge_open, "gfx/dBAN.png") {
    tmpl_level_crossings(0,45,0,0)
}
spriteset(snow_dCDN_lc_right_townzone_edge_closed, "gfx/dBAN.png") {
    tmpl_level_crossings(0,45,0,45)
}
spriteset(normal_dCDN_lc_right_townzone_open, "gfx/dBAN.png") {
    tmpl_level_crossings(138,0,0,0)
}
spriteset(normal_dCDN_lc_right_townzone_closed, "gfx/dBAN.png") {
    tmpl_level_crossings(138,0,0,45)
}
spriteset(snow_dCDN_lc_right_townzone_open, "gfx/dBAN.png") {
    tmpl_level_crossings(138,45,0,0)
}
spriteset(snow_dCDN_lc_right_townzone_closed, "gfx/dBAN.png") {
    tmpl_level_crossings(138,45,0,45)
}
spriteset(normal_dCDN_lc_left_townzone_edge_open, "gfx/dBAN.png") {
    tmpl_level_crossings(0,0,276,0)
}
spriteset(normal_dCDN_lc_left_townzone_edge_closed, "gfx/dBAN.png") {
    tmpl_level_crossings(0,0,276,45)
}
spriteset(snow_dCDN_lc_left_townzone_edge_open, "gfx/dBAN.png") {
    tmpl_level_crossings(0,45,276,0)
}
spriteset(snow_dCDN_lc_left_townzone_edge_closed, "gfx/dBAN.png") {
    tmpl_level_crossings(0,45,276,45)
}
spriteset(normal_dCDN_lc_left_townzone_open, "gfx/dBAN.png") {
    tmpl_level_crossings(138,0,276,0)
}
spriteset(normal_dCDN_lc_left_townzone_closed, "gfx/dBAN.png") {
    tmpl_level_crossings(138,0,276,45)
}
spriteset(snow_dCDN_lc_left_townzone_open, "gfx/dBAN.png") {
    tmpl_level_crossings(138,45,276,0)
}
spriteset(snow_dCDN_lc_left_townzone_closed, "gfx/dBAN.png") {
    tmpl_level_crossings(138,45,276,45)
}
switch(FEAT_RAILTYPES, SELF, snow_dCDN_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_dCDN_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_dCDN_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_dCDN_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_dCDN_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_dCDN_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_dCDN_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_dCDN_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_dCDN_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_dCDN_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_dCDN_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_dCDN_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_dCDN_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_dCDN_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_dCDN_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_dCDN_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_dCDN_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_dCDN_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_dCDN_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_dCDN_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_dCDN_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_dCDN_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_dCDN_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_dCDN_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, switch_dCDN_lc_right_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_dCDN_lc_right_townzone_edge; 
	normal_dCDN_lc_right_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_dCDN_lc_right_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_dCDN_lc_right_townzone; 
	normal_dCDN_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_dCDN_lc_left_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_dCDN_lc_left_townzone_edge; 
	normal_dCDN_lc_left_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_dCDN_lc_left_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_dCDN_lc_left_townzone; 
	normal_dCDN_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_dCDN_lc_right, town_zone) {
	TOWNZONE_EDGE: switch_dCDN_lc_right_townzone_edge;
	switch_dCDN_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_dCDN_lc_left, town_zone) {
	TOWNZONE_EDGE: switch_dCDN_lc_left_townzone_edge;
	switch_dCDN_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_dCDN_level_crossings, traffic_side) {
	TRAFFIC_SIDE_LEFT: switch_dCDN_lc_left;
	switch_dCDN_lc_right;
}

spriteset(normal_dCDN_tunnel_overlay, "gfx/dBAN.png") {											// TUNNEL_OVERLAY
    tmpl_tunnel_overlay_type(0)
}
spriteset(snow_dCDN_tunnel_overlay, "gfx/dBAN.png") {
    tmpl_tunnel_overlay_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_dCDN_tunnel_overlay, terrain_type) {
    TILETYPE_SNOW: snow_dCDN_tunnel_overlay;
    normal_dCDN_tunnel_overlay;
}

spriteset(normal_dCDN_tunnel_1, "gfx/dBAN.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_dCDN_tunnel_1, "gfx/dBAN.png") {
    tmpl_tunnel_type(276)
}
spriteset(normal_dCDN_tunnel_0, "gfx/dBAE.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_dCDN_tunnel_0, "gfx/dBAE.png") {
    tmpl_tunnel_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_dCDN_tunnel_1, terrain_type) {
    TILETYPE_SNOW: snow_dCDN_tunnel_1;
    normal_dCDN_tunnel_1;
}
switch(FEAT_RAILTYPES, SELF, switch_dCDN_tunnel_0, terrain_type) {
    TILETYPE_SNOW: snow_dCDN_tunnel_0;
    normal_dCDN_tunnel_0;
}
switch(FEAT_RAILTYPES, SELF, switch_dCDN_tunnel, param_tunnel) {
	1: switch_dCDN_tunnel_1;
	switch_dCDN_tunnel_0;
}

spriteset(normal_dCDN_depots, "gfx/dBAN.png") {													//DEPOTS
    tmpl_depot(0)
}
spriteset(snow_dCDN_depots, "gfx/dBAN.png") {
    tmpl_depot(414)
}
switch(FEAT_RAILTYPES, SELF, switch_dCDN_depots, terrain_type) {
    TILETYPE_SNOW: snow_dCDN_depots;
    normal_dCDN_depots;
}

spriteset(fences_dCDN, "gfx/dBAN.png") {														//FENCES
	tmpl_fences(0)
}
spriteset(fences_dCDN_cc, "gfx/dBAN.png") {														//FENCES
	tmpl_fences(43)
}
switch(FEAT_RAILTYPES, SELF, switch_dCDN_fences, param_fences) {
    0: fences_empty;
	2: fences_empty;
	3: fences_dCDN;
	4: fences_dCDN_cc;
}

spriteset(gui_dCDN_UGUI, "gfx/dBAN.png") {														//GUI						
    tmpl_gui_UGUI()
}
spriteset(gui_dCDN_opengfx, "gfx/dBAN.png") {													//GUI
    tmpl_gui_gfx()
}
spriteset(gui_dCDN_ttd, "gfx/dBAN.png") {
    tmpl_gui_ttd()
}
switch (FEAT_RAILTYPES, SELF, switch_dCDN_gui, param_gui) {
    1: gui_dCDN_opengfx;
    2: gui_dCDN_UGUI;
	gui_dCDN_ttd;
}
//============================================================================
//						NORMAL + NARROW GAUGE LINE (ELECTRIFIED) (dBAE)
//============================================================================
spriteset(normal_dCD_leftcurvebracket_depots, "gfx/dBAE.png") {													//DEPOTS
    tmpl_depot(0)
}
spriteset(snow_dCD_leftcurvebracket_depots, "gfx/dBAE.png") {
    tmpl_depot(414)
}
switch(FEAT_RAILTYPES, SELF, switch_dCD_leftcurvebracket_depots, terrain_type) {
    TILETYPE_SNOW: snow_dCD_leftcurvebracket_depots;
    normal_dCD_leftcurvebracket_depots;
}

spriteset(gui_dCD_leftcurvebracket_UGUI, "gfx/dBAE.png") {														//GUI						
    tmpl_gui_UGUI()
}
spriteset(gui_dCD_leftcurvebracket_opengfx, "gfx/dBAE.png") {													//GUI
    tmpl_gui_gfx()
}
spriteset(gui_dCD_leftcurvebracket_ttd, "gfx/dBAE.png") {
    tmpl_gui_ttd()
}
switch (FEAT_RAILTYPES, SELF, switch_dCD_leftcurvebracket_gui, param_gui) {
    1: gui_dCD_leftcurvebracket_opengfx;
    2: gui_dCD_leftcurvebracket_UGUI;
	gui_dCD_leftcurvebracket_ttd;
}
//============================================================================
//						NARROW GAUGE LINE (RAAN)
//============================================================================
spriteset(switch_RCBN_overlay, "gfx/RAAN.png") {												// OVERLAY
    tmpl_overlay_type()
}

spriteset(normal_RCBN_precombined, "gfx/RAAN.png") {											// PRECOMBINED
    tmpl_precombined_type()
}
spriteset(snow_RCBN_precombined, "gfx/RAAE.png") {
    tmpl_precombined_type()
}
switch(FEAT_RAILTYPES, SELF, switch_RCBN_precombined, terrain_type) {
    TILETYPE_SNOW: snow_RCBN_precombined;
    normal_RCBN_precombined;
}

spriteset(normal_RCBN_underlay, "gfx/RAAN.png") {												// UNDERLAY
    tmpl_underlay_type(0)
}
spriteset(snow_RCBN_underlay, "gfx/RAAN.png") {
    tmpl_underlay_type(80)
}
switch(FEAT_RAILTYPES, SELF, switch_RCBN_underlay, terrain_type) {
    TILETYPE_SNOW: snow_RCBN_underlay;
    normal_RCBN_underlay;
}

spriteset(normal_RCBN_bridge, "gfx/RAAN.png") {													// BRIDGE
    tmpl_bridge_surfaces(0)
}
spriteset(snow_RCBN_bridge, "gfx/RAAN.png") {
    tmpl_bridge_surfaces(414)
}
switch(FEAT_RAILTYPES, SELF, switch_RCBN_bridge, terrain_type) {
    TILETYPE_SNOW: snow_RCBN_bridge;
    normal_RCBN_bridge;
}

spriteset(normal_RCBN_lc_right_townzone_edge_open, "gfx/RAAN.png") {							// LEVEL_CROSSING
    tmpl_level_crossings(0,0,0,0)
}
spriteset(normal_RCBN_lc_right_townzone_edge_closed, "gfx/RAAN.png") {
    tmpl_level_crossings(0,0,0,45)
}
spriteset(snow_RCBN_lc_right_townzone_edge_open, "gfx/RAAN.png") {
    tmpl_level_crossings(0,45,0,0)
}
spriteset(snow_RCBN_lc_right_townzone_edge_closed, "gfx/RAAN.png") {
    tmpl_level_crossings(0,45,0,45)
}
spriteset(normal_RCBN_lc_right_townzone_open, "gfx/RAAN.png") {
    tmpl_level_crossings(138,0,0,0)
}
spriteset(normal_RCBN_lc_right_townzone_closed, "gfx/RAAN.png") {
    tmpl_level_crossings(138,0,0,45)
}
spriteset(snow_RCBN_lc_right_townzone_open, "gfx/RAAN.png") {
    tmpl_level_crossings(138,45,0,0)
}
spriteset(snow_RCBN_lc_right_townzone_closed, "gfx/RAAN.png") {
    tmpl_level_crossings(138,45,0,45)
}
spriteset(normal_RCBN_lc_left_townzone_edge_open, "gfx/RAAN.png") {
    tmpl_level_crossings(0,0,276,0)
}
spriteset(normal_RCBN_lc_left_townzone_edge_closed, "gfx/RAAN.png") {
    tmpl_level_crossings(0,0,276,45)
}
spriteset(snow_RCBN_lc_left_townzone_edge_open, "gfx/RAAN.png") {
    tmpl_level_crossings(0,45,276,0)
}
spriteset(snow_RCBN_lc_left_townzone_edge_closed, "gfx/RAAN.png") {
    tmpl_level_crossings(0,45,276,45)
}
spriteset(normal_RCBN_lc_left_townzone_open, "gfx/RAAN.png") {
    tmpl_level_crossings(138,0,276,0)
}
spriteset(normal_RCBN_lc_left_townzone_closed, "gfx/RAAN.png") {
    tmpl_level_crossings(138,0,276,45)
}
spriteset(snow_RCBN_lc_left_townzone_open, "gfx/RAAN.png") {
    tmpl_level_crossings(138,45,276,0)
}
spriteset(snow_RCBN_lc_left_townzone_closed, "gfx/RAAN.png") {
    tmpl_level_crossings(138,45,276,45)
}
switch(FEAT_RAILTYPES, SELF, snow_RCBN_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_RCBN_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_RCBN_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_RCBN_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_RCBN_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_RCBN_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_RCBN_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_RCBN_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_RCBN_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_RCBN_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_RCBN_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_RCBN_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_RCBN_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_RCBN_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_RCBN_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_RCBN_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_RCBN_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_RCBN_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_RCBN_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_RCBN_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_RCBN_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_RCBN_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_RCBN_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_RCBN_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, switch_RCBN_lc_right_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_RCBN_lc_right_townzone_edge; 
	normal_RCBN_lc_right_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_RCBN_lc_right_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_RCBN_lc_right_townzone; 
	normal_RCBN_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_RCBN_lc_left_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_RCBN_lc_left_townzone_edge; 
	normal_RCBN_lc_left_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_RCBN_lc_left_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_RCBN_lc_left_townzone; 
	normal_RCBN_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_RCBN_lc_right, town_zone) {
	TOWNZONE_EDGE: switch_RCBN_lc_right_townzone_edge;
	switch_RCBN_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_RCBN_lc_left, town_zone) {
	TOWNZONE_EDGE: switch_RCBN_lc_left_townzone_edge;
	switch_RCBN_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_RCBN_level_crossings, traffic_side) {
	TRAFFIC_SIDE_LEFT: switch_RCBN_lc_left;
	switch_RCBN_lc_right;
}

spriteset(normal_RCBN_tunnel_overlay, "gfx/RAAN.png") {											// TUNNEL_OVERLAY
    tmpl_tunnel_overlay_type(0)
}
spriteset(snow_RCBN_tunnel_overlay, "gfx/RAAN.png") {
    tmpl_tunnel_overlay_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_RCBN_tunnel_overlay, terrain_type) {
    TILETYPE_SNOW: snow_RCBN_tunnel_overlay;
    normal_RCBN_tunnel_overlay;
}

spriteset(normal_RCBN_tunnel_1, "gfx/RAAN.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_RCBN_tunnel_1, "gfx/RAAN.png") {
    tmpl_tunnel_type(276)
}
spriteset(normal_RCBN_tunnel_0, "gfx/RAAN_1.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_RCBN_tunnel_0, "gfx/RAAN_1.png") {
    tmpl_tunnel_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_RCBN_tunnel_1, terrain_type) {
    TILETYPE_SNOW: snow_RCBN_tunnel_1;
    normal_RCBN_tunnel_1;
}
switch(FEAT_RAILTYPES, SELF, switch_RCBN_tunnel_0, terrain_type) {
    TILETYPE_SNOW: snow_RCBN_tunnel_0;
    normal_RCBN_tunnel_0;
}
switch(FEAT_RAILTYPES, SELF, switch_RCBN_tunnel, param_tunnel) {
	1: switch_RCBN_tunnel_1;
	switch_RCBN_tunnel_0;
}

spriteset(normal_RCBN_depots_1, "gfx/RAAN.png") {												//DEPOTS
    tmpl_depot(0)
}
spriteset(snow_RCBN_depots_1, "gfx/RAAN.png") {
    tmpl_depot(414)
}
spriteset(normal_RCBN_depots_2, "gfx/RAAN_1.png") {
    tmpl_depot(0)
}
spriteset(snow_RCBN_depots_2, "gfx/RAAN_1.png") {
    tmpl_depot(414)
}
switch(FEAT_RAILTYPES, SELF, switch_RCBN_depots_1, terrain_type) {
    TILETYPE_SNOW: snow_RCBN_depots_1;
    normal_RCBN_depots_1;
}
switch(FEAT_RAILTYPES, SELF, switch_RCBN_depots_2, terrain_type) {
    TILETYPE_SNOW: snow_RCBN_depots_2;
    normal_RCBN_depots_2;
}
switch(FEAT_RAILTYPES, SELF, switch_RCBN_depots, max(build_date - date(1959,1,1),0)) {
	0: switch_RCBN_depots_1;
	switch_RCBN_depots_2;
}

spriteset(fences_RCBN, "gfx/RAAN.png") {														//FENCES
	tmpl_fences(0)
}
spriteset(fences_RCBN_cc, "gfx/RAAN.png") {														//FENCES
	tmpl_fences(43)
}
switch(FEAT_RAILTYPES, SELF, switch_RCBN_fences, param_fences) {
    0: fences_empty;
	2: fences_empty;
	3: fences_RCBN;
	4: fences_RCBN_cc;
}

spriteset(gui_RCBN_UGUI, "gfx/RAAN.png") {														//GUI						
    tmpl_gui_UGUI()
}
spriteset(gui_RCBN_opengfx, "gfx/RAAN.png") {													//GUI
    tmpl_gui_gfx()
}
spriteset(gui_RCBN_ttd, "gfx/RAAN.png") {
    tmpl_gui_ttd()
}
switch (FEAT_RAILTYPES, SELF, switch_RCBN_gui, param_gui) {
    1: gui_RCBN_opengfx;
    2: gui_RCBN_UGUI;
	gui_RCBN_ttd;
}
//============================================================================
//						NARROW LINE EL(RAAE)
//============================================================================
spriteset(normal_RCBE_depots_1, "gfx/RAAE.png") {												//DEPOTS
    tmpl_depot(0)
}
spriteset(snow_RCBE_depots_1, "gfx/RAAE.png") {
    tmpl_depot(414)
}
spriteset(normal_RCBE_depots_2, "gfx/RAAE_1.png") {
    tmpl_depot(0)
}
spriteset(snow_RCBE_depots_2, "gfx/RAAE_1.png") {
    tmpl_depot(414)
}
switch(FEAT_RAILTYPES, SELF, switch_RCBE_depots_1, terrain_type) {
    TILETYPE_SNOW: snow_RCBE_depots_1;
    normal_RCBE_depots_1;
}
switch(FEAT_RAILTYPES, SELF, switch_RCBE_depots_2, terrain_type) {
    TILETYPE_SNOW: snow_RCBE_depots_2;
    normal_RCBE_depots_2;
}
switch(FEAT_RAILTYPES, SELF, switch_RCBE_depots, max(build_date - date(1979,1,1),0)) {
	0: switch_RCBE_depots_1;
	switch_RCBE_depots_2;
}

spriteset(switch_RCBE_pylons_catenary_1, "gfx/RAAE.png") {										// PYLONS
    tmpl_pylons_catenary(0)
}
spriteset(switch_RCBE_pylons_catenary_2, "gfx/RAAE.png") {
    tmpl_pylons_catenary(36)
}
switch (FEAT_RAILTYPES, SELF, switch_RCBE_pylons_catenary, random_bits) {
    1: switch_RCBE_pylons_catenary_2;
	switch_RCBE_pylons_catenary_1;
}

spriteset(gui_RCBE_UGUI, "gfx/RAAE.png") {														//GUI						
    tmpl_gui_UGUI()
}
spriteset(gui_RCBE_opengfx, "gfx/RAAE.png") {													//GUI
    tmpl_gui_gfx()
}
spriteset(gui_RCBE_ttd, "gfx/RAAE.png") {
    tmpl_gui_ttd()
}
switch (FEAT_RAILTYPES, SELF, switch_RCBE_gui, param_gui) {
    1: gui_RCBE_opengfx;
    2: gui_RCBE_UGUI;
	gui_RCBE_ttd;
}
//============================================================================
//						IMPROVED NARROW LINE (NBAN)
//============================================================================
spriteset(switch_NBAN_overlay, "gfx/NBAN.png") {												// OVERLAY
    tmpl_overlay_type()
}

spriteset(normal_NBAN_precombined, "gfx/NBAN.png") {											// PRECOMBINED
    tmpl_precombined_type()
}
spriteset(snow_NBAN_precombined, "gfx/NBAE.png") {
    tmpl_precombined_type()
}
switch(FEAT_RAILTYPES, SELF, switch_NBAN_precombined, terrain_type) {
    TILETYPE_SNOW: snow_NBAN_precombined;
    normal_NBAN_precombined;
}

spriteset(normal_NBAN_underlay, "gfx/NBAN.png") {												// UNDERLAY
    tmpl_underlay_type(0)
}
spriteset(snow_NBAN_underlay, "gfx/NBAN.png") {
    tmpl_underlay_type(80)
}
switch(FEAT_RAILTYPES, SELF, switch_NBAN_underlay, terrain_type) {
    TILETYPE_SNOW: snow_NBAN_underlay;
    normal_NBAN_underlay;
}

spriteset(normal_NBAN_bridge, "gfx/NBAN.png") {													// BRIDGE
    tmpl_bridge_surfaces(0)
}
spriteset(snow_NBAN_bridge, "gfx/NBAN.png") {
    tmpl_bridge_surfaces(414)
}
switch(FEAT_RAILTYPES, SELF, switch_NBAN_bridge, terrain_type) {
    TILETYPE_SNOW: snow_NBAN_bridge;
    normal_NBAN_bridge;
}

spriteset(normal_NBAN_lc_right_townzone_edge_open, "gfx/NBAN.png") {							// LEVEL_CROSSING
    tmpl_level_crossings(0,0,0,0)
}
spriteset(normal_NBAN_lc_right_townzone_edge_closed, "gfx/NBAN.png") {
    tmpl_level_crossings(0,0,0,45)
}
spriteset(snow_NBAN_lc_right_townzone_edge_open, "gfx/NBAN.png") {
    tmpl_level_crossings(0,45,0,0)
}
spriteset(snow_NBAN_lc_right_townzone_edge_closed, "gfx/NBAN.png") {
    tmpl_level_crossings(0,45,0,45)
}
spriteset(normal_NBAN_lc_right_townzone_open, "gfx/NBAN.png") {
    tmpl_level_crossings(138,0,0,0)
}
spriteset(normal_NBAN_lc_right_townzone_closed, "gfx/NBAN.png") {
    tmpl_level_crossings(138,0,0,45)
}
spriteset(snow_NBAN_lc_right_townzone_open, "gfx/NBAN.png") {
    tmpl_level_crossings(138,45,0,0)
}
spriteset(snow_NBAN_lc_right_townzone_closed, "gfx/NBAN.png") {
    tmpl_level_crossings(138,45,0,45)
}
spriteset(normal_NBAN_lc_left_townzone_edge_open, "gfx/NBAN.png") {
    tmpl_level_crossings(0,0,276,0)
}
spriteset(normal_NBAN_lc_left_townzone_edge_closed, "gfx/NBAN.png") {
    tmpl_level_crossings(0,0,276,45)
}
spriteset(snow_NBAN_lc_left_townzone_edge_open, "gfx/NBAN.png") {
    tmpl_level_crossings(0,45,276,0)
}
spriteset(snow_NBAN_lc_left_townzone_edge_closed, "gfx/NBAN.png") {
    tmpl_level_crossings(0,45,276,45)
}
spriteset(normal_NBAN_lc_left_townzone_open, "gfx/NBAN.png") {
    tmpl_level_crossings(138,0,276,0)
}
spriteset(normal_NBAN_lc_left_townzone_closed, "gfx/NBAN.png") {
    tmpl_level_crossings(138,0,276,45)
}
spriteset(snow_NBAN_lc_left_townzone_open, "gfx/NBAN.png") {
    tmpl_level_crossings(138,45,276,0)
}
spriteset(snow_NBAN_lc_left_townzone_closed, "gfx/NBAN.png") {
    tmpl_level_crossings(138,45,276,45)
}
switch(FEAT_RAILTYPES, SELF, snow_NBAN_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_NBAN_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_NBAN_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_NBAN_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_NBAN_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_NBAN_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_NBAN_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_NBAN_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_NBAN_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_NBAN_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_NBAN_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_NBAN_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_NBAN_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_NBAN_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_NBAN_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_NBAN_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_NBAN_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_NBAN_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_NBAN_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_NBAN_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_NBAN_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_NBAN_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_NBAN_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_NBAN_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, switch_NBAN_lc_right_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_NBAN_lc_right_townzone_edge; 
	normal_NBAN_lc_right_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_NBAN_lc_right_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_NBAN_lc_right_townzone; 
	normal_NBAN_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_NBAN_lc_left_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_NBAN_lc_left_townzone_edge; 
	normal_NBAN_lc_left_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_NBAN_lc_left_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_NBAN_lc_left_townzone; 
	normal_NBAN_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_NBAN_lc_right, town_zone) {
	TOWNZONE_EDGE: switch_NBAN_lc_right_townzone_edge;
	switch_NBAN_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_NBAN_lc_left, town_zone) {
	TOWNZONE_EDGE: switch_NBAN_lc_left_townzone_edge;
	switch_NBAN_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_NBAN_level_crossings, traffic_side) {
	TRAFFIC_SIDE_LEFT: switch_NBAN_lc_left;
	switch_NBAN_lc_right;
}

spriteset(normal_NBAN_tunnel_overlay, "gfx/NBAN.png") {											// TUNNEL_OVERLAY
    tmpl_tunnel_overlay_type(0)
}
spriteset(snow_NBAN_tunnel_overlay, "gfx/NBAN.png") {
    tmpl_tunnel_overlay_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_NBAN_tunnel_overlay, terrain_type) {
    TILETYPE_SNOW: snow_NBAN_tunnel_overlay;
    normal_NBAN_tunnel_overlay;
}

spriteset(normal_NBAN_tunnel_1, "gfx/NBAN.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_NBAN_tunnel_1, "gfx/NBAN.png") {
    tmpl_tunnel_type(276)
}
spriteset(normal_NBAN_tunnel_0, "gfx/NBAE.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_NBAN_tunnel_0, "gfx/NBAE.png") {
    tmpl_tunnel_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_NBAN_tunnel_1, terrain_type) {
    TILETYPE_SNOW: snow_NBAN_tunnel_1;
    normal_NBAN_tunnel_1;
}
switch(FEAT_RAILTYPES, SELF, switch_NBAN_tunnel_0, terrain_type) {
    TILETYPE_SNOW: snow_NBAN_tunnel_0;
    normal_NBAN_tunnel_0;
}
switch(FEAT_RAILTYPES, SELF, switch_NBAN_tunnel, param_tunnel) {
	1: switch_NBAN_tunnel_1;
	switch_NBAN_tunnel_0;
}

spriteset(normal_NBAN_depots, "gfx/NBAN.png") {													//DEPOTS
    tmpl_depot(0)
}
spriteset(snow_NBAN_depots, "gfx/NBAN.png") {
    tmpl_depot(414)
}
switch(FEAT_RAILTYPES, SELF, switch_NBAN_depots, terrain_type) {
    TILETYPE_SNOW: snow_NBAN_depots;
    normal_NBAN_depots;
}

spriteset(fences_NBAN, "gfx/NBAN.png") {														//FENCES
	tmpl_fences(0)
}
spriteset(fences_NBAN_cc, "gfx/NBAN.png") {														//FENCES
	tmpl_fences(43)
}
switch(FEAT_RAILTYPES, SELF, switch_NBAN_fences, param_fences) {
    0: fences_empty;
	2: fences_empty;
	3: fences_NBAN;
	4: fences_NBAN_cc;
}

spriteset(gui_NBAN_UGUI, "gfx/NBAN.png") {														//GUI						
    tmpl_gui_UGUI()
}
spriteset(gui_NBAN_opengfx, "gfx/NBAN.png") {													//GUI
    tmpl_gui_gfx()
}
spriteset(gui_NBAN_ttd, "gfx/NBAN.png") {
    tmpl_gui_ttd()
}
switch (FEAT_RAILTYPES, SELF, switch_NBAN_gui, param_gui) {
    1: gui_NBAN_opengfx;
    2: gui_NBAN_UGUI;
	gui_NBAN_ttd;
}
//============================================================================
//					IMPROVED NARROW LINE EL(NBAE)
//============================================================================
spriteset(normal_NBAE_depots, "gfx/NBAE.png") {													//DEPOTS
    tmpl_depot(0)
}
spriteset(snow_NBAE_depots, "gfx/NBAE.png") {
    tmpl_depot(414)
}
switch(FEAT_RAILTYPES, SELF, switch_NBAE_depots, terrain_type) {
    TILETYPE_SNOW: snow_NBAE_depots;
    normal_NBAE_depots;
}


spriteset(switch_NBAE_pylons_catenary_1, "gfx/NBAE.png") {										// PYLONS
    tmpl_pylons_catenary(0)
}
spriteset(switch_NBAE_pylons_catenary_2, "gfx/NBAE.png") {
    tmpl_pylons_catenary(36)
}
switch (FEAT_RAILTYPES, SELF, switch_NBAE_pylons_catenary, random_bits) {
    1: switch_NBAE_pylons_catenary_2;
	switch_NBAE_pylons_catenary_1;
}

spriteset(gui_NBAE_UGUI, "gfx/NBAE.png") {														//GUI						
    tmpl_gui_UGUI()
}
spriteset(gui_NBAE_opengfx, "gfx/NBAE.png") {													//GUI
    tmpl_gui_gfx()
}
spriteset(gui_NBAE_ttd, "gfx/NBAE.png") {
    tmpl_gui_ttd()
}
switch (FEAT_RAILTYPES, SELF, switch_NBAE_gui, param_gui) {
    1: gui_NBAE_opengfx;
    2: gui_NBAE_UGUI;
	gui_NBAE_ttd;
}
//============================================================================
//						MODERN NARROW GAUGE LINE (NCAN)
//============================================================================
spriteset(switch_NCAN_overlay, "gfx/NCAN.png") {												// OVERLAY
    tmpl_overlay_type()
}

spriteset(normal_NCAN_precombined, "gfx/NCAN.png") {											// PRECOMBINED
    tmpl_precombined_type()
}
spriteset(snow_NCAN_precombined, "gfx/NCAE.png") {
    tmpl_precombined_type()
}
switch(FEAT_RAILTYPES, SELF, switch_NCAN_precombined, terrain_type) {
    TILETYPE_SNOW: snow_NCAN_precombined;
    normal_NCAN_precombined;
}

spriteset(normal_NCAN_underlay, "gfx/NCAN.png") {												// UNDERLAY
    tmpl_underlay_type(0)
}
spriteset(snow_NCAN_underlay, "gfx/NCAN.png") {
    tmpl_underlay_type(80)
}
switch(FEAT_RAILTYPES, SELF, switch_NCAN_underlay, terrain_type) {
    TILETYPE_SNOW: snow_NCAN_underlay;
    normal_NCAN_underlay;
}

spriteset(normal_NCAN_bridge, "gfx/NCAN.png") {													// BRIDGE
    tmpl_bridge_surfaces(0)
}
spriteset(snow_NCAN_bridge, "gfx/NCAN.png") {
    tmpl_bridge_surfaces(414)
}
switch(FEAT_RAILTYPES, SELF, switch_NCAN_bridge, terrain_type) {
    TILETYPE_SNOW: snow_NCAN_bridge;
    normal_NCAN_bridge;
}

spriteset(normal_NCAN_lc_right_townzone_edge_open, "gfx/NCAN.png") {							// LEVEL_CROSSING
    tmpl_level_crossings(0,0,0,0)
}
spriteset(normal_NCAN_lc_right_townzone_edge_closed, "gfx/NCAN.png") {
    tmpl_level_crossings(0,0,0,45)
}
spriteset(snow_NCAN_lc_right_townzone_edge_open, "gfx/NCAN.png") {
    tmpl_level_crossings(0,45,0,0)
}
spriteset(snow_NCAN_lc_right_townzone_edge_closed, "gfx/NCAN.png") {
    tmpl_level_crossings(0,45,0,45)
}
spriteset(normal_NCAN_lc_right_townzone_open, "gfx/NCAN.png") {
    tmpl_level_crossings(138,0,0,0)
}
spriteset(normal_NCAN_lc_right_townzone_closed, "gfx/NCAN.png") {
    tmpl_level_crossings(138,0,0,45)
}
spriteset(snow_NCAN_lc_right_townzone_open, "gfx/NCAN.png") {
    tmpl_level_crossings(138,45,0,0)
}
spriteset(snow_NCAN_lc_right_townzone_closed, "gfx/NCAN.png") {
    tmpl_level_crossings(138,45,0,45)
}
spriteset(normal_NCAN_lc_left_townzone_edge_open, "gfx/NCAN.png") {
    tmpl_level_crossings(0,0,276,0)
}
spriteset(normal_NCAN_lc_left_townzone_edge_closed, "gfx/NCAN.png") {
    tmpl_level_crossings(0,0,276,45)
}
spriteset(snow_NCAN_lc_left_townzone_edge_open, "gfx/NCAN.png") {
    tmpl_level_crossings(0,45,276,0)
}
spriteset(snow_NCAN_lc_left_townzone_edge_closed, "gfx/NCAN.png") {
    tmpl_level_crossings(0,45,276,45)
}
spriteset(normal_NCAN_lc_left_townzone_open, "gfx/NCAN.png") {
    tmpl_level_crossings(138,0,276,0)
}
spriteset(normal_NCAN_lc_left_townzone_closed, "gfx/NCAN.png") {
    tmpl_level_crossings(138,0,276,45)
}
spriteset(snow_NCAN_lc_left_townzone_open, "gfx/NCAN.png") {
    tmpl_level_crossings(138,45,276,0)
}
spriteset(snow_NCAN_lc_left_townzone_closed, "gfx/NCAN.png") {
    tmpl_level_crossings(138,45,276,45)
}
switch(FEAT_RAILTYPES, SELF, snow_NCAN_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_NCAN_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_NCAN_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_NCAN_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_NCAN_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_NCAN_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_NCAN_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_NCAN_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_NCAN_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_NCAN_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_NCAN_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_NCAN_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_NCAN_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_NCAN_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_NCAN_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_NCAN_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_NCAN_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_NCAN_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_NCAN_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_NCAN_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_NCAN_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_NCAN_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_NCAN_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_NCAN_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, switch_NCAN_lc_right_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_NCAN_lc_right_townzone_edge; 
	normal_NCAN_lc_right_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_NCAN_lc_right_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_NCAN_lc_right_townzone; 
	normal_NCAN_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_NCAN_lc_left_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_NCAN_lc_left_townzone_edge; 
	normal_NCAN_lc_left_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_NCAN_lc_left_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_NCAN_lc_left_townzone; 
	normal_NCAN_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_NCAN_lc_right, town_zone) {
	TOWNZONE_EDGE: switch_NCAN_lc_right_townzone_edge;
	switch_NCAN_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_NCAN_lc_left, town_zone) {
	TOWNZONE_EDGE: switch_NCAN_lc_left_townzone_edge;
	switch_NCAN_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_NCAN_level_crossings, traffic_side) {
	TRAFFIC_SIDE_LEFT: switch_NCAN_lc_left;
	switch_NCAN_lc_right;
}

spriteset(normal_NCAN_tunnel_overlay, "gfx/NCAN.png") {											// TUNNEL_OVERLAY
    tmpl_tunnel_overlay_type(0)
}
spriteset(snow_NCAN_tunnel_overlay, "gfx/NCAN.png") {
    tmpl_tunnel_overlay_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_NCAN_tunnel_overlay, terrain_type) {
    TILETYPE_SNOW: snow_NCAN_tunnel_overlay;
    normal_NCAN_tunnel_overlay;
}

spriteset(normal_NCAN_tunnel_1, "gfx/NCAN.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_NCAN_tunnel_1, "gfx/NCAN.png") {
    tmpl_tunnel_type(276)
}
spriteset(normal_NCAN_tunnel_0, "gfx/NCAE.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_NCAN_tunnel_0, "gfx/NCAE.png") {
    tmpl_tunnel_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_NCAN_tunnel_1, terrain_type) {
    TILETYPE_SNOW: snow_NCAN_tunnel_1;
    normal_NCAN_tunnel_1;
}
switch(FEAT_RAILTYPES, SELF, switch_NCAN_tunnel_0, terrain_type) {
    TILETYPE_SNOW: snow_NCAN_tunnel_0;
    normal_NCAN_tunnel_0;
}
switch(FEAT_RAILTYPES, SELF, switch_NCAN_tunnel, param_tunnel) {
	1: switch_NCAN_tunnel_1;
	switch_NCAN_tunnel_0;
}

spriteset(normal_NCAN_depots, "gfx/NCAN.png") {													//DEPOTS
    tmpl_depot(0)
}
spriteset(snow_NCAN_depots, "gfx/NCAN.png") {
    tmpl_depot(414)
}
switch(FEAT_RAILTYPES, SELF, switch_NCAN_depots, terrain_type) {
    TILETYPE_SNOW: snow_NCAN_depots;
    normal_NCAN_depots;
}

spriteset(fences_NCAN, "gfx/NCAN.png") {														//FENCES
	tmpl_fences(0)
}
spriteset(fences_NCAN_cc, "gfx/NCAN.png") {														//FENCES
	tmpl_fences(43)
}
switch(FEAT_RAILTYPES, SELF, switch_NCAN_fences, param_fences) {
    0: fences_empty;
	2: fences_empty;
	3: fences_NCAN;
	4: fences_NCAN_cc;
}

spriteset(gui_NCAN_UGUI, "gfx/NCAN.png") {														//GUI						
    tmpl_gui_UGUI()
}
spriteset(gui_NCAN_opengfx, "gfx/NCAN.png") {													//GUI
    tmpl_gui_gfx()
}
spriteset(gui_NCAN_ttd, "gfx/NCAN.png") {
    tmpl_gui_ttd()
}
switch (FEAT_RAILTYPES, SELF, switch_NCAN_gui, param_gui) {
    1: gui_NCAN_opengfx;
    2: gui_NCAN_UGUI;
	gui_NCAN_ttd;
}
//============================================================================
//					MODERN NARROW LINE EL(NCAE)
//============================================================================
spriteset(normal_NCAE_depots, "gfx/NCAE.png") {													//DEPOTS
    tmpl_depot(0)
}
spriteset(snow_NCAE_depots, "gfx/NCAE.png") {
    tmpl_depot(414)
}
switch(FEAT_RAILTYPES, SELF, switch_NCAE_depots, terrain_type) {
    TILETYPE_SNOW: snow_NCAE_depots;
    normal_NCAE_depots;
}

spriteset(switch_NCAE_pylons_catenary_1, "gfx/NCAE.png") {										// PYLONS
    tmpl_pylons_catenary(0)
}
spriteset(switch_NCAE_pylons_catenary_2, "gfx/NCAE.png") {
    tmpl_pylons_catenary(36)
}
switch (FEAT_RAILTYPES, SELF, switch_NCAE_pylons_catenary, random_bits) {
    1: switch_NCAE_pylons_catenary_2;
	switch_NCAE_pylons_catenary_1;
}

spriteset(gui_NCAE_UGUI, "gfx/NCAE.png") {														//GUI						
    tmpl_gui_UGUI()
}
spriteset(gui_NCAE_opengfx, "gfx/NCAE.png") {													//GUI
    tmpl_gui_gfx()
}
spriteset(gui_NCAE_ttd, "gfx/NCAE.png") {
    tmpl_gui_ttd()
}
switch (FEAT_RAILTYPES, SELF, switch_NCAE_gui, param_gui) {
    1: gui_NCAE_opengfx;
    2: gui_NCAE_UGUI;
	gui_NCAE_ttd;
}
//============================================================================
//				MODERN HIGHSPEED NARROW GAUGE LINE (NDAE)
//============================================================================
spriteset(switch_NDAE_overlay, "gfx/NDAE.png") {												// OVERLAY
    tmpl_overlay_type()
}

spriteset(normal_NDAE_precombined, "gfx/NDAE.png") {											// PRECOMBINED
    tmpl_precombined_type()
}
spriteset(snow_NDAE_precombined, "gfx/NDAE_1.png") {
    tmpl_precombined_type()
}
switch(FEAT_RAILTYPES, SELF, switch_NDAE_precombined, terrain_type) {
    TILETYPE_SNOW: snow_NDAE_precombined;
    normal_NDAE_precombined;
}

spriteset(normal_NDAE_underlay, "gfx/NDAE.png") {												// UNDERLAY
    tmpl_underlay_type(0)
}
spriteset(snow_NDAE_underlay, "gfx/NDAE.png") {
    tmpl_underlay_type(80)
}
switch(FEAT_RAILTYPES, SELF, switch_NDAE_underlay, terrain_type) {
    TILETYPE_SNOW: snow_NDAE_underlay;
    normal_NDAE_underlay;
}

spriteset(normal_NDAE_bridge, "gfx/NDAE.png") {													// BRIDGE
    tmpl_bridge_surfaces(0)
}
spriteset(snow_NDAE_bridge, "gfx/NDAE.png") {
    tmpl_bridge_surfaces(414)
}
switch(FEAT_RAILTYPES, SELF, switch_NDAE_bridge, terrain_type) {
    TILETYPE_SNOW: snow_NDAE_bridge;
    normal_NDAE_bridge;
}

spriteset(normal_NDAE_lc_right_townzone_edge_open, "gfx/NDAE.png") {							// LEVEL_CROSSING
    tmpl_level_crossings(0,0,0,0)
}
spriteset(normal_NDAE_lc_right_townzone_edge_closed, "gfx/NDAE.png") {
    tmpl_level_crossings(0,0,0,45)
}
spriteset(snow_NDAE_lc_right_townzone_edge_open, "gfx/NDAE.png") {
    tmpl_level_crossings(0,45,0,0)
}
spriteset(snow_NDAE_lc_right_townzone_edge_closed, "gfx/NDAE.png") {
    tmpl_level_crossings(0,45,0,45)
}
spriteset(normal_NDAE_lc_right_townzone_open, "gfx/NDAE.png") {
    tmpl_level_crossings(138,0,0,0)
}
spriteset(normal_NDAE_lc_right_townzone_closed, "gfx/NDAE.png") {
    tmpl_level_crossings(138,0,0,45)
}
spriteset(snow_NDAE_lc_right_townzone_open, "gfx/NDAE.png") {
    tmpl_level_crossings(138,45,0,0)
}
spriteset(snow_NDAE_lc_right_townzone_closed, "gfx/NDAE.png") {
    tmpl_level_crossings(138,45,0,45)
}
spriteset(normal_NDAE_lc_left_townzone_edge_open, "gfx/NDAE.png") {
    tmpl_level_crossings(0,0,276,0)
}
spriteset(normal_NDAE_lc_left_townzone_edge_closed, "gfx/NDAE.png") {
    tmpl_level_crossings(0,0,276,45)
}
spriteset(snow_NDAE_lc_left_townzone_edge_open, "gfx/NDAE.png") {
    tmpl_level_crossings(0,45,276,0)
}
spriteset(snow_NDAE_lc_left_townzone_edge_closed, "gfx/NDAE.png") {
    tmpl_level_crossings(0,45,276,45)
}
spriteset(normal_NDAE_lc_left_townzone_open, "gfx/NDAE.png") {
    tmpl_level_crossings(138,0,276,0)
}
spriteset(normal_NDAE_lc_left_townzone_closed, "gfx/NDAE.png") {
    tmpl_level_crossings(138,0,276,45)
}
spriteset(snow_NDAE_lc_left_townzone_open, "gfx/NDAE.png") {
    tmpl_level_crossings(138,45,276,0)
}
spriteset(snow_NDAE_lc_left_townzone_closed, "gfx/NDAE.png") {
    tmpl_level_crossings(138,45,276,45)
}
switch(FEAT_RAILTYPES, SELF, snow_NDAE_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_NDAE_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_NDAE_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_NDAE_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_NDAE_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_NDAE_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_NDAE_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_NDAE_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_NDAE_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_NDAE_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_NDAE_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_NDAE_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_NDAE_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_NDAE_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_NDAE_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_NDAE_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_NDAE_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_NDAE_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_NDAE_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_NDAE_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_NDAE_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_NDAE_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_NDAE_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_NDAE_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, switch_NDAE_lc_right_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_NDAE_lc_right_townzone_edge; 
	normal_NDAE_lc_right_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_NDAE_lc_right_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_NDAE_lc_right_townzone; 
	normal_NDAE_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_NDAE_lc_left_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_NDAE_lc_left_townzone_edge; 
	normal_NDAE_lc_left_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_NDAE_lc_left_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_NDAE_lc_left_townzone; 
	normal_NDAE_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_NDAE_lc_right, town_zone) {
	TOWNZONE_EDGE: switch_NDAE_lc_right_townzone_edge;
	switch_NDAE_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_NDAE_lc_left, town_zone) {
	TOWNZONE_EDGE: switch_NDAE_lc_left_townzone_edge;
	switch_NDAE_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_NDAE_level_crossings, traffic_side) {
	TRAFFIC_SIDE_LEFT: switch_NDAE_lc_left;
	switch_NDAE_lc_right;
}

spriteset(normal_NDAE_tunnel_overlay, "gfx/NDAE.png") {											// TUNNEL_OVERLAY
    tmpl_tunnel_overlay_type(0)
}
spriteset(snow_NDAE_tunnel_overlay, "gfx/NDAE.png") {
    tmpl_tunnel_overlay_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_NDAE_tunnel_overlay, terrain_type) {
    TILETYPE_SNOW: snow_NDAE_tunnel_overlay;
    normal_NDAE_tunnel_overlay;
}

spriteset(normal_NDAE_tunnel_1, "gfx/NDAE.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_NDAE_tunnel_1, "gfx/NDAE.png") {
    tmpl_tunnel_type(276)
}
spriteset(normal_NDAE_tunnel_0, "gfx/NDAE_1.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_NDAE_tunnel_0, "gfx/NDAE_1.png") {
    tmpl_tunnel_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_NDAE_tunnel_1, terrain_type) {
    TILETYPE_SNOW: snow_NDAE_tunnel_1;
    normal_NDAE_tunnel_1;
}
switch(FEAT_RAILTYPES, SELF, switch_NDAE_tunnel_0, terrain_type) {
    TILETYPE_SNOW: snow_NDAE_tunnel_0;
    normal_NDAE_tunnel_0;
}
switch(FEAT_RAILTYPES, SELF, switch_NDAE_tunnel, param_tunnel) {
	1: switch_NDAE_tunnel_1;
	switch_NDAE_tunnel_0;
}

spriteset(normal_NDAE_depots, "gfx/NDAE.png") {													//DEPOTS
    tmpl_depot(0)
}
spriteset(snow_NDAE_depots, "gfx/NDAE.png") {
    tmpl_depot(414)
}
switch(FEAT_RAILTYPES, SELF, switch_NDAE_depots, terrain_type) {
    TILETYPE_SNOW: snow_NDAE_depots;
    normal_NDAE_depots;
}

spriteset(switch_NDAE_pylons_catenary_1, "gfx/NDAE.png") {										// PYLONS
    tmpl_pylons_catenary(0)
}
spriteset(switch_NDAE_pylons_catenary_2, "gfx/NDAE.png") {
    tmpl_pylons_catenary(36)
}
switch(FEAT_RAILTYPES, SELF, switch_NDAE_pylons_catenary, random_bits) {
    1: switch_NDAE_pylons_catenary_2;
	switch_NDAE_pylons_catenary_1;
}

spriteset(fences_NDAE, "gfx/NDAE.png") {
	tmpl_fences(0)
}
spriteset(fences_NDAE_cc, "gfx/NDAE.png") {
	tmpl_fences(43)
}
switch(FEAT_RAILTYPES, SELF, switch_NDAE_fences, param_fences) {
    0: fences_empty;
	2: fences_NDAE;
	3: fences_NDAE;
	4: fences_NDAE_cc;
}

spriteset(gui_NDAE_UGUI, "gfx/NDAE.png") {														//GUI						
    tmpl_gui_UGUI()
}
spriteset(gui_NDAE_opengfx, "gfx/NDAE.png") {													//GUI
    tmpl_gui_gfx()
}
spriteset(gui_NDAE_ttd, "gfx/NDAE.png") {
    tmpl_gui_ttd()
}
switch (FEAT_RAILTYPES, SELF, switch_NDAE_gui, param_gui) {
    1: gui_NDAE_opengfx;
    2: gui_NDAE_UGUI;
	gui_NDAE_ttd;
}
//============================================================================
//						URBAN NARROW GAUGE LINE (NUAE)
//============================================================================
spriteset(switch_NUAE_overlay, "gfx/NUAE.png") {												// OVERLAY
    tmpl_overlay_type()
}

spriteset(normal_NUAE_precombined, "gfx/NUAE.png") {											// PRECOMBINED
    tmpl_precombined_type()
}
spriteset(snow_NUAE_precombined, "gfx/NUAE_1.png") {
    tmpl_precombined_type()
}
switch(FEAT_RAILTYPES, SELF, switch_NUAE_precombined, terrain_type) {
    TILETYPE_SNOW: snow_NUAE_precombined;
    normal_NUAE_precombined;
}

spriteset(normal_NUAE_underlay, "gfx/NUAE.png") {												// UNDERLAY
    tmpl_underlay_type(0)
}
spriteset(snow_NUAE_underlay, "gfx/NUAE.png") {
    tmpl_underlay_type(80)
}
switch(FEAT_RAILTYPES, SELF, switch_NUAE_underlay, terrain_type) {
    TILETYPE_SNOW: snow_NUAE_underlay;
    normal_NUAE_underlay;
}

spriteset(normal_NUAE_bridge, "gfx/NUAE.png") {													// BRIDGE
    tmpl_bridge_surfaces(0)
}
spriteset(snow_NUAE_bridge, "gfx/NUAE.png") {
    tmpl_bridge_surfaces(414)
}
switch(FEAT_RAILTYPES, SELF, switch_NUAE_bridge, terrain_type) {
    TILETYPE_SNOW: snow_NUAE_bridge;
    normal_NUAE_bridge;
}

spriteset(normal_NUAE_lc_right_townzone_edge_open, "gfx/NUAE.png") {							// LEVEL_CROSSING
    tmpl_level_crossings(0,0,0,0)
}
spriteset(normal_NUAE_lc_right_townzone_edge_closed, "gfx/NUAE.png") {
    tmpl_level_crossings(0,0,0,45)
}
spriteset(snow_NUAE_lc_right_townzone_edge_open, "gfx/NUAE.png") {
    tmpl_level_crossings(0,45,0,0)
}
spriteset(snow_NUAE_lc_right_townzone_edge_closed, "gfx/NUAE.png") {
    tmpl_level_crossings(0,45,0,45)
}
spriteset(normal_NUAE_lc_right_townzone_open, "gfx/NUAE.png") {
    tmpl_level_crossings(138,0,0,0)
}
spriteset(normal_NUAE_lc_right_townzone_closed, "gfx/NUAE.png") {
    tmpl_level_crossings(138,0,0,45)
}
spriteset(snow_NUAE_lc_right_townzone_open, "gfx/NUAE.png") {
    tmpl_level_crossings(138,45,0,0)
}
spriteset(snow_NUAE_lc_right_townzone_closed, "gfx/NUAE.png") {
    tmpl_level_crossings(138,45,0,45)
}
spriteset(normal_NUAE_lc_left_townzone_edge_open, "gfx/NUAE.png") {
    tmpl_level_crossings(0,0,276,0)
}
spriteset(normal_NUAE_lc_left_townzone_edge_closed, "gfx/NUAE.png") {
    tmpl_level_crossings(0,0,276,45)
}
spriteset(snow_NUAE_lc_left_townzone_edge_open, "gfx/NUAE.png") {
    tmpl_level_crossings(0,45,276,0)
}
spriteset(snow_NUAE_lc_left_townzone_edge_closed, "gfx/NUAE.png") {
    tmpl_level_crossings(0,45,276,45)
}
spriteset(normal_NUAE_lc_left_townzone_open, "gfx/NUAE.png") {
    tmpl_level_crossings(138,0,276,0)
}
spriteset(normal_NUAE_lc_left_townzone_closed, "gfx/NUAE.png") {
    tmpl_level_crossings(138,0,276,45)
}
spriteset(snow_NUAE_lc_left_townzone_open, "gfx/NUAE.png") {
    tmpl_level_crossings(138,45,276,0)
}
spriteset(snow_NUAE_lc_left_townzone_closed, "gfx/NUAE.png") {
    tmpl_level_crossings(138,45,276,45)
}
switch(FEAT_RAILTYPES, SELF, snow_NUAE_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_NUAE_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_NUAE_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_NUAE_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_NUAE_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_NUAE_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_NUAE_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_NUAE_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_NUAE_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_NUAE_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_NUAE_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_NUAE_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_NUAE_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_NUAE_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_NUAE_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_NUAE_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_NUAE_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_NUAE_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_NUAE_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_NUAE_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_NUAE_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_NUAE_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_NUAE_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_NUAE_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, switch_NUAE_lc_right_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_NUAE_lc_right_townzone_edge; 
	normal_NUAE_lc_right_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_NUAE_lc_right_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_NUAE_lc_right_townzone; 
	normal_NUAE_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_NUAE_lc_left_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_NUAE_lc_left_townzone_edge; 
	normal_NUAE_lc_left_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_NUAE_lc_left_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_NUAE_lc_left_townzone; 
	normal_NUAE_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_NUAE_lc_right, town_zone) {
	TOWNZONE_EDGE: switch_NUAE_lc_right_townzone_edge;
	switch_NUAE_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_NUAE_lc_left, town_zone) {
	TOWNZONE_EDGE: switch_NUAE_lc_left_townzone_edge;
	switch_NUAE_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_NUAE_level_crossings, traffic_side) {
	TRAFFIC_SIDE_LEFT: switch_NUAE_lc_left;
	switch_NUAE_lc_right;
}

spriteset(normal_NUAE_tunnel_overlay, "gfx/NUAE.png") {											// TUNNEL_OVERLAY
    tmpl_tunnel_overlay_type(0)
}
spriteset(snow_NUAE_tunnel_overlay, "gfx/NUAE.png") {
    tmpl_tunnel_overlay_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_NUAE_tunnel_overlay, terrain_type) {
    TILETYPE_SNOW: snow_NUAE_tunnel_overlay;
    normal_NUAE_tunnel_overlay;
}

spriteset(normal_NUAE_tunnel_1, "gfx/NUAE.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_NUAE_tunnel_1, "gfx/NUAE.png") {
    tmpl_tunnel_type(276)
}
spriteset(normal_NUAE_tunnel_0, "gfx/NUAE_1.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_NUAE_tunnel_0, "gfx/NUAE_1.png") {
    tmpl_tunnel_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_NUAE_tunnel_1, terrain_type) {
    TILETYPE_SNOW: snow_NUAE_tunnel_1;
    normal_NUAE_tunnel_1;
}
switch(FEAT_RAILTYPES, SELF, switch_NUAE_tunnel_0, terrain_type) {
    TILETYPE_SNOW: snow_NUAE_tunnel_0;
    normal_NUAE_tunnel_0;
}
switch(FEAT_RAILTYPES, SELF, switch_NUAE_tunnel, param_tunnel) {
	1: switch_NUAE_tunnel_1;
	switch_NUAE_tunnel_0;
}

spriteset(switch_NUAE_pylons_catenary_1, "gfx/NUAE.png") {										// PYLONS
    tmpl_pylons_catenary(0)
}
spriteset(switch_NUAE_pylons_catenary_2, "gfx/NUAE.png") {
    tmpl_pylons_catenary(36)
}
switch (FEAT_RAILTYPES, SELF, switch_NUAE_pylons_catenary, random_bits) {
    1: switch_NUAE_pylons_catenary_2;
	switch_NUAE_pylons_catenary_1;
}

spriteset(normal_NUAE_depots, "gfx/NUAE.png") {													//DEPOTS
    tmpl_depot(0)
}
spriteset(snow_NUAE_depots, "gfx/NUAE.png") {
    tmpl_depot(414)
}
switch(FEAT_RAILTYPES, SELF, switch_NUAE_depots, terrain_type) {
    TILETYPE_SNOW: snow_NUAE_depots;
    normal_NUAE_depots;
}

spriteset(fences_NUAE, "gfx/NUAE.png") {														//FENCES
	tmpl_fences(0)
}
spriteset(fences_NUAE_cc, "gfx/NUAE.png") {														//FENCES
	tmpl_fences(43)
}
switch(FEAT_RAILTYPES, SELF, switch_NUAE_fences, param_fences) {
    0: fences_empty;
	2: fences_NUAE;
	3: fences_NUAE;
	4: fences_NUAE_cc;
}

spriteset(gui_NUAE_UGUI, "gfx/NUAE.png") {														//GUI						
    tmpl_gui_UGUI()
}
spriteset(gui_NUAE_opengfx, "gfx/NUAE.png") {													//GUI
    tmpl_gui_gfx()
}
spriteset(gui_NUAE_ttd, "gfx/NUAE.png") {
    tmpl_gui_ttd()
}
switch (FEAT_RAILTYPES, SELF, switch_NUAE_gui, param_gui) {
    1: gui_NUAE_opengfx;
    2: gui_NUAE_UGUI;
	gui_NUAE_ttd;
}
//============================================================================
//						NARROW GAUGE LINE (3RD POWERED) (NAA3)
//============================================================================
spriteset(switch_NAA3_overlay, "gfx/NAA3.png") {												// OVERLAY
    tmpl_overlay_type()
}

spriteset(normal_NAA3_precombined, "gfx/NAA3.png") {											// PRECOMBINED
    tmpl_precombined_type()
}
spriteset(snow_NAA3_precombined, "gfx/NAA3_1.png") {
    tmpl_precombined_type()
}
switch(FEAT_RAILTYPES, SELF, switch_NAA3_precombined, terrain_type) {
    TILETYPE_SNOW: snow_NAA3_precombined;
    normal_NAA3_precombined;
}

spriteset(normal_NAA3_underlay, "gfx/NAA3.png") {												// UNDERLAY
    tmpl_underlay_type(0)
}
spriteset(snow_NAA3_underlay, "gfx/NAA3.png") {
    tmpl_underlay_type(80)
}
switch(FEAT_RAILTYPES, SELF, switch_NAA3_underlay, terrain_type) {
    TILETYPE_SNOW: snow_NAA3_underlay;
    normal_NAA3_underlay;
}

spriteset(normal_NAA3_bridge, "gfx/NAA3.png") {													// BRIDGE
    tmpl_bridge_surfaces(0)
}
spriteset(snow_NAA3_bridge, "gfx/NAA3.png") {
    tmpl_bridge_surfaces(414)
}
switch(FEAT_RAILTYPES, SELF, switch_NAA3_bridge, terrain_type) {
    TILETYPE_SNOW: snow_NAA3_bridge;
    normal_NAA3_bridge;
}

spriteset(normal_NAA3_lc_right_townzone_edge_open, "gfx/NAA3.png") {							// LEVEL_CROSSING
    tmpl_level_crossings(0,0,0,0)
}
spriteset(normal_NAA3_lc_right_townzone_edge_closed, "gfx/NAA3.png") {
    tmpl_level_crossings(0,0,0,45)
}
spriteset(snow_NAA3_lc_right_townzone_edge_open, "gfx/NAA3.png") {
    tmpl_level_crossings(0,45,0,0)
}
spriteset(snow_NAA3_lc_right_townzone_edge_closed, "gfx/NAA3.png") {
    tmpl_level_crossings(0,45,0,45)
}
spriteset(normal_NAA3_lc_right_townzone_open, "gfx/NAA3.png") {
    tmpl_level_crossings(138,0,0,0)
}
spriteset(normal_NAA3_lc_right_townzone_closed, "gfx/NAA3.png") {
    tmpl_level_crossings(138,0,0,45)
}
spriteset(snow_NAA3_lc_right_townzone_open, "gfx/NAA3.png") {
    tmpl_level_crossings(138,45,0,0)
}
spriteset(snow_NAA3_lc_right_townzone_closed, "gfx/NAA3.png") {
    tmpl_level_crossings(138,45,0,45)
}
spriteset(normal_NAA3_lc_left_townzone_edge_open, "gfx/NAA3.png") {
    tmpl_level_crossings(0,0,276,0)
}
spriteset(normal_NAA3_lc_left_townzone_edge_closed, "gfx/NAA3.png") {
    tmpl_level_crossings(0,0,276,45)
}
spriteset(snow_NAA3_lc_left_townzone_edge_open, "gfx/NAA3.png") {
    tmpl_level_crossings(0,45,276,0)
}
spriteset(snow_NAA3_lc_left_townzone_edge_closed, "gfx/NAA3.png") {
    tmpl_level_crossings(0,45,276,45)
}
spriteset(normal_NAA3_lc_left_townzone_open, "gfx/NAA3.png") {
    tmpl_level_crossings(138,0,276,0)
}
spriteset(normal_NAA3_lc_left_townzone_closed, "gfx/NAA3.png") {
    tmpl_level_crossings(138,0,276,45)
}
spriteset(snow_NAA3_lc_left_townzone_open, "gfx/NAA3.png") {
    tmpl_level_crossings(138,45,276,0)
}
spriteset(snow_NAA3_lc_left_townzone_closed, "gfx/NAA3.png") {
    tmpl_level_crossings(138,45,276,45)
}
switch(FEAT_RAILTYPES, SELF, snow_NAA3_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_NAA3_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_NAA3_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_NAA3_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_NAA3_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_NAA3_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_NAA3_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_NAA3_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_NAA3_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_NAA3_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_NAA3_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_NAA3_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_NAA3_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_NAA3_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_NAA3_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_NAA3_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_NAA3_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_NAA3_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_NAA3_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_NAA3_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_NAA3_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_NAA3_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_NAA3_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_NAA3_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, switch_NAA3_lc_right_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_NAA3_lc_right_townzone_edge; 
	normal_NAA3_lc_right_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_NAA3_lc_right_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_NAA3_lc_right_townzone; 
	normal_NAA3_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_NAA3_lc_left_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_NAA3_lc_left_townzone_edge; 
	normal_NAA3_lc_left_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_NAA3_lc_left_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_NAA3_lc_left_townzone; 
	normal_NAA3_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_NAA3_lc_right, town_zone) {
	TOWNZONE_EDGE: switch_NAA3_lc_right_townzone_edge;
	switch_NAA3_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_NAA3_lc_left, town_zone) {
	TOWNZONE_EDGE: switch_NAA3_lc_left_townzone_edge;
	switch_NAA3_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_NAA3_level_crossings, traffic_side) {
	TRAFFIC_SIDE_LEFT: switch_NAA3_lc_left;
	switch_NAA3_lc_right;
}

spriteset(normal_NAA3_tunnel_overlay, "gfx/NAA3.png") {											// TUNNEL_OVERLAY
    tmpl_tunnel_overlay_type(0)
}
spriteset(snow_NAA3_tunnel_overlay, "gfx/NAA3.png") {
    tmpl_tunnel_overlay_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_NAA3_tunnel_overlay, terrain_type) {
    TILETYPE_SNOW: snow_NAA3_tunnel_overlay;
    normal_NAA3_tunnel_overlay;
}

spriteset(normal_NAA3_tunnel_1, "gfx/NAA3.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_NAA3_tunnel_1, "gfx/NAA3.png") {
    tmpl_tunnel_type(276)
}
spriteset(normal_NAA3_tunnel_0, "gfx/NAA3_1.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_NAA3_tunnel_0, "gfx/NAA3_1.png") {
    tmpl_tunnel_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_NAA3_tunnel_1, terrain_type) {
    TILETYPE_SNOW: snow_NAA3_tunnel_1;
    normal_NAA3_tunnel_1;
}
switch(FEAT_RAILTYPES, SELF, switch_NAA3_tunnel_0, terrain_type) {
    TILETYPE_SNOW: snow_NAA3_tunnel_0;
    normal_NAA3_tunnel_0;
}
switch(FEAT_RAILTYPES, SELF, switch_NAA3_tunnel, param_tunnel) {
	1: switch_NAA3_tunnel_1;
	switch_NAA3_tunnel_0;
}

spriteset(normal_NAA3_depots, "gfx/NAA3.png") {													//DEPOTS
    tmpl_depot(0)
}
spriteset(snow_NAA3_depots, "gfx/NAA3.png") {
    tmpl_depot(414)
}
switch(FEAT_RAILTYPES, SELF, switch_NAA3_depots, terrain_type) {
    TILETYPE_SNOW: snow_NAA3_depots;
    normal_NAA3_depots;
}

spriteset(fences_NAA3, "gfx/NAA3.png") {														//FENCES
	tmpl_fences(0)
}
spriteset(fences_NAA3_cc, "gfx/NAA3.png") {														//FENCES
	tmpl_fences(43)
}
switch(FEAT_RAILTYPES, SELF, switch_NAA3_fences, param_fences) {
    0: fences_empty;
	2: fences_empty;
	3: fences_NAA3;
	4: fences_NAA3_cc;
}

spriteset(gui_NAA3_UGUI, "gfx/NAA3.png") {														//GUI						
    tmpl_gui_UGUI()
}
spriteset(gui_NAA3_opengfx, "gfx/NAA3.png") {													//GUI
    tmpl_gui_gfx()
}
spriteset(gui_NAA3_ttd, "gfx/NAA3.png") {
    tmpl_gui_ttd()
}
switch (FEAT_RAILTYPES, SELF, switch_NAA3_gui, param_gui) {
    1: gui_NAA3_opengfx;
    2: gui_NAA3_UGUI;
	gui_NAA3_ttd;
}
//============================================================================
//					MODERN NARROW GAUGE LINE (3RD POWERED) (NBA3)
//============================================================================
spriteset(switch_NBA3_overlay, "gfx/NBA3.png") {												// OVERLAY
    tmpl_overlay_type()
}

spriteset(normal_NBA3_precombined, "gfx/NBA3.png") {											// PRECOMBINED
    tmpl_precombined_type()
}
spriteset(snow_NBA3_precombined, "gfx/NBA3_1.png") {
    tmpl_precombined_type()
}
switch(FEAT_RAILTYPES, SELF, switch_NBA3_precombined, terrain_type) {
    TILETYPE_SNOW: snow_NBA3_precombined;
    normal_NBA3_precombined;
}

spriteset(normal_NBA3_underlay, "gfx/NBA3.png") {												// UNDERLAY
    tmpl_underlay_type(0)
}
spriteset(snow_NBA3_underlay, "gfx/NBA3.png") {
    tmpl_underlay_type(80)
}
switch(FEAT_RAILTYPES, SELF, switch_NBA3_underlay, terrain_type) {
    TILETYPE_SNOW: snow_NBA3_underlay;
    normal_NBA3_underlay;
}

spriteset(normal_NBA3_bridge, "gfx/NBA3.png") {													// BRIDGE
    tmpl_bridge_surfaces(0)
}
spriteset(snow_NBA3_bridge, "gfx/NBA3.png") {
    tmpl_bridge_surfaces(414)
}
switch(FEAT_RAILTYPES, SELF, switch_NBA3_bridge, terrain_type) {
    TILETYPE_SNOW: snow_NBA3_bridge;
    normal_NBA3_bridge;
}

spriteset(normal_NBA3_lc_right_townzone_edge_open, "gfx/NBA3.png") {							// LEVEL_CROSSING
    tmpl_level_crossings(0,0,0,0)
}
spriteset(normal_NBA3_lc_right_townzone_edge_closed, "gfx/NBA3.png") {
    tmpl_level_crossings(0,0,0,45)
}
spriteset(snow_NBA3_lc_right_townzone_edge_open, "gfx/NBA3.png") {
    tmpl_level_crossings(0,45,0,0)
}
spriteset(snow_NBA3_lc_right_townzone_edge_closed, "gfx/NBA3.png") {
    tmpl_level_crossings(0,45,0,45)
}
spriteset(normal_NBA3_lc_right_townzone_open, "gfx/NBA3.png") {
    tmpl_level_crossings(138,0,0,0)
}
spriteset(normal_NBA3_lc_right_townzone_closed, "gfx/NBA3.png") {
    tmpl_level_crossings(138,0,0,45)
}
spriteset(snow_NBA3_lc_right_townzone_open, "gfx/NBA3.png") {
    tmpl_level_crossings(138,45,0,0)
}
spriteset(snow_NBA3_lc_right_townzone_closed, "gfx/NBA3.png") {
    tmpl_level_crossings(138,45,0,45)
}
spriteset(normal_NBA3_lc_left_townzone_edge_open, "gfx/NBA3.png") {
    tmpl_level_crossings(0,0,276,0)
}
spriteset(normal_NBA3_lc_left_townzone_edge_closed, "gfx/NBA3.png") {
    tmpl_level_crossings(0,0,276,45)
}
spriteset(snow_NBA3_lc_left_townzone_edge_open, "gfx/NBA3.png") {
    tmpl_level_crossings(0,45,276,0)
}
spriteset(snow_NBA3_lc_left_townzone_edge_closed, "gfx/NBA3.png") {
    tmpl_level_crossings(0,45,276,45)
}
spriteset(normal_NBA3_lc_left_townzone_open, "gfx/NBA3.png") {
    tmpl_level_crossings(138,0,276,0)
}
spriteset(normal_NBA3_lc_left_townzone_closed, "gfx/NBA3.png") {
    tmpl_level_crossings(138,0,276,45)
}
spriteset(snow_NBA3_lc_left_townzone_open, "gfx/NBA3.png") {
    tmpl_level_crossings(138,45,276,0)
}
spriteset(snow_NBA3_lc_left_townzone_closed, "gfx/NBA3.png") {
    tmpl_level_crossings(138,45,276,45)
}
switch(FEAT_RAILTYPES, SELF, snow_NBA3_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_NBA3_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_NBA3_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_NBA3_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_NBA3_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_NBA3_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_NBA3_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_NBA3_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_NBA3_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_NBA3_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_NBA3_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_NBA3_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_NBA3_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_NBA3_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_NBA3_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_NBA3_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_NBA3_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_NBA3_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_NBA3_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_NBA3_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_NBA3_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_NBA3_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_NBA3_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_NBA3_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, switch_NBA3_lc_right_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_NBA3_lc_right_townzone_edge; 
	normal_NBA3_lc_right_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_NBA3_lc_right_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_NBA3_lc_right_townzone; 
	normal_NBA3_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_NBA3_lc_left_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_NBA3_lc_left_townzone_edge; 
	normal_NBA3_lc_left_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_NBA3_lc_left_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_NBA3_lc_left_townzone; 
	normal_NBA3_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_NBA3_lc_right, town_zone) {
	TOWNZONE_EDGE: switch_NBA3_lc_right_townzone_edge;
	switch_NBA3_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_NBA3_lc_left, town_zone) {
	TOWNZONE_EDGE: switch_NBA3_lc_left_townzone_edge;
	switch_NBA3_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_NBA3_level_crossings, traffic_side) {
	TRAFFIC_SIDE_LEFT: switch_NBA3_lc_left;
	switch_NBA3_lc_right;
}

spriteset(normal_NBA3_tunnel_overlay, "gfx/NBA3.png") {											// TUNNEL_OVERLAY
    tmpl_tunnel_overlay_type(0)
}
spriteset(snow_NBA3_tunnel_overlay, "gfx/NBA3.png") {
    tmpl_tunnel_overlay_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_NBA3_tunnel_overlay, terrain_type) {
    TILETYPE_SNOW: snow_NBA3_tunnel_overlay;
    normal_NBA3_tunnel_overlay;
}

spriteset(normal_NBA3_tunnel_1, "gfx/NBA3.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_NBA3_tunnel_1, "gfx/NBA3.png") {
    tmpl_tunnel_type(276)
}
spriteset(normal_NBA3_tunnel_0, "gfx/NBA3_1.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_NBA3_tunnel_0, "gfx/NBA3_1.png") {
    tmpl_tunnel_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_NBA3_tunnel_1, terrain_type) {
    TILETYPE_SNOW: snow_NBA3_tunnel_1;
    normal_NBA3_tunnel_1;
}
switch(FEAT_RAILTYPES, SELF, switch_NBA3_tunnel_0, terrain_type) {
    TILETYPE_SNOW: snow_NBA3_tunnel_0;
    normal_NBA3_tunnel_0;
}
switch(FEAT_RAILTYPES, SELF, switch_NBA3_tunnel, param_tunnel) {
	1: switch_NBA3_tunnel_1;
	switch_NBA3_tunnel_0;
}

spriteset(normal_NBA3_depots, "gfx/NBA3.png") {													//DEPOTS
    tmpl_depot(0)
}
spriteset(snow_NBA3_depots, "gfx/NBA3.png") {
    tmpl_depot(414)
}
switch(FEAT_RAILTYPES, SELF, switch_NBA3_depots, terrain_type) {
    TILETYPE_SNOW: snow_NBA3_depots;
    normal_NBA3_depots;
}

spriteset(fences_NBA3, "gfx/NBA3.png") {														//FENCES
	tmpl_fences(0)
}
spriteset(fences_NBA3_cc, "gfx/NBA3.png") {														//FENCES
	tmpl_fences(43)
}
switch(FEAT_RAILTYPES, SELF, switch_NBA3_fences, param_fences) {
    0: fences_empty;
	2: fences_empty;
	3: fences_NBA3;
	4: fences_NBA3_cc;
}

spriteset(gui_NBA3_UGUI, "gfx/NBA3.png") {														//GUI						
    tmpl_gui_UGUI()
}
spriteset(gui_NBA3_opengfx, "gfx/NBA3.png") {													//GUI
    tmpl_gui_gfx()
}
spriteset(gui_NBA3_ttd, "gfx/NBA3.png") {
    tmpl_gui_ttd()
}
switch (FEAT_RAILTYPES, SELF, switch_NBA3_gui, param_gui) {
    1: gui_NBA3_opengfx;
    2: gui_NBA3_UGUI;
	gui_NBA3_ttd;
}
//============================================================================
//						MONORAIL (MONO)
//============================================================================
spriteset(switch_MONO_overlay, "gfx/MONO.png") {												// OVERLAY
    tmpl_overlay_type()
}

spriteset(normal_MONO_precombined, "gfx/MONO.png") {											// PRECOMBINED
    tmpl_precombined_type()
}
spriteset(snow_MONO_precombined, "gfx/MONO_1.png") {
    tmpl_precombined_type()
}
switch(FEAT_RAILTYPES, SELF, switch_MONO_precombined, terrain_type) {
    TILETYPE_SNOW: snow_MONO_precombined;
    normal_MONO_precombined;
}

spriteset(normal_MONO_underlay, "gfx/MONO.png") {												// UNDERLAY
    tmpl_underlay_type(0)
}
spriteset(snow_MONO_underlay, "gfx/MONO.png") {
    tmpl_underlay_type(80)
}
switch(FEAT_RAILTYPES, SELF, switch_MONO_underlay, terrain_type) {
    TILETYPE_SNOW: snow_MONO_underlay;
    normal_MONO_underlay;
}

spriteset(normal_MONO_bridge, "gfx/MONO.png") {													// BRIDGE
    tmpl_bridge_surfaces(0)
}
spriteset(snow_MONO_bridge, "gfx/MONO.png") {
    tmpl_bridge_surfaces(414)
}
switch(FEAT_RAILTYPES, SELF, switch_MONO_bridge, terrain_type) {
    TILETYPE_SNOW: snow_MONO_bridge;
    normal_MONO_bridge;
}
spriteset(switch_MONO_U_bridge, "gfx/MONO_1.png") {												// U_BRIDGE
    tmpl_bridge_surfaces(0)
}

spriteset(normal_MONO_tunnel_overlay, "gfx/MONO.png") {											// TUNNEL_OVERLAY
    tmpl_tunnel_overlay_type(0)
}
spriteset(snow_MONO_tunnel_overlay, "gfx/MONO.png") {
    tmpl_tunnel_overlay_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_MONO_tunnel_overlay, terrain_type) {
    TILETYPE_SNOW: snow_MONO_tunnel_overlay;
    normal_MONO_tunnel_overlay;
}

spriteset(normal_MONO_tunnel_1, "gfx/MONO.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_MONO_tunnel_1, "gfx/MONO.png") {
    tmpl_tunnel_type(276)
}
spriteset(normal_MONO_tunnel_0, "gfx/MONO_1.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_MONO_tunnel_0, "gfx/MONO_1.png") {
    tmpl_tunnel_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_MONO_tunnel_1, terrain_type) {
    TILETYPE_SNOW: snow_MONO_tunnel_1;
    normal_MONO_tunnel_1;
}
switch(FEAT_RAILTYPES, SELF, switch_MONO_tunnel_0, terrain_type) {
    TILETYPE_SNOW: snow_MONO_tunnel_0;
    normal_MONO_tunnel_0;
}
switch(FEAT_RAILTYPES, SELF, switch_MONO_tunnel, param_tunnel) {
	1: switch_MONO_tunnel_1;
	switch_MONO_tunnel_0;
}

spriteset(normal_MONO_depots_1, "gfx/MONO.png") {												//DEPOTS
    tmpl_depot(0)
}
spriteset(snow_MONO_depots_1, "gfx/MONO.png") {
    tmpl_depot(414)
}
spriteset(normal_MONO_depots_2, "gfx/MONO_1.png") {
    tmpl_depot(0)
}
spriteset(snow_MONO_depots_2, "gfx/MONO_1.png") {
    tmpl_depot(414)
}
switch(FEAT_RAILTYPES, SELF, switch_MONO_depots_1, terrain_type) {
    TILETYPE_SNOW: snow_MONO_depots_1;
    normal_MONO_depots_1;
}
switch(FEAT_RAILTYPES, SELF, switch_MONO_depots_2, terrain_type) {
    TILETYPE_SNOW: snow_MONO_depots_2;
    normal_MONO_depots_2;
}
switch(FEAT_RAILTYPES, SELF, switch_MONO_depots, max(build_date - date(1999,1,1),0)) {
	0: switch_MONO_depots_1;
	switch_MONO_depots_2;
}

spriteset(fences_MONO, "gfx/MONO.png") {
	tmpl_fences(0)
}
spriteset(fences_MONO_cc, "gfx/MONO.png") {
	tmpl_fences(43)
}
switch(FEAT_RAILTYPES, SELF, switch_MONO_fences, param_fences) {								//FENCES
    0: fences_empty;
	2: fences_MONO;
	3: fences_MONO;
	4: fences_MONO_cc;
}

spriteset(gui_MONO_UGUI, "gfx/MONO.png") {														//GUI						
    tmpl_gui_UGUI()
}
spriteset(gui_MONO_opengfx, "gfx/MONO.png") {													//GUI
    tmpl_gui_gfx()
}
spriteset(gui_MONO_ttd, "gfx/MONO.png") {
    tmpl_gui_ttd()
}
switch (FEAT_RAILTYPES, SELF, switch_MONO_gui, param_gui) {
    1: gui_MONO_opengfx;
    2: gui_MONO_UGUI;
	gui_MONO_ttd;
}
//============================================================================
//						MAGLEV (MGLV)
//============================================================================
spriteset(switch_MGLV_overlay, "gfx/MGLV.png") {												// OVERLAY
    tmpl_overlay_type()
}

spriteset(normal_MGLV_precombined, "gfx/MGLV.png") {											// PRECOMBINED
    tmpl_precombined_type()
}
spriteset(snow_MGLV_precombined, "gfx/MGLV_1.png") {
    tmpl_precombined_type()
}
switch(FEAT_RAILTYPES, SELF, switch_MGLV_precombined, terrain_type) {
    TILETYPE_SNOW: snow_MGLV_precombined;
    normal_MGLV_precombined;
}

spriteset(normal_MGLV_underlay, "gfx/MGLV.png") {												// UNDERLAY
    tmpl_underlay_type(0)
}
spriteset(snow_MGLV_underlay, "gfx/MGLV.png") {
    tmpl_underlay_type(80)
}
switch(FEAT_RAILTYPES, SELF, switch_MGLV_underlay, terrain_type) {
    TILETYPE_SNOW: snow_MGLV_underlay;
    normal_MGLV_underlay;
}

spriteset(normal_MGLV_bridge, "gfx/MGLV.png") {													// BRIDGE
    tmpl_bridge_surfaces(0)
}
spriteset(snow_MGLV_bridge, "gfx/MGLV.png") {
    tmpl_bridge_surfaces(414)
}
switch(FEAT_RAILTYPES, SELF, switch_MGLV_bridge, terrain_type) {
    TILETYPE_SNOW: snow_MGLV_bridge;
    normal_MGLV_bridge;
}
spriteset(switch_MGLV_U_bridge, "gfx/MGLV_1.png") {												// U_BRIDGE
    tmpl_bridge_surfaces(0)
}

spriteset(normal_MGLV_tunnel_overlay, "gfx/MGLV.png") {											// TUNNEL_OVERLAY
    tmpl_tunnel_overlay_type(0)
}
spriteset(snow_MGLV_tunnel_overlay, "gfx/MGLV.png") {
    tmpl_tunnel_overlay_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_MGLV_tunnel_overlay, terrain_type) {
    TILETYPE_SNOW: snow_MGLV_tunnel_overlay;
    normal_MGLV_tunnel_overlay;
}

spriteset(normal_MGLV_tunnel_1, "gfx/MGLV.png") {													// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_MGLV_tunnel_1, "gfx/MGLV.png") {
    tmpl_tunnel_type(276)
}
spriteset(normal_MGLV_tunnel_0, "gfx/MGLV_1.png") {													// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_MGLV_tunnel_0, "gfx/MGLV_1.png") {
    tmpl_tunnel_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_MGLV_tunnel_1, terrain_type) {
    TILETYPE_SNOW: snow_MGLV_tunnel_1;
    normal_MGLV_tunnel_1;
}
switch(FEAT_RAILTYPES, SELF, switch_MGLV_tunnel_0, terrain_type) {
    TILETYPE_SNOW: snow_MGLV_tunnel_0;
    normal_MGLV_tunnel_0;
}
switch(FEAT_RAILTYPES, SELF, switch_MGLV_tunnel, param_tunnel) {
	1: switch_MGLV_tunnel_1;
	switch_MGLV_tunnel_0;
}

spriteset(normal_MGLV_depots, "gfx/MGLV.png") {														//DEPOTS
    tmpl_depot(0)
}
spriteset(snow_MGLV_depots, "gfx/MGLV.png") {
    tmpl_depot(414)
}
switch(FEAT_RAILTYPES, SELF, switch_MGLV_depots, terrain_type) {
    TILETYPE_SNOW: snow_MGLV_depots;
    normal_MGLV_depots;
}

spriteset(fences_MGLV, "gfx/MGLV.png") {
	tmpl_fences(0)
}
spriteset(fences_MGLV_cc, "gfx/MGLV.png") {
	tmpl_fences(43)
}
switch(FEAT_RAILTYPES, SELF, switch_MGLV_fences, param_fences) {
    0: fences_empty;
	2: fences_MGLV;
	3: fences_MGLV;
	4: fences_MGLV_cc;
}

spriteset(gui_MGLV_UGUI, "gfx/MGLV.png") {															//GUI						
    tmpl_gui_UGUI()
}
spriteset(gui_MGLV_opengfx, "gfx/MGLV.png") {														//GUI
    tmpl_gui_gfx()
}
spriteset(gui_MGLV_ttd, "gfx/MGLV.png") {
    tmpl_gui_ttd()
}
switch (FEAT_RAILTYPES, SELF, switch_MGLV_gui, param_gui) {
    1: gui_MGLV_opengfx;
    2: gui_MGLV_UGUI;
	gui_MGLV_ttd;
}
//============================================================================
//							FENCES
//============================================================================
spriteset(fences_empty, "gfx/SAAN.png") {
    tmpl_fences_empty()
}
//============================================================================
//							WIRES
//============================================================================
spriteset(switch_wires_standar_rail, "gfx/WIRES/WIRES.png") {
    tmpl_wires_catenary(0)
}

spriteset(switch_wires_narrow_rail, "gfx/WIRES/WIRES.png") {
    tmpl_wires_catenary(62)
}

spriteset(switch_SUF_asterisk_wires_standar_rail, "gfx/WIRES/WIRES.png") {
    tmpl_wires_catenary(124)
}
//==================================================================================================================================
//												Rail Definitions
//==================================================================================================================================
//============================================================================
//						LOW RAILWAY (SAAN)
//============================================================================
	item(FEAT_RAILTYPES, SAAN, 0) {
		property {
			label:							"SAAN";
			name:                       	string(STR_NAME_SAAN);
			toolbar_caption:    			string(STR_TOOLBAR_SAAN);
			menu_text:                  	string(STR_MENU_SAAN);
			build_window_caption:			string(STR_BUILD_CAPTION_RAIL);
			autoreplace_text:           	string(STR_AUTOREPLACE_RAIL);
			new_engine_text:            	string(STR_NEW_ENGINE_RAIL);
//			compatible_railtype_list:   	["RAIL", "ELRL",
//												"SAAN", "SBAN", "SCAN", "SDAN",	
//												"SABN", "SACN", "SADN", "SAEN",
////						                        "SBAE", "SCAE", "SDAE", "SEAE", "SFAE", "SUAE",
//                                              "SAAE", "SABE", "SACE", "SADE", "SAEE",
//												"SAAD", "SABD", "SACD", "SADD", "SAED",
//												"SAAd", "SABd", "SACd", "SADd", "SAEd",
//												"SAAA", "SABA", "SACA", "SADA", "SAEA",
//												"SAAa", "SABa", "SACa", "SADa", "SAEa",
//												"dAAN", "dBAN", "dBAE",
//												"SAA3", "SBA3", "SUA3",
//												"SAAZ", "SBAZ", "SUAZ"];
//			powered_railtype_list:      	["RAIL", "ELRL",
//												"SAAN", "SBAN", "SCAN", "SDAN",
//												"SABN", "SACN", "SADN", "SAEN",
////						                        "SAAE", "SBAE", "SCAE", "SDAE", "SEAE", "SFAE", "SUAE",
//			                                	"SABE", "SACE", "SADE", "SAEE",
//												"dAAN", "dBAN", "dBAE"];
//			alternative_railtype_list:		["RAIL",
//												"SAAN", "SBAN", "SCAN", "SDAN",												//Speed limit class [*X**]
//												"SABN", "SACN", "SADN", "SAEN"];                                            //Axle load class [**X*]
			railtype_flags:					bitmask(RAILTYPE_FLAG_PRECOMBINED, RAILTYPE_FLAG_DISALLOW_90DEG);
		//curve_speed_multiplier:     	1;
			station_graphics:           	RAILTYPE_STATION_NORMAL;
			construction_cost:          	(param_speed_1)/5+8;
			maintenance_cost:				(param_speed_1)/5+8;
			speed_limit:                	(param_speed_1) km/h;
			acceleration_model:         	ACC_MODEL_RAIL;
			map_colour:						20;
			sort_order:						2;
				}
	if (param_3rd == 4) {
		property {
//			powered_railtype_list:      	["SAA3", "SBA3", "SUA3", "SAAZ", "SBAZ", "SUAZ"];
			}
		} else
	if (param_3rd == 3) {
		property {
//			powered_railtype_list:      	["SAA3", "SBA3", "SUA3", "SAAZ", "SBAZ", "SUAZ"];
			}
		} else
	if (param_3rd == 2) {
		property {
//			powered_railtype_list:      	["SAAZ", "SBAZ", "SUAZ"];
			}
		} else
	if (param_3rd == 1) {
		property {
//			powered_railtype_list:      	["SAA3", "SBA3", "SUA3"];
			}
		}
	if (param_speed_1 == 29 ) {
		property {
			railtype_flags:					bitmask(RAILTYPE_FLAG_HIDDEN);
			introduces_railtype_list:		["SBAN", "SBBN"];
				}
			}
	if (param_speed_2 == 29 ) {
		property {
			introduces_railtype_list:		["SDCN", "SDDN"];
			}
		}
		graphics {
			track_overlay:   				switch_SAAN_overlay;
			precombined:					switch_SAAN_precombined;
			underlay:        				switch_SAAN_underlay;
			bridge_surfaces: 				switch_SAAN_bridge;
			level_crossings: 				switch_SAAN_level_crossings;
			tunnels:         				switch_SAAN_tunnel;
			depots:          				switch_SAAN_depots;
		  //signals:
			fences:          				switch_SAAN_fences;
			gui:							switch_SAAN_gui;
				}
	if (param_tunnel == 1) {		
		graphics {
			tunnel_overlay:					switch_SAAN_tunnel_overlay;
				}
			}
		}
//============================================================================
//						RAILWAY (SBBN)
//============================================================================
if (param_speed_2 != 29) {
if (railtype_available("SBBN") || loading_stage == LOADING_STAGE_RESERVE) {
	item(FEAT_RAILTYPES, SBBN, 5) {
		property {
			label:							"SBBN";
			name:                       	string(STR_NAME_SBBN);
			toolbar_caption:    			string(STR_TOOLBAR_SBBN);
			menu_text:                  	string(STR_MENU_SBBN);
			build_window_caption:			string(STR_BUILD_CAPTION_RAIL);
			autoreplace_text:           	string(STR_AUTOREPLACE_RAIL);
			new_engine_text:            	string(STR_NEW_ENGINE_RAIL);
//			compatible_railtype_list:   	["RAIL", "ELRL",
//												"SAAN", "SBAN", "SCAN", "SDAN",	
//												"SABN", "SACN", "SADN", "SAEN",
////						                        "SBAE", "SCAE", "SDAE", "SEAE", "SFAE", "SUAE",
//												"SAAE", "SABE", "SACE", "SADE", "SAEE",
//												"SAAD", "SABD", "SACD", "SADD", "SAED",
//												"SAAd", "SABd", "SACd", "SADd", "SAEd",
//												"SAAA", "SABA", "SACA", "SADA", "SAEA",
//												"SAAa", "SABa", "SACa", "SADa", "SAEa",
//												"dAAN", "dBAN", "dBAE",
//												"SAA3", "SBA3", "SUA3",
//												"SAAZ", "SBAZ", "SUAZ"];
//			powered_railtype_list:      	["RAIL", "ELRL",
//												"SAAN", "SBAN", "SCAN", "SDAN",
//												"SABN", "SACN", "SADN", "SAEN",
//						                        "SAAE", "SBAE", "SCAE", "SDAE", "SEAE", "SFAE", "SUAE",
			                                	"SABE", "SACE", "SADE", "SAEE",
//												"dAAN", "dBAN", "dBAE"];
//			alternative_railtype_list:		["RAIL",
//												"SAAN", "SBAN", "SCAN", "SDAN",												//Speed limit class [*X**]
//												"SABN", "SACN", "SADN", "SAEN"];                                            //Axle load class [**X*]
			railtype_flags:					bitmask(RAILTYPE_FLAG_PRECOMBINED, RAILTYPE_FLAG_DISALLOW_90DEG);
		//curve_speed_multiplier:     	1;
			station_graphics:           	RAILTYPE_STATION_NORMAL;
//			requires_railtype_list:			["RAIL"];
			introduction_date: 				date(1900,01,01);
			construction_cost:          	(param_speed_2)/5+10;
			maintenance_cost:				(param_speed_2)/5+10;
			speed_limit:                	(param_speed_2) km/h;
			acceleration_model:         	ACC_MODEL_RAIL;
			map_colour:						21;
			sort_order:						3;
				}
	if (param_3rd == 3) {
		property {
//			powered_railtype_list:      	["SAA3", "SBA3", "SUA3", "SAAZ", "SBAZ", "SUAZ"];
			}
		} else
	if (param_3rd == 2) {
		property {
//			powered_railtype_list:      	["SAAZ", "SBAZ", "SUAZ"];
			}
		} else
	if (param_3rd == 1) {
		property {
//			powered_railtype_list:      	["SAA3", "SBA3", "SUA3"];
			}
		}
		graphics {
			track_overlay:   				switch_SBBN_overlay;
			precombined:					switch_SBBN_precombined;
			underlay:        				switch_SBBN_underlay;
			bridge_surfaces: 				switch_SBBN_bridge;
			level_crossings: 				switch_SBBN_level_crossings;
			tunnels:         				switch_SBBN_tunnel;
			depots:          				switch_SBBN_depots;
		  //signals:
			fences:          				switch_SBBN_fences;
			gui:							switch_SBBN_gui;
				}
	if (param_tunnel == 1) {
		graphics {
			tunnel_overlay:					switch_SBBN_tunnel_overlay;
				}
			}
		}
	}
}
//============================================================================
//						RAILWAY EL(SBB,)
//============================================================================
	item(FEAT_RAILTYPES, "SBB,", 1) {
		property {
			label:							"SBB,";
			name:                       	string(STR_NAME_SBB_comma);
			toolbar_caption:    			string(STR_TOOLBAR_SBB_comma);
			menu_text:                  	string(STR_MENU_SBB_comma);
			build_window_caption:			string(STR_BUILD_CAPTION_ELRL);
			autoreplace_text:           	string(STR_AUTOREPLACE_ELRL);
			new_engine_text:            	string(STR_NEW_ENGINE_ELRL);
//			compatible_railtype_list:   	["RAIL", "ELRL",
//												"SAAN", "SBAN", "SCAN", "SDAN",	
//												"SABN", "SACN", "SADN", "SAEN",
//						                        "SBAE", "SCAE", "SDAE", "SEAE", "SFAE", "SUAE",
//												"SAAE", "SABE", "SACE", "SADE", "SAEE",
//												"SAAD", "SABD", "SACD", "SADD", "SAED",
//												"SAAd", "SABd", "SACd", "SADd", "SAEd",
//												"SAAA", "SABA", "SACA", "SADA", "SAEA",
//												"SAAa", "SABa", "SACa", "SADa", "SAEa",
//												"dAAN", "dBAN", "dBAE",
//												"SAA3", "SBA3", "SUA3",
//												"SAAZ", "SBAZ", "SUAZ"];
//			powered_railtype_list:   		["ELRL",
//						                        "SBAE", "SCAE", "SDAE", "SEAE", "SFAE", "SUAE",
//												"SAAE", "SABE", "SACE", "SADE", "SAEE",
//												"SAAD", "SABD", "SACD", "SADD", "SAED",
//												"SAAd", "SABd", "SACd", "SADd", "SAEd",
//												"SAAA", "SABA", "SACA", "SADA", "SAEA",
//												"SAAa", "SABa", "SACa", "SADa", "SAEa",
//												"dBAE"];
//			alternative_railtype_list:		["ELRL",
//						                        "SBAE", "SCAE", "SDAE", "SEAE", "SFAE", "SUAE",						//Speed limit class [*X**]
			                                	"SAAE", "SABE", "SACE", "SADE", "SAEE",								//Axle load class [**X*]
//												"SAAD", "SABD", "SACD", "SADD", "SAED",								//Energy source type class [***X]
//												"SAAd", "SABd", "SACd", "SADd", "SAEd",
//												"SAAA", "SABA", "SACA", "SADA", "SAEA",
//												"SAAa", "SABa", "SACa", "SADa", "SAEa"];
			railtype_flags:             	bitmask(RAILTYPE_FLAG_PRECOMBINED, RAILTYPE_FLAG_DISALLOW_90DEG, RAILTYPE_FLAG_CATENARY);
		//curve_speed_multiplier:     	1;
			station_graphics:           	RAILTYPE_STATION_NORMAL;
			construction_cost:          	(param_speed_2)/5+16;
			maintenance_cost:				(param_speed_2)/5+16;
			speed_limit:                	(param_speed_2) km/h;
			acceleration_model:         	ACC_MODEL_RAIL;
			map_colour:						149;
			sort_order:						6;
				}
	if (param_speed_2 == 29 ) {
		property {
			railtype_flags:					bitmask(RAILTYPE_FLAG_HIDDEN);
//			introduces_railtype_list:		["SCAE"];
				}
			}
	if (param_3rd > 1) {
		property {
			error(FATAL, INVALID_PARAMETER, string(STR_INVALID_TEST));
//			powered_railtype_list:      	["SAAZ", "SBAZ", "SUAZ"];
			}
		}
		graphics {
			track_overlay:   				switch_SBBN_overlay;
			precombined:					switch_SBBN_precombined;
			underlay:        				switch_SBBN_underlay;
			bridge_surfaces: 				switch_SBBN_bridge;
			level_crossings: 				switch_SBBN_level_crossings;
			tunnels:         				switch_SBBN_tunnel;
			depots:          				switch_SBB_comma_depots;
			catenary_pylons: 				switch_SBB_comma_pylons_catenary;
			catenary_wire: 					switch_wires_standar_rail;
		//signals:
			fences:          				switch_SBBN_fences;
			gui:							switch_SBB_comma_gui;
				}
	if (param_tunnel == 1) {
		graphics {
			tunnel_overlay:					switch_SBBN_tunnel_overlay;
				}
			}
		}
//============================================================================
//						MAIN RAILWAY (SDDN)
//============================================================================
if (railtype_available("SDDN") || loading_stage == LOADING_STAGE_RESERVE) {
	item(FEAT_RAILTYPES, SDDN, 7) {
		property {
			label:							"SDDN";
			name:                       	string(STR_NAME_SDDN);
			toolbar_caption:    			string(STR_TOOLBAR_SDDN);
			menu_text:                  	string(STR_MENU_SDDN);
			build_window_caption:			string(STR_BUILD_CAPTION_RAIL);
			autoreplace_text:           	string(STR_AUTOREPLACE_RAIL);
			new_engine_text:            	string(STR_NEW_ENGINE_RAIL);
//			compatible_railtype_list:   	["RAIL", "ELRL",
//												"SAAN", "SBAN", "SCAN", "SDAN",	
//												"SABN", "SACN", "SADN", "SAEN",
//						                        "SBAE", "SCAE", "SDAE", "SEAE", "SFAE", "SUAE",
//												"SAAE", "SABE", "SACE", "SADE", "SAEE",
//												"SAAD", "SABD", "SACD", "SADD", "SAED",
//												"SAAd", "SABd", "SACd", "SADd", "SAEd",
//												"SAAA", "SABA", "SACA", "SADA", "SAEA",
//												"SAAa", "SABa", "SACa", "SADa", "SAEa",
//												"dAAN", "dBAN", "dBAE",
//												"SAA3", "SBA3", "SUA3",
//												"SAAZ", "SBAZ", "SUAZ"];
//			powered_railtype_list:      	["RAIL", "ELRL",
//												"SAAN", "SBAN", "SCAN", "SDAN",
//												"SABN", "SACN", "SADN", "SAEN",
//						                        "SAAE", "SBAE", "SCAE", "SDAE", "SEAE", "SFAE", "SUAE",
			                                	"SABE", "SACE", "SADE", "SAEE",
//												"dAAN", "dBAN", "dBAE"];
//			alternative_railtype_list:		["RAIL",
//												"SAAN", "SBAN", "SCAN", "SDAN",												//Speed limit class [*X**]
//												"SABN", "SACN", "SADN", "SAEN"];                                            //Axle load class [**X*]
			railtype_flags:             	bitmask(RAILTYPE_FLAG_PRECOMBINED, RAILTYPE_FLAG_DISALLOW_90DEG);
		//curve_speed_multiplier:     	1;
			station_graphics:           	RAILTYPE_STATION_NORMAL;
//			requires_railtype_list:			["RAIL"];
			introduction_date: 				date(1930,01,01);
			construction_cost:          	(param_speed_3)/5+12;
			maintenance_cost:				(param_speed_3)/5+12;
			speed_limit:                	(param_speed_3) km/h;
			acceleration_model:         	ACC_MODEL_RAIL;
			map_colour:						22;
			sort_order:						4;
				}
	if (param_3rd == 3) {
		property {
//			powered_railtype_list:      	["SAA3", "SBA3", "SUA3", "SAAZ", "SBAZ", "SUAZ"];
			}
		} else
	if (param_3rd == 2) {
		property {
//			powered_railtype_list:      	["SAAZ", "SBAZ", "SUAZ"];
			}
		} else
	if (param_3rd == 1) {
		property {
//			powered_railtype_list:      	["SAA3", "SBA3", "SUA3"];
			}
		}
		graphics {
			track_overlay:   				switch_SDDN_overlay;
			precombined:					switch_SDDN_precombined;
			underlay:        				switch_SDDN_underlay;
			bridge_surfaces: 				switch_SDDN_bridge;
			level_crossings: 				switch_SDDN_level_crossings;
			tunnels:         				switch_SDDN_tunnel;
			depots:          				switch_SDDN_depots;
		  //signals:
			fences:          				switch_SDDN_fences;
			gui:							switch_SDDN_gui;
				}
	if (param_tunnel == 1) {
		graphics {
			tunnel_overlay:					switch_SDDN_tunnel_overlay;
				}
			}
		}
	}
//============================================================================
//						MAIN RAILWAY EL (SDD*)
//============================================================================
if (railtype_available("SDD*") || loading_stage == LOADING_STAGE_RESERVE) {
	item(FEAT_RAILTYPES, "SDD*", 8) {
		property {
			label:							"SDD*";
			name:                       	string(STR_NAME_SDD_asterisk);
			toolbar_caption:    			string(STR_TOOLBAR_SDD_asterisk);
			menu_text:                  	string(STR_MENU_SDD_asterisk);
			build_window_caption:			string(STR_BUILD_CAPTION_ELRL);
			autoreplace_text:           	string(STR_AUTOREPLACE_ELRL);
			new_engine_text:            	string(STR_NEW_ENGINE_ELRL);
//			compatible_railtype_list:   	["RAIL", "ELRL",
//												"SAAN", "SBAN", "SCAN", "SDAN",	
//												"SABN", "SACN", "SADN", "SAEN",
//						                        "SBAE", "SCAE", "SDAE", "SEAE", "SFAE", "SUAE",
//												"SAAE", "SABE", "SACE", "SADE", "SAEE",
//												"SAAD", "SABD", "SACD", "SADD", "SAED",
//												"SAAd", "SABd", "SACd", "SADd", "SAEd",
//												"SAAA", "SABA", "SACA", "SADA", "SAEA",
//												"SAAa", "SABa", "SACa", "SADa", "SAEa",
//												"dAAN", "dBAN", "dBAE",
//												"SAA3", "SBA3", "SUA3",
//												"SAAZ", "SBAZ", "SUAZ"];
//			powered_railtype_list:   		["ELRL",
//						                        "SBAE", "SCAE", "SDAE", "SEAE", "SFAE", "SUAE",
//												"SAAE", "SABE", "SACE", "SADE", "SAEE",
//												"SAAD", "SABD", "SACD", "SADD", "SAED",
//												"SAAd", "SABd", "SACd", "SADd", "SAEd",
//												"SAAA", "SABA", "SACA", "SADA", "SAEA",
//												"SAAa", "SABa", "SACa", "SADa", "SAEa",
//												"dBAE"];
//			alternative_railtype_list:		["ELRL",
//						                        "SBAE", "SCAE", "SDAE", "SEAE", "SFAE", "SUAE",						//Speed limit class [*X**]
			                                	"SAAE", "SABE", "SACE", "SADE", "SAEE",								//Axle load class [**X*]
//												"SAAD", "SABD", "SACD", "SADD", "SAED",								//Energy source type class [***X]
//												"SAAd", "SABd", "SACd", "SADd", "SAEd",
//												"SAAA", "SABA", "SACA", "SADA", "SAEA",
//												"SAAa", "SABa", "SACa", "SADa", "SAEa"];
			railtype_flags:             	bitmask(RAILTYPE_FLAG_PRECOMBINED, RAILTYPE_FLAG_DISALLOW_90DEG, RAILTYPE_FLAG_CATENARY);
		//curve_speed_multiplier:     	1;
			station_graphics:           	RAILTYPE_STATION_NORMAL;
			requires_railtype_list:			["ELRL"];
			introduction_date: 				date(1930,01,01);
			construction_cost:          	(param_speed_3)/5+18;
			maintenance_cost:				(param_speed_3)/5+18;
			speed_limit:                	(param_speed_3) km/h;
			acceleration_model:         	ACC_MODEL_RAIL;
			map_colour:						150;
			sort_order:						7;
				}
	if (param_3rd > 1) {
		property {
//			powered_railtype_list:      	["SAAZ", "SBAZ", "SUAZ"];
			}
		}
		graphics {
			track_overlay:   				switch_SDDN_overlay;
			precombined:					switch_SDDN_precombined;
			underlay:        				switch_SDDN_underlay;
			bridge_surfaces: 				switch_SDDN_bridge;
			level_crossings: 				switch_SDDN_level_crossings;
			tunnels:         				switch_SDDN_tunnel;
			depots:          				switch_SDD_asterisk_depots;
			catenary_pylons: 				switch_SDD_asterisk_pylons_catenary;
			catenary_wire: 					switch_wires_standar_rail;
		//signals:
			fences:          				switch_SDDN_fences;
			gui:							switch_SDD_asterisk_gui;
				}
	if (param_tunnel == 1) {
		graphics {
			tunnel_overlay:			switch_SDDN_tunnel_overlay;
				}
			}
		}
	}
//============================================================================
//						MODERN RAILWAY (SEDN)
//============================================================================
if (railtype_available("SEDN") || loading_stage == LOADING_STAGE_RESERVE) {
	item(FEAT_RAILTYPES, SEDN, 9) {
		property {
			label:							"SEDN";
			name:                       	string(STR_NAME_SEDN);
			toolbar_caption:    			string(STR_TOOLBAR_SEDN);
			menu_text:                  	string(STR_MENU_SEDN);
			build_window_caption:			string(STR_BUILD_CAPTION_RAIL);
			autoreplace_text:           	string(STR_AUTOREPLACE_RAIL);
			new_engine_text:            	string(STR_NEW_ENGINE_RAIL);
//			compatible_railtype_list:   	["RAIL", "ELRL",
//												"SAAN", "SBAN", "SCAN", "SDAN",	
//												"SABN", "SACN", "SADN", "SAEN",
//						                        "SBAE", "SCAE", "SDAE", "SEAE", "SFAE", "SUAE",
//												"SAAE", "SABE", "SACE", "SADE", "SAEE",
//												"SAAD", "SABD", "SACD", "SADD", "SAED",
//												"SAAd", "SABd", "SACd", "SADd", "SAEd",
//												"SAAA", "SABA", "SACA", "SADA", "SAEA",
//												"SAAa", "SABa", "SACa", "SADa", "SAEa",
//												"dAAN", "dBAN", "dBAE",
//												"SAA3", "SBA3", "SUA3",
//												"SAAZ", "SBAZ", "SUAZ"];
//			powered_railtype_list:      	["RAIL", "ELRL",
//												"SAAN", "SBAN", "SCAN", "SDAN",
//												"SABN", "SACN", "SADN", "SAEN",
//						                        "SAAE", "SBAE", "SCAE", "SDAE", "SEAE", "SFAE", "SUAE",
			                                	"SABE", "SACE", "SADE", "SAEE",
//												"dAAN", "dBAN", "dBAE"];
//			alternative_railtype_list:		["RAIL",
//												"SAAN", "SBAN", "SCAN", "SDAN",												//Speed limit class [*X**]
//												"SABN", "SACN", "SADN", "SAEN"];                                            //Axle load class [**X*]
			railtype_flags:             	bitmask(RAILTYPE_FLAG_PRECOMBINED, RAILTYPE_FLAG_DISALLOW_90DEG);
		//curve_speed_multiplier:     	1;
			station_graphics:           	RAILTYPE_STATION_NORMAL;
			requires_railtype_list:			["RAIL"];
			introduction_date: 				date(1960,01,01);
			construction_cost:          	(param_speed_4 == 501) ? 80 : (param_speed_4)/5+20;
			maintenance_cost:				(param_speed_4 == 501) ? 80 : (param_speed_4)/5+20;
			speed_limit:                	(param_speed_4 == 501) ?  0 : (param_speed_4) km/h;
			acceleration_model:         	ACC_MODEL_RAIL;
			map_colour:						23;
			sort_order:						5;
				}
	if (param_3rd == 3) {
		property {
//			powered_railtype_list:      	["SAA3", "SBA3", "SUA3", "SAAZ", "SBAZ", "SUAZ"];
			}
		} else
	if (param_3rd == 2) {
			property {
//			powered_railtype_list:      	["SAAZ", "SBAZ", "SUAZ"];
			}
		} else
	if (param_3rd == 1) {
		property {
//			powered_railtype_list:      	["SAA3", "SBA3", "SUA3"];
			}
		}
		graphics {
			track_overlay:   				switch_SEDN_overlay;
			precombined:					switch_SEDN_precombined;
			underlay:        				switch_SEDN_underlay;
			bridge_surfaces: 				switch_SEDN_bridge;
			level_crossings: 				switch_SEDN_level_crossings;
			tunnels:         				switch_SEDN_tunnel;
			depots:          				switch_SEDN_depots;
		//signals:
			fences:          				switch_SEDN_fences;
			gui:							switch_SEDN_gui;
				}
	if (param_tunnel == 1) {
		graphics {
			tunnel_overlay:					switch_SEDN_tunnel_overlay;
				}
			}
		}
	}
//============================================================================
//						MODERN RAILWAY EL (SED*)
//============================================================================
if (railtype_available("SED*") || loading_stage == LOADING_STAGE_RESERVE) {
	item(FEAT_RAILTYPES, "SED*", 10) {
		property {
			label:							"SED*";
			name:                       	string(STR_NAME_SED_asterisk);
			toolbar_caption:    			string(STR_TOOLBAR_SED_asterisk);
			menu_text:                  	string(STR_MENU_SED_asterisk);
			build_window_caption:			string(STR_BUILD_CAPTION_ELRL);
			autoreplace_text:           	string(STR_AUTOREPLACE_ELRL);
			new_engine_text:            	string(STR_NEW_ENGINE_ELRL);
//			compatible_railtype_list:   	["RAIL", "ELRL",
//												"SAAN", "SBAN", "SCAN", "SDAN",	
//												"SABN", "SACN", "SADN", "SAEN",
//						                        "SBAE", "SCAE", "SDAE", "SEAE", "SFAE", "SUAE",
//												"SAAE", "SABE", "SACE", "SADE", "SAEE",
//												"SAAD", "SABD", "SACD", "SADD", "SAED",
//												"SAAd", "SABd", "SACd", "SADd", "SAEd",
//												"SAAA", "SABA", "SACA", "SADA", "SAEA",
//												"SAAa", "SABa", "SACa", "SADa", "SAEa",
//												"dAAN", "dBAN", "dBAE",
//												"SAA3", "SBA3", "SUA3",
//												"SAAZ", "SBAZ", "SUAZ"];
//			powered_railtype_list:   		["ELRL",
//						                        "SBAE", "SCAE", "SDAE", "SEAE", "SFAE", "SUAE",
//												"SAAE", "SABE", "SACE", "SADE", "SAEE",
//												"SAAD", "SABD", "SACD", "SADD", "SAED",
//												"SAAd", "SABd", "SACd", "SADd", "SAEd",
//												"SAAA", "SABA", "SACA", "SADA", "SAEA",
//												"SAAa", "SABa", "SACa", "SADa", "SAEa",
//												"dBAE"];
//			alternative_railtype_list:		["ELRL",
//						                        "SBAE", "SCAE", "SDAE", "SEAE", "SFAE", "SUAE",						//Speed limit class [*X**]
			                                	"SAAE", "SABE", "SACE", "SADE", "SAEE",								//Axle load class [**X*]
//												"SAAD", "SABD", "SACD", "SADD", "SAED",								//Energy source type class [***X]
//												"SAAd", "SABd", "SACd", "SADd", "SAEd",
//												"SAAA", "SABA", "SACA", "SADA", "SAEA",
//												"SAAa", "SABa", "SACa", "SADa", "SAEa"];
			railtype_flags:             	bitmask(RAILTYPE_FLAG_PRECOMBINED, RAILTYPE_FLAG_DISALLOW_90DEG, RAILTYPE_FLAG_CATENARY);
		//curve_speed_multiplier:     	1;
			station_graphics:           	RAILTYPE_STATION_NORMAL;
			requires_railtype_list:			["ELRL"];
			introduction_date: 				date(1960,01,01);
			construction_cost:          	(param_speed_4 == 501) ? 100 : (param_speed_4)/5+20;
			maintenance_cost:				(param_speed_4 == 501) ? 100 : (param_speed_4)/5+20;
			speed_limit:                	(param_speed_4 == 501) ?   0 : (param_speed_4) km/h;
			acceleration_model:         	ACC_MODEL_RAIL;
			map_colour:						151;
			sort_order:						8;
				}
	if (param_3rd > 1) {
		property {
//			powered_railtype_list:      	["SAAZ", "SBAZ", "SUAZ"];
			}
		}
		graphics {
			track_overlay:   				switch_SEDN_overlay;
			precombined:					switch_SEDN_precombined;
			underlay:        				switch_SEDN_underlay;
			bridge_surfaces: 				switch_SEDN_bridge;
			level_crossings: 				switch_SEDN_level_crossings;
			tunnels:         				switch_SEDN_tunnel;
			depots:          				switch_SED_asterisk_depots;
			catenary_pylons: 				switch_SED_asterisk_pylons_catenary;
			catenary_wire: 					switch_wires_standar_rail;
		  //signals:
			fences:          				switch_SEDN_fences;
			gui:							switch_SED_asterisk_gui;
				}
	if (param_tunnel == 1) {
		graphics {
			tunnel_overlay:					switch_SEDN_tunnel_overlay;
				}
			}
		}
	}
//============================================================================
//						HIGH-SPEED RAILWAY EL (SFBA)
//============================================================================
if (param_speed_5 != 99) {
if (railtype_available("SFBA") || loading_stage == LOADING_STAGE_RESERVE) {
	item(FEAT_RAILTYPES, SFBA, 11) {
		property {
			label:							"SFBA";
			name:                       	string(STR_NAME_SFBA);
			toolbar_caption:    			string(STR_TOOLBAR_SFBA);
			menu_text:                  	string(STR_MENU_SFBA);
			build_window_caption:			string(STR_BUILD_CAPTION_ELRL);
			autoreplace_text:           	string(STR_AUTOREPLACE_ELRL);
			new_engine_text:            	string(STR_NEW_ENGINE_ELRL);
//			compatible_railtype_list:   	["RAIL", "ELRL",
//												"SAAN", "SBAN", "SCAN", "SDAN",	
//												"SABN", "SACN", "SADN", "SAEN",
//						                        "SBAE", "SCAE", "SDAE", "SEAE", "SFAE", "SUAE",
//												"SAAE", "SABE", "SACE", "SADE", "SAEE",
//												"SAAD", "SABD", "SACD", "SADD", "SAED",
//												"SAAd", "SABd", "SACd", "SADd", "SAEd",
//												"SAAA", "SABA", "SACA", "SADA", "SAEA",
//												"SAAa", "SABa", "SACa", "SADa", "SAEa",
//												"dAAN", "dBAN", "dBAE",
//												"SAA3", "SBA3", "SUA3",
//												"SAAZ", "SBAZ", "SUAZ"];
//			powered_railtype_list:   		["ELRL",
//						                        "SBAE", "SCAE", "SDAE", "SEAE", "SFAE", "SUAE",
//												"SAAE", "SABE", "SACE", "SADE", "SAEE",
//												"SAAD", "SABD", "SACD", "SADD", "SAED",
//												"SAAd", "SABd", "SACd", "SADd", "SAEd",
//												"SAAA", "SABA", "SACA", "SADA", "SAEA",
//												"SAAa", "SABa", "SACa", "SADa", "SAEa",
//												"dBAE"];
//			alternative_railtype_list:		["ELRL",
//						                        "SBAE", "SCAE", "SDAE", "SEAE", "SFAE", "SUAE",						//Speed limit class [*X**]
			                                	"SAAE", "SABE", "SACE", "SADE", "SAEE",								//Axle load class [**X*]
//												"SAAD", "SABD", "SACD", "SADD", "SAED",								//Energy source type class [***X]
//												"SAAd", "SABd", "SACd", "SADd", "SAEd",
//												"SAAA", "SABA", "SACA", "SADA", "SAEA",
//												"SAAa", "SABa", "SACa", "SADa", "SAEa"];
			railtype_flags:             	bitmask(RAILTYPE_FLAG_PRECOMBINED, RAILTYPE_FLAG_DISALLOW_90DEG, RAILTYPE_FLAG_CATENARY, RAILTYPE_FLAG_NO_LEVEL_CROSSING);
		//curve_speed_multiplier:     	1;
			station_graphics:           	RAILTYPE_STATION_NORMAL;
			requires_railtype_list:			["ELRL"];
			introduction_date: 				date(1990,01,01);
			construction_cost:          	(param_speed_5 == 501) ? 125 : (param_speed_5)/5+22;
			maintenance_cost:				(param_speed_5 == 501) ? 125 : (param_speed_5)/5+22;
			speed_limit:                	(param_speed_5 == 501) ?   0 : (param_speed_5) km/h;
			acceleration_model:         	ACC_MODEL_RAIL;
			map_colour:						152;
			sort_order:						9;
				}
	if (param_3rd > 1) {
		property {
//			powered_railtype_list:      	["SAAZ", "SBAZ", "SUAZ"];
			}
		}
		graphics {
			track_overlay:   				switch_SFBA_overlay;
			precombined:					switch_SFBA_precombined;
			underlay:        				switch_SFBA_underlay;
			bridge_surfaces: 				switch_SFBA_bridge;
			tunnels:         				switch_SFBA_tunnel;
			depots:          				switch_SFBA_depots;
			catenary_pylons: 				switch_SFBA_pylons_catenary;
			catenary_wire: 					switch_wires_standar_rail;
		  //signals:
			fences:          				switch_SFBA_fences;
			gui:							switch_SFBA_gui;
				}
	if (param_tunnel == 1) {
		graphics {
			tunnel_overlay:					switch_SFBA_tunnel_overlay;
				}
			}
		}
	}
}
//============================================================================
//						VERY HIGH-SPEED RAILWAY EL (SGAA)
//============================================================================
if (param_speed_6 != 99) {
if (railtype_available("SGAA") || loading_stage == LOADING_STAGE_RESERVE) {
		item(FEAT_RAILTYPES, SGAA, 24) {
		property {
			label:							"SGAA";
			name:                       	string(STR_NAME_SGAA);
			toolbar_caption:    			string(STR_TOOLBAR_SGAA);
			menu_text:                  	string(STR_MENU_SGAA);
			build_window_caption:			string(STR_BUILD_CAPTION_ELRL);
			autoreplace_text:           	string(STR_AUTOREPLACE_ELRL);
			new_engine_text:            	string(STR_NEW_ENGINE_ELRL);
//			compatible_railtype_list:   	["RAIL", "ELRL",
//												"SAAN", "SBAN", "SCAN", "SDAN",	
//												"SABN", "SACN", "SADN", "SAEN",
//						                        "SBAE", "SCAE", "SDAE", "SEAE", "SFAE", "SUAE",
//												"SAAE", "SABE", "SACE", "SADE", "SAEE",
//												"SAAD", "SABD", "SACD", "SADD", "SAED",
//												"SAAd", "SABd", "SACd", "SADd", "SAEd",
//												"SAAA", "SABA", "SACA", "SADA", "SAEA",
//												"SAAa", "SABa", "SACa", "SADa", "SAEa",
//												"dAAN", "dBAN", "dBAE",
//												"SAA3", "SBA3", "SUA3",
//												"SAAZ", "SBAZ", "SUAZ"];
//			powered_railtype_list:   		["ELRL",
//						                        "SBAE", "SCAE", "SDAE", "SEAE", "SFAE", "SUAE",
//												"SAAE", "SABE", "SACE", "SADE", "SAEE",
//												"SAAD", "SABD", "SACD", "SADD", "SAED",
//												"SAAd", "SABd", "SACd", "SADd", "SAEd",
//												"SAAA", "SABA", "SACA", "SADA", "SAEA",
//												"SAAa", "SABa", "SACa", "SADa", "SAEa",
//												"dBAE"];
//			alternative_railtype_list:		["ELRL",
//						                        "SBAE", "SCAE", "SDAE", "SEAE", "SFAE", "SUAE",						//Speed limit class [*X**]
			                                	"SAAE", "SABE", "SACE", "SADE", "SAEE",								//Axle load class [**X*]
//												"SAAD", "SABD", "SACD", "SADD", "SAED",								//Energy source type class [***X]
//												"SAAd", "SABd", "SACd", "SADd", "SAEd",
//												"SAAA", "SABA", "SACA", "SADA", "SAEA",
//												"SAAa", "SABa", "SACa", "SADa", "SAEa"];
			railtype_flags:             	bitmask(RAILTYPE_FLAG_PRECOMBINED, RAILTYPE_FLAG_DISALLOW_90DEG, RAILTYPE_FLAG_CATENARY, RAILTYPE_FLAG_NO_LEVEL_CROSSING);
		//curve_speed_multiplier:     	1;
			station_graphics:           	RAILTYPE_STATION_NORMAL;
			requires_railtype_list:			["ELRL"];
			introduction_date: 				date(2010,01,01);
			construction_cost:          	(param_speed_6 == 501) ? 150 : (param_speed_6)/5+24;
			maintenance_cost:				(param_speed_6 == 501) ? 150 : (param_speed_6)/5+24;
			speed_limit:                	(param_speed_6 == 501) ?   0 : (param_speed_6) km/h;
			acceleration_model:         	ACC_MODEL_RAIL;
			map_colour:						153;
			sort_order:						10;
				}
	if (param_3rd > 1) {
		property {
//			powered_railtype_list:      	["SAAZ", "SBAZ", "SUAZ"];
			}
		}
		graphics {
			track_overlay:   				switch_SGAA_overlay;
			precombined:					switch_SGAA_precombined;
			underlay:        				switch_SGAA_underlay;
			bridge_surfaces: 				switch_SGAA_bridge;
			tunnels:         				switch_SGAA_tunnel;
			depots:          				switch_SGAA_depots;
			catenary_pylons: 				switch_SGAA_pylons_catenary;
			catenary_wire: 					switch_SUF_asterisk_wires_standar_rail;
		//signals:
			fences:          				switch_SGAA_fences;
			gui:							switch_SGAA_gui;
				}
	if (param_tunnel == 1) {
		graphics {
			tunnel_overlay:					switch_SGAA_tunnel_overlay;
				}
			}
		}
	}
}
//============================================================================
//						URBAN RAILWAY EL (SUF*)
//============================================================================
if (param_speed_7 != 29) {
if (railtype_available("SUF*") || loading_stage == LOADING_STAGE_RESERVE) {
	item(FEAT_RAILTYPES, "SUF*", 12) {
		property {
			label:							"SUF*";
			name:                       	string(STR_NAME_SUF_asterisk);
			toolbar_caption:    			string(STR_TOOLBAR_SUF_asterisk);
			menu_text:                  	string(STR_MENU_SUF_asterisk);
			build_window_caption:			string(STR_BUILD_CAPTION_ELRL);
			autoreplace_text:           	string(STR_AUTOREPLACE_ELRL);
			new_engine_text:            	string(STR_NEW_ENGINE_ELRL);
//			compatible_railtype_list:   	["RAIL", "ELRL",
//												"SAAN", "SBAN", "SCAN", "SDAN",	
//												"SABN", "SACN", "SADN", "SAEN",
//						                        "SBAE", "SCAE", "SDAE", "SEAE", "SFAE", "SUAE",
//												"SAAE", "SABE", "SACE", "SADE", "SAEE",
//												"SAAD", "SABD", "SACD", "SADD", "SAED",
//												"SAAd", "SABd", "SACd", "SADd", "SAEd",
//												"SAAA", "SABA", "SACA", "SADA", "SAEA",
//												"SAAa", "SABa", "SACa", "SADa", "SAEa",
//												"dAAN", "dBAN", "dBAE",
//												"SAA3", "SBA3", "SUA3",
//												"SAAZ", "SBAZ", "SUAZ"];
//			powered_railtype_list:   		["ELRL",
//						                        "SBAE", "SCAE", "SDAE", "SEAE", "SFAE", "SUAE",
//												"SAAE", "SABE", "SACE", "SADE", "SAEE",
//												"SAAD", "SABD", "SACD", "SADD", "SAED",
//												"SAAd", "SABd", "SACd", "SADd", "SAEd",
//												"SAAA", "SABA", "SACA", "SADA", "SAEA",
//												"SAAa", "SABa", "SACa", "SADa", "SAEa",
//												"dBAE"];
//			alternative_railtype_list:		["ELRL",
//						                        "SBAE", "SCAE", "SDAE", "SEAE", "SFAE", "SUAE",						//Speed limit class [*X**]
			                                	"SAAE", "SABE", "SACE", "SADE", "SAEE",								//Axle load class [**X*]
//												"SAAD", "SABD", "SACD", "SADD", "SAED",								//Energy source type class [***X]
//												"SAAd", "SABd", "SACd", "SADd", "SAEd",
//												"SAAA", "SABA", "SACA", "SADA", "SAEA",
//												"SAAa", "SABa", "SACa", "SADa", "SAEa"];
			railtype_flags:             	bitmask(RAILTYPE_FLAG_PRECOMBINED, RAILTYPE_FLAG_DISALLOW_90DEG, RAILTYPE_FLAG_CATENARY);
		//curve_speed_multiplier:     	1;
			station_graphics:           	RAILTYPE_STATION_NORMAL;
			requires_railtype_list:			["ELRL"];
			introduction_date: 				date(1960,01,01);
			construction_cost:          	(param_speed_7)/5+26;
			maintenance_cost:				(param_speed_7)/5+26;
			speed_limit:                	(param_speed_7) km/h;
			acceleration_model:         	ACC_MODEL_RAIL;
			map_colour:						66;
			sort_order:						11;
				}
	if (param_3rd > 1) {
		property {
//			powered_railtype_list:      	["SAAZ", "SBAZ", "SUAZ"];
			}
		}
		graphics {
			track_overlay:   				switch_SUF_asterisk_overlay;
			precombined:					switch_SUF_asterisk_precombined;
			underlay:        				switch_SUF_asterisk_underlay;
			level_crossings:				switch_SUF_asterisk_level_crossings;
			bridge_surfaces: 				switch_SUF_asterisk_bridge;
			tunnels:         				switch_SUF_asterisk_tunnel;
			depots:          				switch_SUF_asterisk_depots;
			catenary_pylons: 				switch_SUF_asterisk_pylons_catenary;
			catenary_wire: 					switch_SUF_asterisk_wires_standar_rail;
		  //signals:
			fences:          				switch_SUF_asterisk_fences;
			gui:							switch_SUF_asterisk_gui;
				}
	if (param_tunnel == 1) {
		graphics {
			tunnel_overlay:					switch_SUF_asterisk_tunnel_overlay;
				}
			}
		}
	}
}
//============================================================================
//						METRO (SAA3)
//============================================================================
//if (railtype_available("SAA3") || loading_stage == LOADING_STAGE_RESERVE) {
//	item(FEAT_RAILTYPES, SAA3, 13) {
//		property {
//			label:							"SAA3";
//			name:                       	string(STR_NAME_SAA3);
//			toolbar_caption:    			string(STR_TOOLBAR_SAA3);
//			menu_text:                  	string(STR_MENU_SAA3);
//			build_window_caption:			string(STR_BUILD_CAPTION_3RDR);
//			autoreplace_text:           	string(STR_AUTOREPLACE_3RDR);
//			new_engine_text:            	string(STR_NEW_ENGINE_3RDR);
//			compatible_railtype_list:   	["RAIL", "ELRL",
//												"SAAN", "SBAN", "SCAN", "SDAN",	
////						                        "SBAE", "SCAE", "SDAE", "SEAE", "SFAE", "SUAE",
//												"dAAN", "dBAN", "dBAE",
//												"SAA3", "SBA3", "SUA3",
//												"SAAZ", "SBAZ", "SUAZ"];
//			powered_railtype_list:      	["3RDR", "MTRO", 
//												"SAA3", "SBA3", "SUA3", "SAB3", "SBB3", 
//												"SAAZ", "SBAZ", "SABZ", "SBBZ", "SUAZ"];
//			alternative_railtype_list:		["3RDR", "MTRO", 
//												"SAA3", "SBA3", "SUA3", "SAB3", "SBB3", 
//												"SAAZ", "SBAZ", "SABZ", "SBBZ", "SUAZ"];
//			railtype_flags:             	bitmask(RAILTYPE_FLAG_PRECOMBINED, RAILTYPE_FLAG_DISALLOW_90DEG);
//		//curve_speed_multiplier:     	1;
//			station_graphics:           	RAILTYPE_STATION_NORMAL;
//			construction_cost:          	(param_speed_8)/5+8;
//			maintenance_cost:				(param_speed_8)/5+8;
//			speed_limit:                	(param_speed_8) km/h;
//			acceleration_model:         	ACC_MODEL_RAIL;
//			map_colour:						93;
//			sort_order:						12;
//				}
//		graphics {
//			track_overlay:   				switch_SAA3_overlay;
//			precombined:					switch_SAA3_precombined;
//			underlay:        				switch_SAA3_underlay;
//			bridge_surfaces: 				switch_SAA3_bridge;
//			level_crossings: 				switch_SAA3_level_crossings;
//			tunnels:         				switch_SAA3_tunnel;
//			depots:          				switch_SAA3_depots;
//		  //signals:
//			fences:          				switch_SAA3_fences;
//			gui:							switch_SAA3_gui;
//				}
//	if (param_tunnel == 1) {
//		graphics {
//			tunnel_overlay:					switch_SAA3_tunnel_overlay;
//				}
//			}
//		}
//	}
//============================================================================
//					MODERN METRO (SBA3)
//============================================================================
//if (railtype_available("SBA3") || loading_stage == LOADING_STAGE_RESERVE) {
//	item(FEAT_RAILTYPES, SBA3, 21) {
//		property {
//			label:							"SBA3";
//			name:                       	string(STR_NAME_SBA3);
//			toolbar_caption:    			string(STR_TOOLBAR_SBA3);
//			menu_text:                  	string(STR_MENU_SBA3);
//			build_window_caption:			string(STR_BUILD_CAPTION_3RDR);
//			autoreplace_text:           	string(STR_AUTOREPLACE_3RDR);
//			new_engine_text:            	string(STR_NEW_ENGINE_3RDR);
//			compatible_railtype_list:   	["RAIL", "ELRL",
//												"SAAN", "SBAN", "SCAN", "SDAN",	
////						                        "SBAE", "SCAE", "SDAE", "SEAE", "SFAE", "SUAE",
//												"dAAN", "dBAN", "dBAE",
//												"SAA3", "SBA3", "SUA3",
//												"SAAZ", "SBAZ", "SUAZ"];
//			powered_railtype_list:      	["3RDR", "MTRO", 
//												"SAA3", "SBA3", "SUA3", "SAB3", "SBB3", 
//												"SAAZ", "SBAZ", "SABZ", "SBBZ", "SUAZ"];
//			alternative_railtype_list:		["3RDR", "MTRO", 
//												"SAA3", "SBA3", "SUA3", "SAB3", "SBB3", 
//												"SAAZ", "SBAZ", "SABZ", "SBBZ", "SUAZ"];
//			railtype_flags:             	bitmask(RAILTYPE_FLAG_PRECOMBINED, RAILTYPE_FLAG_DISALLOW_90DEG);
//		  //curve_speed_multiplier:     	1;
//			station_graphics:           	RAILTYPE_STATION_NORMAL;
//			requires_railtype_list:			["SAA3"];
//			introduction_date: 				date(1960,01,01);
//			construction_cost:          	(param_speed_9)/5+10;
//			maintenance_cost:				(param_speed_9)/5+10;
//			speed_limit:                	(param_speed_9) km/h;
//			acceleration_model:         	ACC_MODEL_RAIL;
//			map_colour:						94;
//			sort_order:						13;
//				}
//		graphics {
//			track_overlay:   				switch_SBA3_overlay;
//			precombined:					switch_SBA3_precombined;
//			underlay:        				switch_SBA3_underlay;
//			bridge_surfaces: 				switch_SBA3_bridge;
//			level_crossings: 				switch_SBA3_level_crossings;
//			tunnels:         				switch_SBA3_tunnel;
//			depots:          				switch_SBA3_depots;
//		  //signals:
//			fences:          				switch_SBA3_fences;
//			gui:							switch_SBA3_gui;
//				}
//	if (param_tunnel == 1) {
//		graphics {
//			tunnel_overlay:					switch_SBA3_tunnel_overlay;
//				}
//			}
//		}
//	}
//============================================================================
//						URBAN METRO (SUA3)
//============================================================================
//if (param_speed_10 != 29) {
//if (railtype_available("SUA3") || loading_stage == LOADING_STAGE_RESERVE) {
//		item(FEAT_RAILTYPES, SUA3, 14) {
//			property {
//			label:							"SUA3";
//			name:                       	string(STR_NAME_SUA3);
//			toolbar_caption:    			string(STR_TOOLBAR_SUA3);
//			menu_text:                  	string(STR_MENU_SUA3);
//			build_window_caption:			string(STR_BUILD_CAPTION_3RDR);
//			autoreplace_text:           	string(STR_AUTOREPLACE_3RDR);
//			new_engine_text:            	string(STR_NEW_ENGINE_3RDR);
//			compatible_railtype_list:   	["RAIL", "ELRL",
//												"SAAN", "SBAN", "SCAN", "SDAN",	
////						                        "SBAE", "SCAE", "SDAE", "SEAE", "SFAE", "SUAE",
//												"dAAN", "dBAN", "dBAE",
//												"SAA3", "SBA3", "SUA3",
//												"SAAZ", "SBAZ", "SUAZ"];
//			powered_railtype_list:      	["3RDR", "MTRO", 
//												"SAA3", "SBA3", "SUA3", "SAB3", "SBB3", 
//												"SAAZ", "SBAZ", "SABZ", "SBBZ", "SUAZ"];
//			alternative_railtype_list:		["3RDR", "MTRO", 
//												"SAA3", "SBA3", "SUA3", "SAB3", "SBB3", 
//												"SAAZ", "SBAZ", "SABZ", "SBBZ", "SUAZ"];
//			railtype_flags:             	bitmask(RAILTYPE_FLAG_PRECOMBINED, RAILTYPE_FLAG_DISALLOW_90DEG);
//		  //curve_speed_multiplier:     	1;
//			station_graphics:           	RAILTYPE_STATION_NORMAL;
//			requires_railtype_list:			["SAA3"];
//			introduction_date: 				date(1960,01,01);
//			construction_cost:          	(param_speed_10)/5+12;
//			maintenance_cost:				(param_speed_10)/5+12;
//			speed_limit:                	(param_speed_10) km/h;
//			acceleration_model:         	ACC_MODEL_RAIL;
//			map_colour:						95;
//			sort_order:						14;
//				}
//		graphics {
//			track_overlay:   				switch_SUA3_overlay;
//			precombined:					switch_SUA3_precombined;
//			underlay:        				switch_SUA3_underlay;
//			bridge_surfaces: 				switch_SUA3_bridge;
//			level_crossings: 				switch_SUA3_level_crossings;
//			tunnels:         				switch_SUA3_tunnel;
//			depots:          				switch_SUA3_depots;
//		  //signals:
//			fences:          				switch_SUA3_fences;
//			gui:							switch_SUA3_gui;
//				}
//	if (param_tunnel == 1) {
//		graphics {
//			tunnel_overlay:					switch_SUA3_tunnel_overlay;
//				}
//			}
//		}
//	}
//}
//============================================================================
//						METRO (ELECTRIFIED) (SAAZ)
//============================================================================
//if (param_3rd > 1) {
//if (railtype_available("SAAZ") || loading_stage == LOADING_STAGE_RESERVE) {
//		item(FEAT_RAILTYPES, SAAZ, 28) {
//			property {
//			label:							"SAAZ";
//			name:                       	string(STR_NAME_SAAZ);
//			toolbar_caption:    			string(STR_TOOLBAR_SAAZ);
//			menu_text:                  	string(STR_MENU_SAAZ);
//			build_window_caption:			string(STR_BUILD_CAPTION_3RDR);
//			autoreplace_text:           	string(STR_AUTOREPLACE_3RDR);
//			new_engine_text:            	string(STR_NEW_ENGINE_3RDR);
//			compatible_railtype_list:   	["RAIL", "ELRL",
//												"SAAN", "SBAN", "SCAN", "SDAN",	
////						                        "SBAE", "SCAE", "SDAE", "SEAE", "SFAE", "SUAE",
//												"dAAN", "dBAN", "dBAE",
//												"SAA3", "SBA3", "SUA3",
//												"SAAZ", "SBAZ", "SUAZ"];
//			powered_railtype_list:      	["SAAZ", "SBAZ", "SABZ", "SBBZ", "SUAZ"];
//			alternative_railtype_list:		["SAAZ", "SBAZ", "SABZ", "SBBZ", "SUAZ"];
//			railtype_flags:             	bitmask(RAILTYPE_FLAG_PRECOMBINED, RAILTYPE_FLAG_DISALLOW_90DEG, RAILTYPE_FLAG_CATENARY);
//		//curve_speed_multiplier:     	1;
//			station_graphics:           	RAILTYPE_STATION_NORMAL;
//			requires_railtype_list:			["SAA3", "ELRL"];
//			introduction_date: 				date(0000,01,01);
//			construction_cost:          	(param_speed_8)/5+16;
//			maintenance_cost:				(param_speed_8)/5+16;
//			speed_limit:                	(param_speed_8) km/h;
//			acceleration_model:         	ACC_MODEL_RAIL;
//			map_colour:						47;
//			sort_order:						15;
//				}
//		graphics {
//			track_overlay:   				switch_SAA3_overlay;
//			precombined:					switch_SAA3_precombined;
//			underlay:        				switch_SAA3_underlay;
//			bridge_surfaces: 				switch_SAA3_bridge;
//			level_crossings: 				switch_SAA3_level_crossings;
//			tunnels:         				switch_SAA3_tunnel;
//			depots:          				switch_SAAZ_depots;
//			catenary_pylons: 				switch_SBB_comma_pylons_catenary;
//			catenary_wire: 					switch_wires_standar_rail;
//		//signals:
//			fences:          				switch_SAA3_fences;
//			gui:							switch_SAAZ_gui;
//				}
//	if (param_tunnel == 1) {
//		graphics {
//			tunnel_overlay:					switch_SAA3_tunnel_overlay;
//				}
//			}
//		}
//	}
//}
//============================================================================
//					MODERN METRO (ELECTRIFIED) (SBAZ)
//============================================================================
//if (param_3rd > 1) {
//if (railtype_available("SBAZ") || loading_stage == LOADING_STAGE_RESERVE) {
//	item(FEAT_RAILTYPES, SBAZ, 29) {
//		property {
//			label:							"SBAZ";
//			name:                       	string(STR_NAME_SBAZ);
//			toolbar_caption:    			string(STR_TOOLBAR_SBAZ);
//			menu_text:                  	string(STR_MENU_SBAZ);
//			build_window_caption:			string(STR_BUILD_CAPTION_3RDR);
//			autoreplace_text:           	string(STR_AUTOREPLACE_3RDR);
//			new_engine_text:            	string(STR_NEW_ENGINE_3RDR);
//			compatible_railtype_list:   	["RAIL", "ELRL",
//												"SAAN", "SBAN", "SCAN", "SDAN",	
////						                        "SBAE", "SCAE", "SDAE", "SEAE", "SFAE", "SUAE",
//												"dAAN", "dBAN", "dBAE",
//												"SAA3", "SBA3", "SUA3",
//												"SAAZ", "SBAZ", "SUAZ"];
//			powered_railtype_list:      	["SAAZ", "SBAZ", "SABZ", "SBBZ", "SUAZ"];
//			alternative_railtype_list:		["SAAZ", "SBAZ", "SABZ", "SBBZ", "SUAZ"];
//			railtype_flags:             	bitmask(RAILTYPE_FLAG_PRECOMBINED, RAILTYPE_FLAG_DISALLOW_90DEG, RAILTYPE_FLAG_CATENARY);
//		//curve_speed_multiplier:     	1;
//			station_graphics:           	RAILTYPE_STATION_NORMAL;
//			requires_railtype_list:			["SAA3", "ELRL"];
//			introduction_date: 				date(1960,01,01);
//			construction_cost:          	(param_speed_9)/5+18;
//			maintenance_cost:				(param_speed_9)/5+18;
//			speed_limit:                	(param_speed_9) km/h;
//			acceleration_model:         	ACC_MODEL_RAIL;
//			map_colour:						48;
//			sort_order:						16;
//				}
//		graphics {
//			track_overlay:   				switch_SBA3_overlay;
//			precombined:					switch_SBA3_precombined;
//			underlay:        				switch_SBA3_underlay;
//			bridge_surfaces: 				switch_SBA3_bridge;
//			level_crossings: 				switch_SBA3_level_crossings;
//			tunnels:         				switch_SBA3_tunnel;
//			depots:          				switch_SBAZ_depots;
//			catenary_pylons: 				switch_SED_asterisk_pylons_catenary;
//			catenary_wire: 					switch_wires_standar_rail;
//		  //signals:
//			fences:          				switch_SBA3_fences;
//			gui:							switch_SBAZ_gui;
//				}
//	if (param_tunnel == 1) {
//		graphics {
//			tunnel_overlay:					switch_SBA3_tunnel_overlay;
//				}
//			}
//		}
//	}
//}
//============================================================================
//						URBAN METRO (SUAZ)
//============================================================================
//if ((param_3rd > 1) && (param_speed_10 != 29)) {
//if (railtype_available("SUAZ") || loading_stage == LOADING_STAGE_RESERVE) {
//	item(FEAT_RAILTYPES, SUAZ, 30) {
//		property {
//			label:							"SUAZ";
//			name:                       	string(STR_NAME_SUAZ);
//			toolbar_caption:    			string(STR_TOOLBAR_SUAZ);
//			menu_text:                  	string(STR_MENU_SUAZ);
//			build_window_caption:			string(STR_BUILD_CAPTION_3RDR);
//			autoreplace_text:           	string(STR_AUTOREPLACE_3RDR);
//			new_engine_text:            	string(STR_NEW_ENGINE_3RDR);
//			compatible_railtype_list:   	["RAIL", "ELRL",
//												"SAAN", "SBAN", "SCAN", "SDAN",	
////						                        "SBAE", "SCAE", "SDAE", "SEAE", "SFAE", "SUAE",
//												"dAAN", "dBAN", "dBAE",
//												"SAA3", "SBA3", "SUA3",
//												"SAAZ", "SBAZ", "SUAZ"];
//			powered_railtype_list:      	["SAAZ", "SBAZ", "SABZ", "SBBZ", "SUAZ"];
//			alternative_railtype_list:		["SAAZ", "SBAZ", "SABZ", "SBBZ", "SUAZ"];
//			railtype_flags:             	bitmask(RAILTYPE_FLAG_PRECOMBINED, RAILTYPE_FLAG_DISALLOW_90DEG, RAILTYPE_FLAG_CATENARY);
//		//curve_speed_multiplier:     	1;
//			station_graphics:           	RAILTYPE_STATION_NORMAL;
//			requires_railtype_list:			["SAA3", "ELRL"];
//			introduction_date: 				date(1960,01,01);
//			construction_cost:          	(param_speed_10)/5+20;
//			maintenance_cost:				(param_speed_10)/5+20;
//			speed_limit:                	(param_speed_10) km/h;
//			acceleration_model:         	ACC_MODEL_RAIL;
//			map_colour:						49;
//			sort_order:						17;
//				}
//		graphics {
//			track_overlay:   				switch_SUA3_overlay;
//			precombined:					switch_SUA3_precombined;
//			underlay:        				switch_SUA3_underlay;
//			bridge_surfaces: 				switch_SUA3_bridge;
//			level_crossings: 				switch_SUA3_level_crossings;
//			tunnels:         				switch_SUA3_tunnel;
//			depots:          				switch_SUAZ_depots;
//			catenary_pylons: 				switch_SUF_asterisk_pylons_catenary;
//			catenary_wire: 					switch_SUF_asterisk_wires_standar_rail;
//		//signals:		
//			fences:          				switch_SUA3_fences;
//			gui:							switch_SUAZ_gui;
//				}
//	if (param_tunnel == 1) {
//		graphics {
//			tunnel_overlay:					switch_SUA3_tunnel_overlay;
//				}
//			}
//		}
//	}
//}
//============================================================================
//					DUAL-GAUGE TRACK #1 (dCBN)
//============================================================================
if (param_speed_11 != 29) {
if (railtype_available("dCBN") || loading_stage == LOADING_STAGE_RESERVE) {
	item(FEAT_RAILTYPES, dCBN, 25) {
		property {
			label:							"dCBN";
			name:                       	string(STR_NAME_dCBN);
			toolbar_caption:    			string(STR_TOOLBAR_dCBN);
			menu_text:                  	string(STR_MENU_dCBN);
			build_window_caption:			string(STR_BUILD_CAPTION_dCBN);
			autoreplace_text:          	 	string(STR_AUTOREPLACE_dCBN);
			new_engine_text:            	string(STR_NEW_ENGINE_dCBN);
//			compatible_railtype_list:   	["RAIL", "ELRL",
//												"SAAN", "SBAN", "SCAN", "SDAN",	
//						                        "SBAE", "SCAE", "SDAE", "SEAE", "SFAE", "SUAE",
//												"dAAN", "dBAN", "dBAE",
//												"SAA3", "SBA3", "SUA3",
//												"SAAZ", "SBAZ", "SUAZ",
//												"nAAN", "RAAN", "RBAN", "RCAN", 
//												"nAAE", "RAAE", "RBAE", "RCAE", "RDAE", "RUAE"];
//			powered_railtype_list:      	["dAAN", "dBAN", "dBAE"];
//			alternative_railtype_list:		["dAAN", "dBAN", "dBAE"];
			railtype_flags:             	bitmask(RAILTYPE_FLAG_PRECOMBINED, RAILTYPE_FLAG_DISALLOW_90DEG);
		  //curve_speed_multiplier:     	1;
			station_graphics:           	RAILTYPE_STATION_NORMAL;
			requires_railtype_list:			["RAIL", "RAAN"];
			introduction_date: 				date(0000,01,01);
			construction_cost:          	(param_speed_11)/5+10;
			maintenance_cost:				(param_speed_11)/5+10;
			speed_limit:                	(param_speed_11) km/h;
			acceleration_model:         	ACC_MODEL_RAIL;
			map_colour:						57;
			sort_order:						18;
				}
		graphics {
			track_overlay:   				switch_dCBN_overlay;
			precombined:					switch_dCBN_precombined;
			underlay:        				switch_dCBN_underlay;
			bridge_surfaces: 				switch_dCBN_bridge;
			level_crossings: 				switch_dCBN_level_crossings;
			tunnels:         				switch_dCBN_tunnel;
			depots:          				switch_dCBN_depots;
		  //signals:		
			fences:          				switch_dCBN_fences;
			gui:							switch_dCBN_gui;
				}
	if (param_tunnel == 1) {
		graphics {
			tunnel_overlay:					switch_dCBN_tunnel_overlay;
				}
			}
		}
	}
}
//============================================================================
//					DUAL-GAUGE TRACK #2 (dCDN)
//============================================================================
if (param_speed_12 != 29) {
if (railtype_available("dCDN") || loading_stage == LOADING_STAGE_RESERVE) {
	item(FEAT_RAILTYPES, dCDN, 31) {
	property {
			label:							"dCDN";
			name:                       	string(STR_NAME_dCDN);
			toolbar_caption:    			string(STR_TOOLBAR_dCDN);
			menu_text:                  	string(STR_MENU_dCDN);
			build_window_caption:			string(STR_BUILD_CAPTION_dCBN);
			autoreplace_text:           	string(STR_AUTOREPLACE_dCBN);
			new_engine_text:            	string(STR_NEW_ENGINE_dCBN);
//			compatible_railtype_list:   	["RAIL", "ELRL",
//												"SAAN", "SBAN", "SCAN", "SDAN",	
////						                        "SBAE", "SCAE", "SDAE", "SEAE", "SFAE", "SUAE",
//												"dAAN", "dBAN", "dBAE",
//												"SAA3", "SBA3", "SUA3",
//												"SAAZ", "SBAZ", "SUAZ",
//												"nAAN", "RAAN", "RBAN", "RCAN", 
//												"nAAE", "RAAE", "RBAE", "RCAE", "RDAE", "RUAE"];
//			powered_railtype_list:      	["dAAN", "dBAN", "dBAE"];
//			alternative_railtype_list:		["dAAN", "dBAN", "dBAE"];
			railtype_flags:             	bitmask(RAILTYPE_FLAG_PRECOMBINED, RAILTYPE_FLAG_DISALLOW_90DEG);
		  //curve_speed_multiplier:     	1;
			station_graphics:           	RAILTYPE_STATION_NORMAL;
			requires_railtype_list:			["RAIL", "RAAN"];
			introduction_date: 				date(1960,01,01);
			construction_cost:          	(param_speed_12)/5+15;
			maintenance_cost:				(param_speed_12)/5+15;
			speed_limit:                	(param_speed_12) km/h;
			acceleration_model:         	ACC_MODEL_RAIL;
			map_colour:						58;
			sort_order:						19;
				}
		graphics {
			track_overlay:   				switch_dCDN_overlay;
			precombined:					switch_dCDN_precombined;
			underlay:        				switch_dCDN_underlay;
			bridge_surfaces: 				switch_dCDN_bridge;
			level_crossings: 				switch_dCDN_level_crossings;
			tunnels:         				switch_dCDN_tunnel;
			depots:          				switch_dCDN_depots;
		  //signals:
			fences:          				switch_dCDN_fences;
			gui:							switch_dCDN_gui;
				}
	if (param_tunnel == 1) {
		graphics {
			tunnel_overlay:					switch_dCDN_tunnel_overlay;
				}
			}
		}
	}
}
//============================================================================
//					DUAL-GAUGE TRACK #2 ("dCD(")
//============================================================================
if (param_speed_12 != 29) {
if (railtype_available("dCD(") || loading_stage == LOADING_STAGE_RESERVE) {
	item(FEAT_RAILTYPES, "dCD(", 32) {
		property {
			label:							"dCD(";
			name:                       	string(STR_NAME_dCD_leftcurvebracket);
			toolbar_caption:    			string(STR_TOOLBAR_dCD_leftcurvebracket);
			menu_text:                  	string(STR_MENU_dCD_leftcurvebracket);
			build_window_caption:			string(STR_BUILD_CAPTION_dCBN);
			autoreplace_text:           	string(STR_AUTOREPLACE_dCBN);
			new_engine_text:            	string(STR_NEW_ENGINE_dCBN);
//			compatible_railtype_list:   	["RAIL", "ELRL",
//												"SAAN", "SBAN", "SCAN", "SDAN",	
//						                        "SBAE", "SCAE", "SDAE", "SEAE", "SFAE", "SUAE",
//												"dAAN", "dBAN", "dBAE",
//												"SAA3", "SBA3", "SUA3",
//												"SAAZ", "SBAZ", "SUAZ",
//												"nAAN", "RAAN", "RBAN", "RCAN", 
//												"nAAE", "RAAE", "RBAE", "RCAE", "RDAE", "RUAE"];
//			powered_railtype_list:      	["dBAE"];
//			alternative_railtype_list:		["dBAE"];
			railtype_flags:             	bitmask(RAILTYPE_FLAG_PRECOMBINED, RAILTYPE_FLAG_DISALLOW_90DEG, RAILTYPE_FLAG_CATENARY);
		  //curve_speed_multiplier:     	1;
			station_graphics:           	RAILTYPE_STATION_NORMAL;
			requires_railtype_list:			["ELRL", "RAAE"];
			introduction_date: 				date(1960,01,01);
			construction_cost:          	(param_speed_12)/5+20;
			maintenance_cost:				(param_speed_12)/5+20;
			speed_limit:                	(param_speed_12) km/h;
			acceleration_model:         	ACC_MODEL_RAIL;
			map_colour:						59;
			sort_order:						20;
				}
		graphics {
			track_overlay:   				switch_dCDN_overlay;
			precombined:					switch_dCDN_precombined;
			underlay:        				switch_dCDN_underlay;
			bridge_surfaces: 				switch_dCDN_bridge;
			level_crossings: 				switch_dCDN_level_crossings;
			tunnels:         				switch_dCDN_tunnel;
			depots:          				switch_dCD_leftcurvebracket_depots;
			catenary_pylons: 				switch_SED_asterisk_pylons_catenary;
			catenary_wire: 					switch_wires_standar_rail;
		//signals:
			fences:          				switch_dCDN_fences;
			gui:							switch_dCD_leftcurvebracket_gui;
				}
	if (param_tunnel == 1) {
		graphics {
			tunnel_overlay:					switch_dCDN_tunnel_overlay;
				}
			}
		}
	}
}
//============================================================================
//						NARROW-GAUGE RAILWAY (RCBN)
//============================================================================
if (railtype_available("RCBN") || loading_stage == LOADING_STAGE_RESERVE) {
	item(FEAT_RAILTYPES, RCBN, 15) {
		property {
			label:							"RCBN";
			name:                       	string(STR_NAME_RCBN);
			toolbar_caption:    			string(STR_TOOLBAR_RCBN);
			menu_text:                  	string(STR_MENU_RCBN);
			build_window_caption:			string(STR_BUILD_CAPTION_NGRL);
			autoreplace_text:          	 	string(STR_AUTOREPLACE_NGRL);
			new_engine_text:            	string(STR_NEW_ENGINE_NGRL);
//			compatible_railtype_list:   	["nAAN", "RAAN", "RBAN", "RCAN", "RDAN", "RABN", 
//												"RACN", "RADN", "RAEN",
//												"nAAE", "RAAE", "RBAE", "RCAE", "RDAE", "RUAE",
//												"dAAN", "dBAN", "dBAE"];
//			powered_railtype_list:      	["nAAN", "RAAN", "RBAN", "RCAN", "RDAN", 
//												"RABN", "RACN", "RAEN",
//												"nAAE", "RAAE", "RBAE", "RCAE", "RDAE", "RUAE",
//												"dAAN", "dBAN", "dBAE"];
//			alternative_railtype_list:		["nAAN", "RAAN", "RBAN", "RCAN", "RDAN",
//												"RABN", "RACN", "RADN", "RAEN"];
			railtype_flags:             	bitmask(RAILTYPE_FLAG_PRECOMBINED, RAILTYPE_FLAG_DISALLOW_90DEG);
		  //curve_speed_multiplier:     	1;
			station_graphics:           	RAILTYPE_STATION_NORMAL;
			construction_cost:          	(param_speed_13)/5;
			maintenance_cost:				(param_speed_13)/5;
			speed_limit:                	(param_speed_13) km/h;
			acceleration_model:         	ACC_MODEL_RAIL;
			map_colour:						173;
			sort_order:						21;
				}
		graphics {
			track_overlay:   				switch_RCBN_overlay;
			precombined:					switch_RCBN_precombined;
			underlay:        				switch_RCBN_underlay;
			bridge_surfaces: 				switch_RCBN_bridge;
			level_crossings: 				switch_RCBN_level_crossings;
			tunnels:         				switch_RCBN_tunnel;
			depots:          				switch_RCBN_depots;
		  //signals:
			fences:          				switch_RCBN_fences;
			gui:							switch_RCBN_gui;
				}
	if (param_tunnel == 1) {
		graphics {
			tunnel_overlay:					switch_RCBN_tunnel_overlay;
				}
			}
		}
	}
//============================================================================
//						NARROW-GAUGE RAILWAY EL ("RCB(")
//============================================================================
if (railtype_available("RCB(") || loading_stage == LOADING_STAGE_RESERVE) {
	item(FEAT_RAILTYPES, "RCB(", 16) {
		property {
			label:							"RCB(";
			name:                       	string(STR_NAME_RCBE);
			toolbar_caption:    			string(STR_TOOLBAR_RCBE);
			menu_text:                  	string(STR_MENU_RCBE);
			build_window_caption:			string(STR_BUILD_CAPTION_RAFE);
			autoreplace_text:           	string(STR_AUTOREPLACE_RAFE);
			new_engine_text:            	string(STR_NEW_ENGINE_RAFE);
//			compatible_railtype_list:   	["nAAE", "RAAN", "RBAN", "RCAN", 
//												"RAAE", "RBAE", "RCAE", "RDAE", "RUAE", 
//												"RABE", "RACE", "RADE", "RAEE",
//												"dAAN", "dBAN", "dBAE"];
//			powered_railtype_list:      	["nAAE", "RAAE", "RBAE", "RCAE", "RDAE", "RUAE", 
//												"RABE", "RACE", "RADE", "RAEE", 
//												"dBAE"];
//			alternative_railtype_list:		["nAAE", "RAAE", "RBAE", "RCAE", "RDAE", "RUAE", 
//												"RABE", "RACE", "RADE", "RAEE"];
			railtype_flags:             	bitmask(RAILTYPE_FLAG_PRECOMBINED, RAILTYPE_FLAG_DISALLOW_90DEG, RAILTYPE_FLAG_CATENARY);
		  //curve_speed_multiplier:     	1;
			station_graphics:           	RAILTYPE_STATION_NORMAL;
			construction_cost:          	(param_speed_13)/5+8;
			maintenance_cost:				(param_speed_13)/5+8;
			speed_limit:                	(param_speed_13) km/h;
			acceleration_model:         	ACC_MODEL_RAIL;
			map_colour:						117;
			sort_order:						24;
				}
		graphics {
			track_overlay:   				switch_RCBN_overlay;
			precombined:					switch_RCBN_precombined;
			underlay:        				switch_RCBN_underlay;
			bridge_surfaces: 				switch_RCBN_bridge;
			level_crossings: 				switch_RCBN_level_crossings;
			tunnels:         				switch_RCBN_tunnel;
			depots:          				switch_RCBE_depots;
			catenary_pylons: 				switch_RCBE_pylons_catenary;
			catenary_wire: 					switch_wires_narrow_rail;
		  //signals:
			fences:          				switch_RCBN_fences;
			gui:							switch_RCBE_gui;
				}
	if (param_tunnel == 1) {
		graphics {
			tunnel_overlay:					switch_RCBN_tunnel_overlay;
				}
			}
		}
	}
//============================================================================
//						MAIN NARROW-GAUGE RAILWAY (NBAN)
//============================================================================
if (railtype_available("RBAN") || loading_stage == LOADING_STAGE_RESERVE) {
	item(FEAT_RAILTYPES, NBAN, 17) {
		property {
			label:							"RBAN";
			name:                       	string(STR_NAME_NBAN);
			toolbar_caption:    			string(STR_TOOLBAR_NBAN);
			menu_text:                  	string(STR_MENU_NBAN);
			build_window_caption:			string(STR_BUILD_CAPTION_NGRL);
			autoreplace_text:           	string(STR_AUTOREPLACE_NGRL);
			new_engine_text:            	string(STR_NEW_ENGINE_NGRL);
//			compatible_railtype_list:   	["nAAN", "RAAN", "RBAN", "RCAN", "RDAN", 
			                                    "RABN", "RACN", "RADN", "RAEN",
//												"nAAE", "RAAE", "RBAE", "RCAE", "RDAE", "RUAE",
//												"dAAN", "dBAN", "dBAE"];
//			powered_railtype_list:      	["nAAN", "RAAN", "RBAN", "RCAN", "RDAN", "RABN", "RACN", "RAEN",
//												"nAAE", "RAAE", "RBAE", "RCAE", "RDAE", "RUAE",
//												"dAAN", "dBAN", "dBAE"];
//			alternative_railtype_list:		["nAAN", "RAAN", "RBAN", "RCAN", "RDAN",
//												"RABN", "RACN", "RADN", "RAEN"];
			railtype_flags:             	bitmask(RAILTYPE_FLAG_PRECOMBINED, RAILTYPE_FLAG_DISALLOW_90DEG);
		  //curve_speed_multiplier:     	1;
			station_graphics:           	RAILTYPE_STATION_NORMAL;
			introduction_date: 				date(1930,01,01);
			requires_railtype_list:			["RAAN"];
			construction_cost:          	(param_speed_14)/5+2;
			maintenance_cost:				(param_speed_14)/5+2;
			speed_limit:                	(param_speed_14) km/h;
			acceleration_model:         	ACC_MODEL_RAIL;
			map_colour:						174;
			sort_order:						22;
				}
		graphics {
			track_overlay:   				switch_NBAN_overlay;
			precombined:					switch_NBAN_precombined;
			underlay:        				switch_NBAN_underlay;
			bridge_surfaces: 				switch_NBAN_bridge;
			level_crossings: 				switch_NBAN_level_crossings;
			tunnels:         				switch_NBAN_tunnel;
			depots:          				switch_NBAN_depots;
		  //signals:
			fences:          				switch_NBAN_fences;
			gui:							switch_NBAN_gui;
				}
	if (param_tunnel == 1) {
		graphics {
			tunnel_overlay:					switch_NBAN_tunnel_overlay;
				}
			}
		}
	}
//============================================================================
//						MAIN NARROW-GAUGE RAILWAY (NBAE)
//============================================================================
if (railtype_available("RBAE") || loading_stage == LOADING_STAGE_RESERVE) {
	item(FEAT_RAILTYPES, NBAE, 18) {
		property {
			label:							"RBAE";
			name:                       	string(STR_NAME_NBAE);
			toolbar_caption:    			string(STR_TOOLBAR_NBAE);
			menu_text:                  	string(STR_MENU_NBAE);
			build_window_caption:			string(STR_BUILD_CAPTION_RAFE);
			autoreplace_text:           	string(STR_AUTOREPLACE_RAFE);
			new_engine_text:            	string(STR_NEW_ENGINE_RAFE);
//			compatible_railtype_list:   	["nAAE", "RAAN", "RBAN", "RCAN", 
//												"RAAE", "RBAE", "RCAE", "RDAE", "RUAE", 
//												"RABE", "RACE", "RADE", "RAEE",
//												"dAAN", "dBAN", "dBAE"];
//			powered_railtype_list:      	["nAAE", "RAAE", "RBAE", "RCAE", "RDAE", "RUAE", 
//												"RABE", "RACE", "RADE", "RAEE", 
//												"dBAE"];
//			alternative_railtype_list:		["nAAE", "RAAE", "RBAE", "RCAE", "RDAE", "RUAE", 
//												"RABE", "RACE", "RADE", "RAEE"];
			railtype_flags:             	bitmask(RAILTYPE_FLAG_PRECOMBINED, RAILTYPE_FLAG_DISALLOW_90DEG, RAILTYPE_FLAG_CATENARY);
		  //curve_speed_multiplier:     	1;
			station_graphics:           	RAILTYPE_STATION_NORMAL;
			introduction_date: 				date(1930,01,01);
			requires_railtype_list:			["RAAE"];
			construction_cost:          	(param_speed_14)/5+10;
			maintenance_cost:				(param_speed_14)/5+10;
			speed_limit:                	(param_speed_14) km/h;
			acceleration_model:         	ACC_MODEL_RAIL;
			map_colour:						118;
			sort_order:						25;
				}
		graphics {
			track_overlay:   				switch_NBAN_overlay;
			precombined:					switch_NBAN_precombined;
			underlay:        				switch_NBAN_underlay;
			bridge_surfaces: 				switch_NBAN_bridge;
			level_crossings: 				switch_NBAN_level_crossings;
			tunnels:         				switch_NBAN_tunnel;
			depots:          				switch_NBAE_depots;
			catenary_pylons: 				switch_NBAE_pylons_catenary;
			catenary_wire: 					switch_wires_narrow_rail;
		  //signals:
			fences:          				switch_NBAN_fences;
			gui:							switch_NBAE_gui;
				}
	if (param_tunnel == 1) {
		graphics {
			tunnel_overlay:					switch_NBAN_tunnel_overlay;
				}
			}
		}
	}
//============================================================================
//					MODERN NARROW-GAUGE RAILWAY (NCAN)
//============================================================================
if (param_speed_15 != 29 ) {
if (railtype_available("RCAN") || loading_stage == LOADING_STAGE_RESERVE) {
	item(FEAT_RAILTYPES, NCAN, 19) {
		property {
			label:							"RCAN";
			name:                       	string(STR_NAME_NCAN);
			toolbar_caption:    			string(STR_TOOLBAR_NCAN);
			menu_text:                  	string(STR_MENU_NCAN);
			build_window_caption:			string(STR_BUILD_CAPTION_NGRL);
			autoreplace_text:         	 	string(STR_AUTOREPLACE_NGRL);
			new_engine_text:           		string(STR_NEW_ENGINE_NGRL);
//			compatible_railtype_list:   	["nAAN", "RAAN", "RBAN", "RCAN", "RDAN", 
			                                    "RABN", "RACN", "RADN", "RAEN",
//												"nAAE", "RAAE", "RBAE", "RCAE", "RDAE", "RUAE",
//												"dAAN", "dBAN", "dBAE"];
//			powered_railtype_list:      	["nAAN", "RAAN", "RBAN", "RCAN", "RDAN", "RABN", "RACN", "RAEN",
//												"nAAE", "RAAE", "RBAE", "RCAE", "RDAE", "RUAE",
//												"dAAN", "dBAN", "dBAE"];
//			alternative_railtype_list:		["nAAN", "RAAN", "RBAN", "RCAN", "RDAN",
//												"RABN", "RACN", "RADN", "RAEN"];
			railtype_flags:             	bitmask(RAILTYPE_FLAG_PRECOMBINED, RAILTYPE_FLAG_DISALLOW_90DEG);
		  //curve_speed_multiplier:     	1;
			station_graphics:           	RAILTYPE_STATION_NORMAL;
			introduction_date: 				date(1960,01,01);
			requires_railtype_list:			["RAAN"];
			construction_cost:          	(param_speed_15)/5+4;
			maintenance_cost:				(param_speed_15)/5+4;
			speed_limit:                	(param_speed_15) km/h;
			acceleration_model:         	ACC_MODEL_RAIL;
			map_colour:						175;
			sort_order:						23;
				}
		graphics {
			track_overlay:   				switch_NCAN_overlay;
			precombined:					switch_NCAN_precombined;
			underlay:        				switch_NCAN_underlay;
			bridge_surfaces: 				switch_NCAN_bridge;
			level_crossings: 				switch_NCAN_level_crossings;
			tunnels:         				switch_NCAN_tunnel;
			depots:          				switch_NCAN_depots;
		  //signals:
			fences:          				switch_NCAN_fences;
			gui:							switch_NCAN_gui;
				}
	if (param_tunnel == 1) {
		graphics {
			tunnel_overlay:					switch_NCAN_tunnel_overlay;
				}
			}
		}
	}
}
//============================================================================
//						MODERN NARROW-GAUGE RAILWAY EL (NCAE)
//============================================================================
if (param_speed_15 != 29 ) {
if (railtype_available("RCAE") || loading_stage == LOADING_STAGE_RESERVE) {
	item(FEAT_RAILTYPES, NCAE, 20) {
		property {
			label:							"RCAE";
			name:                       	string(STR_NAME_NCAE);
			toolbar_caption:    			string(STR_TOOLBAR_NCAE);
			menu_text:                  	string(STR_MENU_NCAE);
			build_window_caption:			string(STR_BUILD_CAPTION_RAFE);
			autoreplace_text:          	 	string(STR_AUTOREPLACE_RAFE);
			new_engine_text:            	string(STR_NEW_ENGINE_RAFE);
//			compatible_railtype_list:   	["nAAE", "RAAN", "RBAN", "RCAN", 
//												"RAAE", "RBAE", "RCAE", "RDAE", "RUAE", 
//												"RABE", "RACE", "RADE", "RAEE",
//												"dAAN", "dBAN", "dBAE"];
//			powered_railtype_list:      	["nAAE", "RAAE", "RBAE", "RCAE", "RDAE", "RUAE", 
//												"RABE", "RACE", "RADE", "RAEE", 
//												"dBAE"];
//			alternative_railtype_list:		["nAAE", "RAAE", "RBAE", "RCAE", "RDAE", "RUAE", 
//												"RABE", "RACE", "RADE", "RAEE"];
			railtype_flags:             	bitmask(RAILTYPE_FLAG_PRECOMBINED, RAILTYPE_FLAG_DISALLOW_90DEG, RAILTYPE_FLAG_CATENARY);
		  //curve_speed_multiplier:     	1;
			station_graphics:           	RAILTYPE_STATION_NORMAL;
			introduction_date: 				date(1960,01,01);
			requires_railtype_list:			["RAAE"];
			construction_cost:          	(param_speed_15)/5+12;
			maintenance_cost:				(param_speed_15)/5+12;
			speed_limit:                	(param_speed_15) km/h;
			acceleration_model:         	ACC_MODEL_RAIL;
			map_colour:						119;
			sort_order:						26;
				}
		graphics {
			track_overlay:   				switch_NCAN_overlay;
			precombined:					switch_NCAN_precombined;
			underlay:        				switch_NCAN_underlay;
			bridge_surfaces: 				switch_NCAN_bridge;
			level_crossings: 				switch_NCAN_level_crossings;
			tunnels:         				switch_NCAN_tunnel;
			depots:          				switch_NCAE_depots;
			catenary_pylons: 				switch_NCAE_pylons_catenary;
			catenary_wire: 					switch_wires_narrow_rail;
		  //signals:
			fences:          				switch_NCAN_fences;
			gui:							switch_NCAE_gui;
				}
	if (param_tunnel == 1) {
		graphics {
			tunnel_overlay:					switch_NCAN_tunnel_overlay;
				}
			}
		}
	}
}
//============================================================================
//						HIGH-SPEED NARROW-GAUGE RAILWAY EL (NDAE)
//============================================================================
if (param_speed_16 != 29 ) {
if (railtype_available("RDAE") || loading_stage == LOADING_STAGE_RESERVE) {
	item(FEAT_RAILTYPES, NDAE, 23) {
		property {
			label:							"RDAE";
			name:                       	string(STR_NAME_NDAE);
			toolbar_caption:    			string(STR_TOOLBAR_NDAE);
			menu_text:                  	string(STR_MENU_NDAE);
			build_window_caption:			string(STR_BUILD_CAPTION_RAFE);
			autoreplace_text:           	string(STR_AUTOREPLACE_RAFE);
			new_engine_text:            	string(STR_NEW_ENGINE_RAFE);
//			compatible_railtype_list:   	["nAAE", "RAAN", "RBAN", "RCAN", 
//												"RAAE", "RBAE", "RCAE", "RDAE", "RUAE", 
//												"RABE", "RACE", "RADE", "RAEE",
//												"dAAN", "dBAN", "dBAE"];
//			powered_railtype_list:      	["nAAE", "RAAE", "RBAE", "RCAE", "RDAE", "RUAE", 
//												"RABE", "RACE", "RADE", "RAEE", 
//												"dBAE"];
//			alternative_railtype_list:		["nAAE", "RAAE", "RBAE", "RCAE", "RDAE", "RUAE", 
//												"RABE", "RACE", "RADE", "RAEE"];
			railtype_flags:             	bitmask(RAILTYPE_FLAG_PRECOMBINED, RAILTYPE_FLAG_DISALLOW_90DEG, RAILTYPE_FLAG_CATENARY);
		//curve_speed_multiplier:     	1;
			station_graphics:           	RAILTYPE_STATION_NORMAL;
			requires_railtype_list:			["RAAE"];
			introduction_date: 				date(1990,01,01);
			construction_cost:          	(param_speed_16)/5+14;
			maintenance_cost:				(param_speed_16)/5+14;
			speed_limit:                	(param_speed_16) km/h;
			acceleration_model:         	ACC_MODEL_RAIL;
			map_colour:						120;
			sort_order:						27;
				}
		graphics {
			track_overlay:   				switch_NDAE_overlay;
			precombined:					switch_NDAE_precombined;
			underlay:        				switch_NDAE_underlay;
			level_crossings:				switch_NDAE_level_crossings;
			bridge_surfaces: 				switch_NDAE_bridge;
			tunnels:         				switch_NDAE_tunnel;
			depots:          				switch_NDAE_depots;
			catenary_pylons: 				switch_NDAE_pylons_catenary;
			catenary_wire: 					switch_wires_narrow_rail;
		//signals:
			fences:          				switch_NDAE_fences;
			gui:							switch_NDAE_gui;
				}
	if (param_tunnel == 1) {
			graphics {
			tunnel_overlay:					switch_NDAE_tunnel_overlay;
				}
			}
		}
	}
}
//============================================================================
//						URBAN NARROW-GAUGE RAILWAY EL (NUAE)
//============================================================================
if (param_speed_17 != 29) {
if (railtype_available("RUAE") || loading_stage == LOADING_STAGE_RESERVE) {
	item(FEAT_RAILTYPES, NUAE, 22) {
		property {
			label:							"RUAE";
			name:                       	string(STR_NAME_NUAE);
			toolbar_caption:    			string(STR_TOOLBAR_NUAE);
			menu_text:                  	string(STR_MENU_NUAE);
			build_window_caption:			string(STR_BUILD_CAPTION_RAFE);
			autoreplace_text:           	string(STR_AUTOREPLACE_RAFE);
			new_engine_text:            	string(STR_NEW_ENGINE_RAFE);
//			compatible_railtype_list:   	["nAAE", "RAAN", "RBAN", "RCAN", 
//												"RAAE", "RBAE", "RCAE", "RDAE", "RUAE", 
//												"RABE", "RACE", "RADE", "RAEE",
//												"dAAN", "dBAN", "dBAE"];
//			powered_railtype_list:      	["nAAE", "RAAE", "RBAE", "RCAE", "RDAE", "RUAE", 
//												"RABE", "RACE", "RADE", "RAEE", 
//												"dBAE"];
//			alternative_railtype_list:		["nAAE", "RAAE", "RBAE", "RCAE", "RDAE", "RUAE", 
//												"RABE", "RACE", "RADE", "RAEE"];
			railtype_flags:             	bitmask(RAILTYPE_FLAG_PRECOMBINED, RAILTYPE_FLAG_DISALLOW_90DEG, RAILTYPE_FLAG_CATENARY);
		  //curve_speed_multiplier:     	1;
			station_graphics:           	RAILTYPE_STATION_NORMAL;
			introduction_date: 				date(1960,01,01);
			requires_railtype_list:			["RAAE"];
			construction_cost:          	(param_speed_17)/5+16;
			maintenance_cost:				(param_speed_17)/5+16;
			speed_limit:                	(param_speed_17) km/h;
			acceleration_model:         	ACC_MODEL_RAIL;
			map_colour:						121;
			sort_order:						28;
				}
		graphics {
			track_overlay:   				switch_NUAE_overlay;
			precombined:					switch_NUAE_precombined;
			underlay:        				switch_NUAE_underlay;
			bridge_surfaces: 				switch_NUAE_bridge;
			level_crossings: 				switch_NUAE_level_crossings;
			tunnels:         				switch_NUAE_tunnel;
			depots:          				switch_NUAE_depots;
			catenary_pylons: 				switch_NUAE_pylons_catenary;
			catenary_wire: 					switch_wires_narrow_rail;
		  //signals:
			fences:          				switch_NUAE_fences;
			gui:							switch_NUAE_gui;
				}
	if (param_tunnel ==1) {
		graphics {
			tunnel_overlay:		    		switch_NUAE_tunnel_overlay;
				}
			}
		}
	}
}
//============================================================================
//					NARROW-GAUGE RAILWAY (3RD POWERED) (NAA3)
//============================================================================
if (railtype_available("RAA3") || loading_stage == LOADING_STAGE_RESERVE) {
	item(FEAT_RAILTYPES, NAA3, 26) {
		property {
			label:							"RAA3";
			name:                       	string(STR_NAME_NAA3);
			toolbar_caption:    			string(STR_TOOLBAR_NAA3);
			menu_text:                  	string(STR_MENU_NAA3);
			build_window_caption:			string(STR_BUILD_CAPTION_NAA3);
			autoreplace_text:           	string(STR_AUTOREPLACE_NAA3);
			new_engine_text:            	string(STR_NEW_ENGINE_NAA3);
//			compatible_railtype_list:   	["RAA3", "RBA3", "RAB3"];
//			powered_railtype_list:      	["RAA3", "RBA3", "RAB3"];
//			alternative_railtype_list:		["RAA3", "RBA3", "RAB3"];
			railtype_flags:             	bitmask(RAILTYPE_FLAG_PRECOMBINED, RAILTYPE_FLAG_DISALLOW_90DEG);
		  //curve_speed_multiplier:     	1;
			station_graphics:           	RAILTYPE_STATION_NORMAL;
			construction_cost:          	(param_speed_18)/5+8;
			maintenance_cost:				(param_speed_18)/5+8;
			speed_limit:                	(param_speed_18) km/h;
			acceleration_model:         	ACC_MODEL_RAIL;
			map_colour:						101;
			sort_order:						29;
				}
		graphics {
			track_overlay:   				switch_NAA3_overlay;
			precombined:					switch_NAA3_precombined;
			underlay:        				switch_NAA3_underlay;
			bridge_surfaces: 				switch_NAA3_bridge;
			level_crossings: 				switch_NAA3_level_crossings;
			tunnels:         				switch_NAA3_tunnel;
			depots:          				switch_NAA3_depots;
		  //signals:
			fences:          				switch_NAA3_fences;
			gui:							switch_NAA3_gui;
				}
	if (param_tunnel == 1) {
		graphics {
			tunnel_overlay:					switch_NAA3_tunnel_overlay;
				}
			}
		}
	}
//============================================================================
//				MODERN NARROW-GAUGE RAILWAY (3RD POWERED) (NBA3)
//============================================================================
if (railtype_available("RBA3") || loading_stage == LOADING_STAGE_RESERVE) {
	item(FEAT_RAILTYPES, NBA3, 27) {
		property {
			label:							"RBA3";
			name:                       	string(STR_NAME_NBA3);
			toolbar_caption:    			string(STR_TOOLBAR_NBA3);
			menu_text:                  	string(STR_MENU_NBA3);
			build_window_caption:			string(STR_BUILD_CAPTION_NAA3);
			autoreplace_text:           	string(STR_AUTOREPLACE_NAA3);
			new_engine_text:            	string(STR_NEW_ENGINE_NAA3);
//			compatible_railtype_list:   	["RAA3", "RBA3", "RAB3"];
//			powered_railtype_list:      	["RAA3", "RBA3", "RAB3"];
//			alternative_railtype_list:		["RAA3", "RBA3", "RAB3"];
			railtype_flags:             	bitmask(RAILTYPE_FLAG_PRECOMBINED, RAILTYPE_FLAG_DISALLOW_90DEG);
		//curve_speed_multiplier:     	1;
			station_graphics:           	RAILTYPE_STATION_NORMAL;
			requires_railtype_list:			["RAA3"];
			introduction_date: 				date(1960,01,01);
			construction_cost:          	(param_speed_19)/5+10;
			maintenance_cost:				(param_speed_19)/5+10;
			speed_limit:                	(param_speed_19) km/h;
			acceleration_model:         	ACC_MODEL_RAIL;
			map_colour:						102;
			sort_order:						30;
				}
		graphics {
			track_overlay:   				switch_NBA3_overlay;
			precombined:					switch_NBA3_precombined;
			underlay:        				switch_NBA3_underlay;
			bridge_surfaces: 				switch_NBA3_bridge;
			level_crossings: 				switch_NBA3_level_crossings;
			tunnels:         				switch_NBA3_tunnel;
			depots:          				switch_NBA3_depots;
		//signals:
			fences:          				switch_NBA3_fences;
			gui:							switch_NBA3_gui;
				}
	if (param_tunnel == 1) {
		graphics {
			tunnel_overlay:					switch_NBA3_tunnel_overlay;
				}
			}
		}
	}
//============================================================================
//						MONORAIL (MONO)
//============================================================================
	item(FEAT_RAILTYPES, MONO, 2) {
		property {
			label:							"MONO";
			name:                       	string(STR_NAME_MONO);
			toolbar_caption:    			string(STR_TOOLBAR_MONO);
			menu_text:                  	string(STR_MENU_MONO);
//			compatible_railtype_list:   	["MONO"];
//			powered_railtype_list:      	["MONO"];
//			alternative_railtype_list:		["MONO"];
			railtype_flags:             	bitmask(RAILTYPE_FLAG_PRECOMBINED, RAILTYPE_FLAG_NO_LEVEL_CROSSING, RAILTYPE_FLAG_DISALLOW_90DEG);
		  //curve_speed_multiplier:     	1;
			station_graphics:           	RAILTYPE_STATION_MONORAIL;
			construction_cost:          	80;
			maintenance_cost:				80;
			acceleration_model:         	ACC_MODEL_MONORAIL;
			map_colour:						165;
			sort_order:						31;
				}
		graphics {
			track_overlay:   				switch_MONO_overlay;
			precombined:					switch_MONO_precombined;
			underlay:        				switch_MONO_underlay;
			tunnels:         				switch_MONO_tunnel;
			depots:          				switch_MONO_depots;
		  //signals:
			fences:          				switch_MONO_fences;
			gui:							switch_MONO_gui;
				}
	if (grf_future_status("UFI\01")) {
		graphics {
			bridge_surfaces: 				switch_MONO_U_bridge;
				}
		} else {
		graphics {
			bridge_surfaces: 				switch_MONO_bridge;
				}
			}
	if (param_tunnel == 1) {
		graphics {
			tunnel_overlay:					switch_MONO_tunnel_overlay;
				}
			}
    	}
//============================================================================
//						MAGLEV (MGLV)
//============================================================================
	item(FEAT_RAILTYPES, MGLV, 3) {
		property {
			label:							"MGLV";
			name:                       	string(STR_NAME_MGLV);
			toolbar_caption:    			string(STR_TOOLBAR_MGLV);
			menu_text:                  	string(STR_MENU_MGLV);
//			compatible_railtype_list:   	["MGLV"];
//			powered_railtype_list:      	["MGLV"];
//			alternative_railtype_list:		["MGLV"];
			railtype_flags:             	bitmask(RAILTYPE_FLAG_PRECOMBINED, RAILTYPE_FLAG_NO_LEVEL_CROSSING, RAILTYPE_FLAG_DISALLOW_90DEG);
		  //curve_speed_multiplier:     	1;
			station_graphics:           	RAILTYPE_STATION_MAGLEV;
			construction_cost:          	160;
			maintenance_cost:				160;
			acceleration_model:         	ACC_MODEL_MAGLEV;
			map_colour:						194;
			sort_order:						32;
				}
		graphics {
			track_overlay:   				switch_MGLV_overlay;
			precombined:					switch_MGLV_precombined;
			underlay:        				switch_MGLV_underlay;
			tunnels:         				switch_MGLV_tunnel;
			depots:          				switch_MGLV_depots;
		  //signals:
			fences:          				switch_MGLV_fences;
			gui:							switch_MGLV_gui;
				}
	if (grf_future_status("UFI\01")) {
		graphics {
			bridge_surfaces: 				switch_MGLV_U_bridge;
				}
		} else {
		graphics {
			bridge_surfaces: 				switch_MGLV_bridge;
				}
			}
	if (param_tunnel == 1) {
		graphics {
			tunnel_overlay:					switch_MGLV_tunnel_overlay;
				}
			}
		}
//==================================================================================================================================
//												END
//==================================================================================================================================