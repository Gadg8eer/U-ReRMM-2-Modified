grf {
	grfid: "UFI\91";
	name: string(STR_GRF_NAME_MINI);
	desc: string(STR_GRF_DESCRIPTION_MINI);
	url:  string(STR_GRF_URL);
	version: 100;
	min_compatible_version: 80;
			param 0 {
        param_gui {
            type: int;
            name: string(STR_PARAM_GUI_NAME);
            desc: string(STR_PARAM_GUI_DESC);
			min_value: 0;
			max_value: 2;
            def_value: 0;
           names: {
					0: string(STR_PARAM_GUI_0);
					1: string(STR_PARAM_GUI_1);
                    2: string(STR_PARAM_GUI_2);
                    };
				}
			}
		    param 1 {
        param_fences {
            type: int;
            name: string(STR_PARAM_FENCES_NAME);
            desc: string(STR_PARAM_FENCES_DESC);
            min_value: 0;
            max_value: 4;
            def_value: 0;
            names: {
					0: string(STR_PARAM_FENCES_0);
                    1: string(STR_PARAM_FENCES_1);
					2: string(STR_PARAM_FENCES_2_MINI);
					3: string(STR_PARAM_FENCES_3);
					4: string(STR_PARAM_FENCES_4);
                    };
				}
			}
			param 2 {
        param_3rd {
            type: int;
            name: string(STR_PARAM_3RD_NAME);
            desc: string(STR_PARAM_3RD_DESC);
            min_value: 0;
            max_value: 3;
            def_value: 0;
            names: {
					0: string(STR_PARAM_3RD_0);
                    1: string(STR_PARAM_3RD_1);
					2: string(STR_PARAM_3RD_2);
					3: string(STR_PARAM_3RD_3);
                    };
				}
			}
			param 3 {
		param_dual_gauge {
			type: int;
			name: string(STR_PARAM_DUAL_GAUGE_NAME);
			desc: string(STR_PARAM_DUAL_GAUGE_DESC);
			min_value: 0;
			max_value: 3;
			def_value: 0;
			names: {
					0: string(STR_STRING_DISABLE);
					1: string(STR_PARAM_DUAL_GAUGE_1);
					2: string(STR_PARAM_DUAL_GAUGE_2);
					3: string(STR_PARAM_DUAL_GAUGE_3);
					};
				}
			}
			param 4 {
		param_urban_rail {
			type: bool;
			name:	string(STR_PARAM_URBAN_RAIL_NAME);
			desc:	string(STR_PARAM_URBAN_RAIL_DESC);
			def_value: 0;
			}
		}
			param 5 {
        param_tunnel {
            type: bool;
            name: string(STR_PARAM_TUNNEL_NAME);
            desc: string(STR_PARAM_TUNNEL_DESC);
            def_value: 1;
				}
			}
	}

if (ttd_platform != PLATFORM_OPENTTD || (openttd_version < version_openttd(1, 13, 0, 0))) {
	error(FATAL, REQUIRES_OPENTTD, string(STR_OPENTTD_VERSION));
}

    if (grf_future_status("UFI\90")) {
        error(FATAL, string(STR_ERROR_URERMM2));
    }
    if (grf_future_status("UF\01\01")) {
        error(FATAL, string(STR_ERROR_URERMM));
    }

//==================================================================================================================================
//								PARAMETR
//==================================================================================================================================
		basecost {
			PR_BUILD_RAIL: - 1;
			}
		basecost {
			PR_MAINTENANCE_RAIL: -2;
			}
//==================================================================================================================================
//												Templates
//==================================================================================================================================
template overlay_tile(x, y) { [x, y, 64, 31, -31, 0] }
template tmpl_overlay_straight() {
    overlay_tile(  1,  1)
    overlay_tile( 70,  1)
}
template tmpl_overlay_diagonal() {
    overlay_tile(139,  1)
    overlay_tile(208,  1)
    overlay_tile(277,  1)
    overlay_tile(346,  1)
 }
template tmpl_overlay_slopes() {
    [   415,     1,    64,    39,    -31,    -8] 
    [   484,     1,    64,    23,    -31,     0]
    [   553,     1,    64,    23,    -31,     0]
    [   622,     1,    64,    39,    -31,    -8]
}
template tmpl_overlay_type() {
 tmpl_overlay_straight()
 tmpl_overlay_diagonal()
 tmpl_overlay_slopes()
}

template precombined_tile(x, y) { [x, y, 64, 31, -31, 0] }
template tmpl_precombined_type() {
	precombined_tile( 70, 45)
	precombined_tile(139, 45)
	precombined_tile(208, 45)
	precombined_tile(277, 45)
	precombined_tile(346, 45)
	precombined_tile(415, 45)
	precombined_tile(484, 45)
	precombined_tile(  1, 81)
	precombined_tile( 70, 81)
	precombined_tile(139, 81)
	precombined_tile(208, 81)
	precombined_tile(277, 81)
	precombined_tile(346, 81)
	precombined_tile(415, 81)
	precombined_tile(484, 81)
	precombined_tile(  1,117)
	precombined_tile( 70,117)
	precombined_tile(139,117)
	precombined_tile(208,117)
	precombined_tile(277,117)
	precombined_tile(346,117)
	precombined_tile(415,117)
	precombined_tile(484,117)
	precombined_tile(  1,153)
	precombined_tile( 70,153)
	precombined_tile(139,153)
	precombined_tile(208,153)
	precombined_tile(277,153)
	precombined_tile(346,153)
	precombined_tile(415,153)
	precombined_tile(484,153)
	precombined_tile(  1,189)
	precombined_tile( 70,189)
	precombined_tile(139,189)
	precombined_tile(208,189)
	precombined_tile(277,189)
	precombined_tile(346,189)
	precombined_tile(415,189)
	precombined_tile(484,189)
	precombined_tile(  1,225)
	precombined_tile( 70,225)
	precombined_tile(139,225)
	precombined_tile(208,225)
	precombined_tile(277,225)
	precombined_tile(346,225)
	precombined_tile(415,225)
	precombined_tile(484,225)
	precombined_tile(  1,261)
	precombined_tile( 70,261)
	precombined_tile(139,261)
	precombined_tile(208,261)
	precombined_tile(277,261)
	precombined_tile(346,261)
	precombined_tile(415,261)
	precombined_tile(484,261)
	precombined_tile(  1,297)
	precombined_tile( 70,297)
	precombined_tile(139,297)
	precombined_tile(208,297)
	precombined_tile(277,297)
	precombined_tile(346,297)
	precombined_tile(415,297)
	precombined_tile(484,297)
}

template underlay_tile(x, y) { [x, y, 64, 31, -31, 0] }
template tmp_underlay_flat(y) {
	underlay_tile(  1,333+y)
	underlay_tile( 70,333+y)
	underlay_tile(139,333+y)
	underlay_tile(208,333+y)
	underlay_tile(277,333+y)
	underlay_tile(346,333+y)
}
template tmp_underlay_slope(y) {
    [   415,   333+y,    64,    39,    -31,    -8] 
    [   484,   333+y,    64,    23,    -31,     0]
    [   553,   333+y,    64,    23,    -31,     0]
    [   622,   333+y,    64,    39,    -31,    -8]
}
template tmp_underlay_crossing(y) {
	underlay_tile(691,333+y)
}
template tmp_underlay_juction(y) {
	underlay_tile(  1,377+y)
	underlay_tile( 70,377+y)
	underlay_tile(139,377+y)
	underlay_tile(208,377+y)
	underlay_tile(277,377+y)
}
template tmpl_underlay_type(y) {
	tmp_underlay_flat(y)
	tmp_underlay_slope(y)
	tmp_underlay_crossing(y)
	tmp_underlay_juction(y)
}

template tmpl_bridge_straight(x) {
    underlay_tile(  1+x, 493)
    underlay_tile( 70+x, 493)
}
template tmpl_bridge_slope(x) {
    [   139+x,   493,    64,    39,    -31,    -8]
    [   208+x,   493,    64,    23,    -31,     0]
    [   277+x,   493,    64,    23,    -31,     0]
    [   346+x,   493,    64,    39,    -31,    -8]
}
template tmpl_bridge_surfaces(x) {
    tmpl_bridge_straight(x)
    tmpl_bridge_slope(x)
}

template tmpl_level_crossings(a,b,x,y) {
    underlay_tile(  1+a, 537+b)
    underlay_tile( 70+a, 537+b) 

    [   277+x,  537+y,    20,    30,     -9,   -19, ANIM]
    [   302+x,  537+y,    20,    30,     -9,   -19, ANIM]
	[   327+x,  537+y,    20,    30,    -19,   -24, ANIM]
	[   352+x,  537+y,    35,    40,    -34,   -33, ANIM]
	[   392+x,  537+y,    35,    40,      1,   -33, ANIM]
	[   432+x,  537+y,    20,    30,      1,   -24, ANIM]
	[   457+x,  537+y,    35,    40,     -9,   -38, ANIM]
	[   497+x,  537+y,    35,    40,    -24,   -38, ANIM]
}

template tunnel_tile(x, y) { [x, y, 64, 39, -31, -8] }
template tmpl_tunnel_type(x) {
    tunnel_tile(  1+x,627)
    tunnel_tile( 70+x,627)
    tunnel_tile(139+x,627)
    tunnel_tile(208+x,627)
}

template tunnel_overlay_tile(x, y) { [x, y, 64, 39, -31, -38] }
template tmpl_tunnel_overlay_type(x) {
    tunnel_overlay_tile(  1+x,671)
    tunnel_overlay_tile( 70+x,671)
    tunnel_overlay_tile(139+x,671)
    tunnel_overlay_tile(208+x,671)
}

template tmpl_depot(x) {
    [    1+x,  715,   64,   61,   -31,  -34]
    [   70+x,  715,   64,   61,    -9,  -45]
    [  139+x,  715,   64,   61,   -31,  -34]
    [  208+x,  715,   64,   61,   -53,  -45]
    [  277+x,  715,   64,   61,   -53,  -45]
    [  346+x,  715,   64,   61,    -9,  -45]
}

template tmpl_pylons_catenary(y) {
    [   553,   627+y,    20,    28,    -9,   -25]
    [   578,   627+y,    20,    28,    -9,   -25]
    [   603,   627+y,    20,    28,    -9,   -25]
    [   628,   627+y,    20,    28,    -9,   -25]
    [   653,   627+y,    11,    28,    -4,   -28]
    [   669,   627+y,    11,    28,    -4,   -26]
    [   685,   627+y,    20,    28,   -10,   -24]
    [   710,   627+y,    20,    28,   -10,   -24]
}

template tmpl_wires_catenary(y) {
    [     1,     1+y,    32,    22,   -29, 	  -8]
    [    34,     1+y,    32,    22,    -1, 	  -8]
    [    67,     1+y,    32,     7,    -1, 	  -9]
    [   100,     1+y,     1,    22,     0, 	  -9]
    [   102,     1+y,    32,    30,   -29,    -9]		//5
    [   135,     1+y,    32,    15,    -1,     0]
    [   168,     1+y,    32,    15,   -29,     0]
    [   201,     1+y,    32,    30,    -1,    -9]
    [   234,     1+y,    32,    22,   -29,    -8]
    [   267,     1+y,    32,    22,    -1,    -8]		//10
    [   300,     1+y,    32,     7,    -1,    -9]
    [   333,     1+y,     1,    22,     0,    -9]
    [   335,     1+y,    32,    27,   -29,    -6]
    [   368,     1+y,    32,    12,    -1,     3]
    [   401,     1+y,    32,    12,   -29,     3]		//15
    [   434,     1+y,    32,    27,    -1,    -6]
    [     1,    32+y,    32,    22,   -29,    -8]
    [    34,    32+y,    32,    22,    -1,    -8]
    [    67,    32+y,    32,     7,    -1,    -9]
    [   100,    32+y,     1,    22,     0,    -9]		//20
    [   102,    32+y,    32,    30,   -29,    -9]
    [   135,    32+y,    32,    15,    -1,     0]
    [   168,    32+y,    32,    15,   -29,     0]
    [   201,    32+y,    32,    30,    -1,    -9]
    [   234,    32+y,    16,    12,   -29,     2]		//25
    [   251,    32+y,    16,    14,    -1,    -8]
    [   268,    32+y,    16,    14,   -13,    -8]
    [   285,    32+y,    16,    12,    15,     2]
}

template tmpl_fences(y) {
    [     1,     781+y,    32,    22,   -33,    -7]
    [    38,     781+y,    32,    22,     3,    -7]
    [    75,     781+y,     2,    38,     0,   -23]
    [    82,     781+y,    64,     7,   -31,    -7]
    [   151,     781+y,    32,    14,   -33,    -7]
    [   188,     781+y,    32,    14,     3,    -7]
    [   225,     781+y,    32,    30,   -33,   -15]
    [   262,     781+y,    32,    30,     3,   -15]
    [   299,     781+y,    32,    22,   -29,    -6]
    [   336,     781+y,    32,    22,    -1,    -6]
    [   373,     781+y,     2,    38,     0,   -23]
    [   380,     781+y,    64,     7,   -31,    -7]
    [   449,     781+y,    32,    14,   -29,    -6]
    [   486,     781+y,    32,    14,    -1,    -6]
    [   523,     781+y,    32,    30,   -29,   -14]
    [   560,     781+y,    32,    30,    -1,   -14]
}

template tmpl_fences_empty() {
	[1, 1, 1, 1, 0, 0]
	[1, 1, 1, 1, 0, 0]
	[1, 1, 1, 1, 0, 0]
	[1, 1, 1, 1, 0, 0]
	[1, 1, 1, 1, 0, 0]
	[1, 1, 1, 1, 0, 0]
	[1, 1, 1, 1, 0, 0]
	[1, 1, 1, 1, 0, 0]
}

template tmpl_gui_icon(x, y) { [x, y, 20, 20, 0, 0]
}
template tmpl_gui_cursor(x, y) { [x, y, 32, 32, 0, 0]
}
template tmpl_gui_gfx() {
    tmpl_gui_icon(  1, 867)
    tmpl_gui_icon( 22, 867)
    tmpl_gui_icon( 43, 867)
    tmpl_gui_icon( 64, 867)
    tmpl_gui_icon( 85, 867)
    tmpl_gui_icon(106, 867)
	tmpl_gui_icon(127, 867)
	tmpl_gui_icon(169, 867)

    tmpl_gui_cursor(  1, 888)
    tmpl_gui_cursor( 34, 888)
    tmpl_gui_cursor( 67, 888)
    tmpl_gui_cursor(100, 888)
    tmpl_gui_cursor(133, 888)
    tmpl_gui_cursor(166, 888)
	tmpl_gui_cursor(199, 888)
	tmpl_gui_cursor(232, 888)
}

template tmpl_gui_ttd() {
    tmpl_gui_icon(  1, 867)
    tmpl_gui_icon( 22, 867)
    tmpl_gui_icon( 43, 867)
    tmpl_gui_icon( 64, 867)
    tmpl_gui_icon( 85, 867)
    tmpl_gui_icon(106, 867)
	tmpl_gui_icon(127, 867)
	tmpl_gui_icon(148, 867)

    [    1,  921,   38,   30,    -4,  -15]
	[   40,  921,   72,   44,   -16,   -8]
	[  113,  921,   44,   34,   -21,   -2]
	[  158,  921,   72,   44,   -16,  -36]
	[  231,  921,   56,   43,    0,    0]
    tmpl_gui_cursor(288, 921)
    tmpl_gui_cursor(321, 921)
    tmpl_gui_cursor(354, 921)
}

template tmpl_UGUI_icon(x, y) { [x, y, 33, 33, 0, 0] }
template tmpl_UGUI_cursor(x, y) { [x, y, 30, 36, 0, 0] }
template tmpl_gui_UGUI() {
    tmpl_UGUI_icon(  1, 966)
    tmpl_UGUI_icon( 35, 966)
    tmpl_UGUI_icon( 69, 966)
    tmpl_UGUI_icon(103, 966)
    tmpl_UGUI_icon(137, 966)
    tmpl_UGUI_icon(171, 966)
	tmpl_UGUI_icon(205, 966)
	tmpl_UGUI_icon(239, 966)

    tmpl_UGUI_cursor(  1, 1000)
    tmpl_UGUI_cursor( 32, 1000)
    tmpl_UGUI_cursor( 63, 1000)
    tmpl_UGUI_cursor( 94, 1000)
    tmpl_UGUI_cursor(125, 1000)
    tmpl_UGUI_cursor(156, 1000)
	tmpl_UGUI_cursor(187, 1000)
	tmpl_UGUI_cursor(218, 1000)
}
//==================================================================================================================================
//												Rail Sprites
//==================================================================================================================================
//============================================================================
//						MODERN MAIN LINE (SCAN)
//============================================================================
spriteset(switch_SCAN_overlay, "gfx/SCAN.png") {											// OVERLAY
    tmpl_overlay_type()
}

spriteset(normal_SCAN_precombined, "gfx/SCAN.png") {										// PRECOMBINED
    tmpl_precombined_type()
}
spriteset(snow_SCAN_precombined, "gfx/SCAE.png") {
    tmpl_precombined_type()
}
switch(FEAT_RAILTYPES, SELF, switch_SCAN_precombined, terrain_type) {
    TILETYPE_SNOW: snow_SCAN_precombined;
    normal_SCAN_precombined;
}

spriteset(normal_SCAN_underlay, "gfx/SCAN.png") {											// UNDERLAY
    tmpl_underlay_type(0)
}
spriteset(snow_SCAN_underlay, "gfx/SCAN.png") {
    tmpl_underlay_type(80)
}
switch(FEAT_RAILTYPES, SELF, switch_SCAN_underlay, terrain_type) {
    TILETYPE_SNOW: snow_SCAN_underlay;
    normal_SCAN_underlay;
}

spriteset(normal_SCAN_bridge, "gfx/SCAN.png") {												// BRIDGE
    tmpl_bridge_surfaces(0)
}
spriteset(snow_SCAN_bridge, "gfx/SCAN.png") {
    tmpl_bridge_surfaces(414)
}
switch(FEAT_RAILTYPES, SELF, switch_SCAN_bridge, terrain_type) {
    TILETYPE_SNOW: snow_SCAN_bridge;
    normal_SCAN_bridge;
}

spriteset(normal_SCAN_lc_right_townzone_edge_open, "gfx/SCAN.png") {						// LEVEL_CROSSING
    tmpl_level_crossings(0,0,0,0)
}
spriteset(normal_SCAN_lc_right_townzone_edge_closed, "gfx/SCAN.png") {
    tmpl_level_crossings(0,0,0,45)
}
spriteset(snow_SCAN_lc_right_townzone_edge_open, "gfx/SCAN.png") {
    tmpl_level_crossings(0,45,0,0)
}
spriteset(snow_SCAN_lc_right_townzone_edge_closed, "gfx/SCAN.png") {
    tmpl_level_crossings(0,45,0,45)
}
spriteset(normal_SCAN_lc_right_townzone_open, "gfx/SCAN.png") {
    tmpl_level_crossings(138,0,0,0)
}
spriteset(normal_SCAN_lc_right_townzone_closed, "gfx/SCAN.png") {
    tmpl_level_crossings(138,0,0,45)
}
spriteset(snow_SCAN_lc_right_townzone_open, "gfx/SCAN.png") {
    tmpl_level_crossings(138,45,0,0)
}
spriteset(snow_SCAN_lc_right_townzone_closed, "gfx/SCAN.png") {
    tmpl_level_crossings(138,45,0,45)
}
spriteset(normal_SCAN_lc_left_townzone_edge_open, "gfx/SCAN.png") {
    tmpl_level_crossings(0,0,276,0)
}
spriteset(normal_SCAN_lc_left_townzone_edge_closed, "gfx/SCAN.png") {
    tmpl_level_crossings(0,0,276,45)
}
spriteset(snow_SCAN_lc_left_townzone_edge_open, "gfx/SCAN.png") {
    tmpl_level_crossings(0,45,276,0)
}
spriteset(snow_SCAN_lc_left_townzone_edge_closed, "gfx/SCAN.png") {
    tmpl_level_crossings(0,45,276,45)
}
spriteset(normal_SCAN_lc_left_townzone_open, "gfx/SCAN.png") {
    tmpl_level_crossings(138,0,276,0)
}
spriteset(normal_SCAN_lc_left_townzone_closed, "gfx/SCAN.png") {
    tmpl_level_crossings(138,0,276,45)
}
spriteset(snow_SCAN_lc_left_townzone_open, "gfx/SCAN.png") {
    tmpl_level_crossings(138,45,276,0)
}
spriteset(snow_SCAN_lc_left_townzone_closed, "gfx/SCAN.png") {
    tmpl_level_crossings(138,45,276,45)
}
switch(FEAT_RAILTYPES, SELF, snow_SCAN_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_SCAN_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_SCAN_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_SCAN_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_SCAN_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_SCAN_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_SCAN_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_SCAN_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_SCAN_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_SCAN_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_SCAN_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_SCAN_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_SCAN_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_SCAN_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_SCAN_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_SCAN_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_SCAN_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_SCAN_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_SCAN_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_SCAN_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_SCAN_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_SCAN_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_SCAN_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_SCAN_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, switch_SCAN_lc_right_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_SCAN_lc_right_townzone_edge; 
	normal_SCAN_lc_right_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_SCAN_lc_right_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_SCAN_lc_right_townzone; 
	normal_SCAN_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SCAN_lc_left_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_SCAN_lc_left_townzone_edge; 
	normal_SCAN_lc_left_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_SCAN_lc_left_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_SCAN_lc_left_townzone; 
	normal_SCAN_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SCAN_lc_right, town_zone) {
	TOWNZONE_EDGE: switch_SCAN_lc_right_townzone_edge;
	switch_SCAN_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SCAN_lc_left, town_zone) {
	TOWNZONE_EDGE: switch_SCAN_lc_left_townzone_edge;
	switch_SCAN_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SCAN_level_crossings, traffic_side) {
	TRAFFIC_SIDE_LEFT: switch_SCAN_lc_left;
	switch_SCAN_lc_right;
}

spriteset(normal_SCAN_tunnel_overlay, "gfx/SCAN.png") {										// TUNNEL_OVERLAY
    tmpl_tunnel_overlay_type(0)
}
spriteset(snow_SCAN_tunnel_overlay, "gfx/SCAN.png") {
    tmpl_tunnel_overlay_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_SCAN_tunnel_overlay, terrain_type) {
    TILETYPE_SNOW: snow_SCAN_tunnel_overlay;
    normal_SCAN_tunnel_overlay;
}

spriteset(normal_SCAN_tunnel_1, "gfx/SCAN.png") {											// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_SCAN_tunnel_1, "gfx/SCAN.png") {
    tmpl_tunnel_type(276)
}
spriteset(normal_SCAN_tunnel_0, "gfx/SCAE.png") {											// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_SCAN_tunnel_0, "gfx/SCAE.png") {
    tmpl_tunnel_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_SCAN_tunnel_1, terrain_type) {
    TILETYPE_SNOW: snow_SCAN_tunnel_1;
    normal_SCAN_tunnel_1;
}
switch(FEAT_RAILTYPES, SELF, switch_SCAN_tunnel_0, terrain_type) {
    TILETYPE_SNOW: snow_SCAN_tunnel_0;
    normal_SCAN_tunnel_0;
}
switch(FEAT_RAILTYPES, SELF, switch_SCAN_tunnel, param_tunnel) {
	1: switch_SCAN_tunnel_1;
	switch_SCAN_tunnel_0;
}

spriteset(normal_SCAN_depots, "gfx/SCAN.png") {												//DEPOTS
    tmpl_depot(0)
}
spriteset(snow_SCAN_depots, "gfx/SCAN.png") {
    tmpl_depot(414)
}
switch(FEAT_RAILTYPES, SELF, switch_SCAN_depots, terrain_type) {
    TILETYPE_SNOW: snow_SCAN_depots;
    normal_SCAN_depots;
}

spriteset(fences_SCAN, "gfx/SCAN.png") {													//FENCES
	tmpl_fences(0)
}
spriteset(fences_SCAN_cc, "gfx/SCAN.png") {													//FENCES
	tmpl_fences(43)
}
switch(FEAT_RAILTYPES, SELF, switch_SCAN_fences, param_fences) {
    0: fences_empty;
	2: fences_empty;
	3: fences_SCAN;
	4: fences_SCAN_cc;
}

spriteset(gui_SCAN_UGUI, "gfx/SCAN.png") {													//GUI
    tmpl_gui_UGUI()
}
spriteset(gui_SCAN_opengfx, "gfx/SCAN.png") {												//GUI
    tmpl_gui_gfx()
}
spriteset(gui_SCAN_ttd, "gfx/SCAN.png") {
    tmpl_gui_ttd()
}
switch (FEAT_RAILTYPES, SELF, switch_SCAN_gui, param_gui) {
    1: gui_SCAN_opengfx;
    2: gui_SCAN_UGUI;
	gui_SCAN_ttd;
}
//============================================================================
//						HIGHSPEED LINE (SDAN)
//============================================================================
spriteset(switch_SDAN_overlay, "gfx/SDAN.png") {											// OVERLAY
    tmpl_overlay_type()
}

spriteset(normal_SDAN_precombined, "gfx/SDAN.png") {										// PRECOMBINED
    tmpl_precombined_type()
}
spriteset(snow_SDAN_precombined, "gfx/SDAE.png") {
    tmpl_precombined_type()
}
switch(FEAT_RAILTYPES, SELF, switch_SDAN_precombined, terrain_type) {
    TILETYPE_SNOW: snow_SDAN_precombined;
    normal_SDAN_precombined;
}

spriteset(normal_SDAN_underlay, "gfx/SDAN.png") {											// UNDERLAY
    tmpl_underlay_type(0)
}
spriteset(snow_SDAN_underlay, "gfx/SDAN.png") {
    tmpl_underlay_type(80)
}
switch(FEAT_RAILTYPES, SELF, switch_SDAN_underlay, terrain_type) {
    TILETYPE_SNOW: snow_SDAN_underlay;
    normal_SDAN_underlay;
}

spriteset(normal_SDAN_bridge, "gfx/SDAN.png") {												// BRIDGE
    tmpl_bridge_surfaces(0)
}
spriteset(snow_SDAN_bridge, "gfx/SDAN.png") {
    tmpl_bridge_surfaces(414)
}
switch(FEAT_RAILTYPES, SELF, switch_SDAN_bridge, terrain_type) {
    TILETYPE_SNOW: snow_SDAN_bridge;
    normal_SDAN_bridge;
}

spriteset(normal_SDAN_lc_right_townzone_edge_open, "gfx/SDAN.png") {						// LEVEL_CROSSING
    tmpl_level_crossings(0,0,0,0)
}
spriteset(normal_SDAN_lc_right_townzone_edge_closed, "gfx/SDAN.png") {
    tmpl_level_crossings(0,0,0,45)
}
spriteset(snow_SDAN_lc_right_townzone_edge_open, "gfx/SDAN.png") {
    tmpl_level_crossings(0,45,0,0)
}
spriteset(snow_SDAN_lc_right_townzone_edge_closed, "gfx/SDAN.png") {
    tmpl_level_crossings(0,45,0,45)
}
spriteset(normal_SDAN_lc_right_townzone_open, "gfx/SDAN.png") {
    tmpl_level_crossings(138,0,0,0)
}
spriteset(normal_SDAN_lc_right_townzone_closed, "gfx/SDAN.png") {
    tmpl_level_crossings(138,0,0,45)
}
spriteset(snow_SDAN_lc_right_townzone_open, "gfx/SDAN.png") {
    tmpl_level_crossings(138,45,0,0)
}
spriteset(snow_SDAN_lc_right_townzone_closed, "gfx/SDAN.png") {
    tmpl_level_crossings(138,45,0,45)
}
spriteset(normal_SDAN_lc_left_townzone_edge_open, "gfx/SDAN.png") {
    tmpl_level_crossings(0,0,276,0)
}
spriteset(normal_SDAN_lc_left_townzone_edge_closed, "gfx/SDAN.png") {
    tmpl_level_crossings(0,0,276,45)
}
spriteset(snow_SDAN_lc_left_townzone_edge_open, "gfx/SDAN.png") {
    tmpl_level_crossings(0,45,276,0)
}
spriteset(snow_SDAN_lc_left_townzone_edge_closed, "gfx/SDAN.png") {
    tmpl_level_crossings(0,45,276,45)
}
spriteset(normal_SDAN_lc_left_townzone_open, "gfx/SDAN.png") {
    tmpl_level_crossings(138,0,276,0)
}
spriteset(normal_SDAN_lc_left_townzone_closed, "gfx/SDAN.png") {
    tmpl_level_crossings(138,0,276,45)
}
spriteset(snow_SDAN_lc_left_townzone_open, "gfx/SDAN.png") {
    tmpl_level_crossings(138,45,276,0)
}
spriteset(snow_SDAN_lc_left_townzone_closed, "gfx/SDAN.png") {
    tmpl_level_crossings(138,45,276,45)
}
switch(FEAT_RAILTYPES, SELF, snow_SDAN_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_SDAN_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_SDAN_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_SDAN_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_SDAN_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_SDAN_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_SDAN_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_SDAN_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_SDAN_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_SDAN_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_SDAN_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_SDAN_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_SDAN_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_SDAN_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_SDAN_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_SDAN_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_SDAN_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_SDAN_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_SDAN_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_SDAN_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_SDAN_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_SDAN_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_SDAN_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_SDAN_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, switch_SDAN_lc_right_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_SDAN_lc_right_townzone_edge; 
	normal_SDAN_lc_right_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_SDAN_lc_right_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_SDAN_lc_right_townzone; 
	normal_SDAN_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SDAN_lc_left_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_SDAN_lc_left_townzone_edge; 
	normal_SDAN_lc_left_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_SDAN_lc_left_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_SDAN_lc_left_townzone; 
	normal_SDAN_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SDAN_lc_right, town_zone) {
	TOWNZONE_EDGE: switch_SDAN_lc_right_townzone_edge;
	switch_SDAN_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SDAN_lc_left, town_zone) {
	TOWNZONE_EDGE: switch_SDAN_lc_left_townzone_edge;
	switch_SDAN_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SDAN_level_crossings, traffic_side) {
	TRAFFIC_SIDE_LEFT: switch_SDAN_lc_left;
	switch_SDAN_lc_right;
}

spriteset(normal_SDAN_tunnel_overlay, "gfx/SDAN.png") {											// TUNNEL_OVERLAY
    tmpl_tunnel_overlay_type(0)
}
spriteset(snow_SDAN_tunnel_overlay, "gfx/SDAN.png") {
    tmpl_tunnel_overlay_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_SDAN_tunnel_overlay, terrain_type) {
    TILETYPE_SNOW: snow_SDAN_tunnel_overlay;
    normal_SDAN_tunnel_overlay;
}

spriteset(normal_SDAN_tunnel_1, "gfx/SDAN.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_SDAN_tunnel_1, "gfx/SDAN.png") {
    tmpl_tunnel_type(276)
}
spriteset(normal_SDAN_tunnel_0, "gfx/SDAE.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_SDAN_tunnel_0, "gfx/SDAE.png") {
    tmpl_tunnel_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_SDAN_tunnel_1, terrain_type) {
    TILETYPE_SNOW: snow_SDAN_tunnel_1;
    normal_SDAN_tunnel_1;
}
switch(FEAT_RAILTYPES, SELF, switch_SDAN_tunnel_0, terrain_type) {
    TILETYPE_SNOW: snow_SDAN_tunnel_0;
    normal_SDAN_tunnel_0;
}
switch(FEAT_RAILTYPES, SELF, switch_SDAN_tunnel, param_tunnel) {
	1: switch_SDAN_tunnel_1;
	switch_SDAN_tunnel_0;
}

spriteset(fences_SDAN, "gfx/SDAN.png") {														//FENCES
	tmpl_fences(0)
}
spriteset(fences_SDAN_cc, "gfx/SDAN.png") {														//FENCES
	tmpl_fences(43)
}
switch(FEAT_RAILTYPES, SELF, switch_SDAN_fences, param_fences) {
    0: fences_empty;
	2: fences_empty;
	3: fences_SDAN;
	4: fences_SDAN_cc;
}
//============================================================================
//						HIGHSPEED MAIN LINE EL(SDAE)
//============================================================================
spriteset(normal_SDAE_depots, "gfx/SDAE.png") {													//DEPOTS
    tmpl_depot(0)
}
spriteset(snow_SDAE_depots, "gfx/SDAE.png") {
    tmpl_depot(414)
}
switch(FEAT_RAILTYPES, SELF, switch_SDAE_depots, terrain_type) {
    TILETYPE_SNOW: snow_SDAE_depots;
    normal_SDAE_depots;
}


spriteset(switch_SDAE_pylons_catenary_1, "gfx/SDAE.png") {										// PYLONS
    tmpl_pylons_catenary(0)
}
spriteset(switch_SDAE_pylons_catenary_2, "gfx/SDAE.png") {										// PYLONS
    tmpl_pylons_catenary(36)
}
switch (FEAT_RAILTYPES, SELF, switch_SDAE_pylons_catenary, random_bits) {
	1: switch_SDAE_pylons_catenary_2;
	switch_SDAE_pylons_catenary_1;
}

spriteset(gui_SDAE_UGUI, "gfx/SDAE.png") {														//GUI						
    tmpl_gui_UGUI()
}
spriteset(gui_SDAE_opengfx, "gfx/SDAE.png") {													//GUI
    tmpl_gui_gfx()
}
spriteset(gui_SDAE_ttd, "gfx/SDAE.png") {
    tmpl_gui_ttd()
}
switch (FEAT_RAILTYPES, SELF, switch_SDAE_gui, param_gui) {
    1: gui_SDAE_opengfx;
    2: gui_SDAE_UGUI;
	gui_SDAE_ttd;
}
//============================================================================
//						URBAN MAIN LINE EL (SUAE)
//============================================================================
spriteset(switch_SUAE_overlay, "gfx/SUAE.png") {												// OVERLAY
    tmpl_overlay_type()
}

spriteset(normal_SUAE_precombined, "gfx/SUAE.png") {											// PRECOMBINED
    tmpl_precombined_type()
}
spriteset(snow_SUAE_precombined, "gfx/SUAE_1.png") {
    tmpl_precombined_type()
}
switch(FEAT_RAILTYPES, SELF, switch_SUAE_precombined, terrain_type) {
    TILETYPE_SNOW: snow_SUAE_precombined;
    normal_SUAE_precombined;
}

spriteset(normal_SUAE_underlay, "gfx/SUAE.png") {												// UNDERLAY
    tmpl_underlay_type(0)
}
spriteset(snow_SUAE_underlay, "gfx/SUAE.png") {
    tmpl_underlay_type(80)
}
switch(FEAT_RAILTYPES, SELF, switch_SUAE_underlay, terrain_type) {
    TILETYPE_SNOW: snow_SUAE_underlay;
    normal_SUAE_underlay;
}

spriteset(normal_SUAE_bridge, "gfx/SUAE.png") {													// BRIDGE
    tmpl_bridge_surfaces(0)
}
spriteset(snow_SUAE_bridge, "gfx/SUAE.png") {
    tmpl_bridge_surfaces(414)
}
switch(FEAT_RAILTYPES, SELF, switch_SUAE_bridge, terrain_type) {
    TILETYPE_SNOW: snow_SUAE_bridge;
    normal_SUAE_bridge;
}

spriteset(normal_SUAE_lc_right_townzone_edge_open, "gfx/SUAE.png") {							// LEVEL_CROSSING
    tmpl_level_crossings(0,0,0,0)
}
spriteset(normal_SUAE_lc_right_townzone_edge_closed, "gfx/SUAE.png") {
    tmpl_level_crossings(0,0,0,45)
}
spriteset(snow_SUAE_lc_right_townzone_edge_open, "gfx/SUAE.png") {
    tmpl_level_crossings(0,45,0,0)
}
spriteset(snow_SUAE_lc_right_townzone_edge_closed, "gfx/SUAE.png") {
    tmpl_level_crossings(0,45,0,45)
}
spriteset(normal_SUAE_lc_right_townzone_open, "gfx/SUAE.png") {
    tmpl_level_crossings(138,0,0,0)
}
spriteset(normal_SUAE_lc_right_townzone_closed, "gfx/SUAE.png") {
    tmpl_level_crossings(138,0,0,45)
}
spriteset(snow_SUAE_lc_right_townzone_open, "gfx/SUAE.png") {
    tmpl_level_crossings(138,45,0,0)
}
spriteset(snow_SUAE_lc_right_townzone_closed, "gfx/SUAE.png") {
    tmpl_level_crossings(138,45,0,45)
}
spriteset(normal_SUAE_lc_left_townzone_edge_open, "gfx/SUAE.png") {
    tmpl_level_crossings(0,0,276,0)
}
spriteset(normal_SUAE_lc_left_townzone_edge_closed, "gfx/SUAE.png") {
    tmpl_level_crossings(0,0,276,45)
}
spriteset(snow_SUAE_lc_left_townzone_edge_open, "gfx/SUAE.png") {
    tmpl_level_crossings(0,45,276,0)
}
spriteset(snow_SUAE_lc_left_townzone_edge_closed, "gfx/SUAE.png") {
    tmpl_level_crossings(0,45,276,45)
}
spriteset(normal_SUAE_lc_left_townzone_open, "gfx/SUAE.png") {
    tmpl_level_crossings(138,0,276,0)
}
spriteset(normal_SUAE_lc_left_townzone_closed, "gfx/SUAE.png") {
    tmpl_level_crossings(138,0,276,45)
}
spriteset(snow_SUAE_lc_left_townzone_open, "gfx/SUAE.png") {
    tmpl_level_crossings(138,45,276,0)
}
spriteset(snow_SUAE_lc_left_townzone_closed, "gfx/SUAE.png") {
    tmpl_level_crossings(138,45,276,45)
}
switch(FEAT_RAILTYPES, SELF, snow_SUAE_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_SUAE_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_SUAE_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_SUAE_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_SUAE_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_SUAE_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_SUAE_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_SUAE_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_SUAE_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_SUAE_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_SUAE_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_SUAE_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_SUAE_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_SUAE_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_SUAE_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_SUAE_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_SUAE_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_SUAE_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_SUAE_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_SUAE_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_SUAE_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_SUAE_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_SUAE_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_SUAE_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, switch_SUAE_lc_right_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_SUAE_lc_right_townzone_edge; 
	normal_SUAE_lc_right_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_SUAE_lc_right_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_SUAE_lc_right_townzone; 
	normal_SUAE_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SUAE_lc_left_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_SUAE_lc_left_townzone_edge; 
	normal_SUAE_lc_left_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_SUAE_lc_left_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_SUAE_lc_left_townzone; 
	normal_SUAE_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SUAE_lc_right, town_zone) {
	TOWNZONE_EDGE: switch_SUAE_lc_right_townzone_edge;
	switch_SUAE_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SUAE_lc_left, town_zone) {
	TOWNZONE_EDGE: switch_SUAE_lc_left_townzone_edge;
	switch_SUAE_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SUAE_level_crossings, traffic_side) {
	TRAFFIC_SIDE_LEFT: switch_SUAE_lc_left;
	switch_SUAE_lc_right;
}

spriteset(normal_SUAE_tunnel_overlay, "gfx/SUAE.png") {											// TUNNEL_OVERLAY
    tmpl_tunnel_overlay_type(0)
}
spriteset(snow_SUAE_tunnel_overlay, "gfx/SUAE.png") {
    tmpl_tunnel_overlay_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_SUAE_tunnel_overlay, terrain_type) {
    TILETYPE_SNOW: snow_SUAE_tunnel_overlay;
    normal_SUAE_tunnel_overlay;
}

spriteset(normal_SUAE_tunnel_1, "gfx/SUAE.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_SUAE_tunnel_1, "gfx/SUAE.png") {
    tmpl_tunnel_type(276)
}
spriteset(normal_SUAE_tunnel_0, "gfx/SUAE_1.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_SUAE_tunnel_0, "gfx/SUAE_1.png") {
    tmpl_tunnel_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_SUAE_tunnel_1, terrain_type) {
    TILETYPE_SNOW: snow_SUAE_tunnel_1;
    normal_SUAE_tunnel_1;
}
switch(FEAT_RAILTYPES, SELF, switch_SUAE_tunnel_0, terrain_type) {
    TILETYPE_SNOW: snow_SUAE_tunnel_0;
    normal_SUAE_tunnel_0;
}
switch(FEAT_RAILTYPES, SELF, switch_SUAE_tunnel, param_tunnel) {
	1: switch_SUAE_tunnel_1;
	switch_SUAE_tunnel_0;
}

spriteset(normal_SUAE_depots, "gfx/SUAE.png") {													//DEPOTS
    tmpl_depot(0)
}
spriteset(snow_SUAE_depots, "gfx/SUAE.png") {
    tmpl_depot(414)
}
switch(FEAT_RAILTYPES, SELF, switch_SUAE_depots, terrain_type) {
    TILETYPE_SNOW: snow_SUAE_depots;
    normal_SUAE_depots;
}

spriteset(switch_SUAE_pylons_catenary_1, "gfx/SUAE.png") {										// PYLONS
    tmpl_pylons_catenary(0)
}
spriteset(switch_SUAE_pylons_catenary_2, "gfx/SUAE.png") {
    tmpl_pylons_catenary(36)
}
switch(FEAT_RAILTYPES, SELF, switch_SUAE_pylons_catenary, random_bits) {
    1: switch_SUAE_pylons_catenary_2;
	switch_SUAE_pylons_catenary_1;
}

spriteset(fences_SUAE, "gfx/SUAE.png") {
	tmpl_fences(0)
}
spriteset(fences_SUAE_cc, "gfx/SUAE.png") {
	tmpl_fences(43)
}
switch(FEAT_RAILTYPES, SELF, switch_SUAE_fences, param_fences) {
    0: fences_empty;
	2: fences_SUAE;
	3: fences_SUAE;
	4: fences_SUAE_cc;
}

spriteset(gui_SUAE_UGUI, "gfx/SUAE.png") {														//GUI						
    tmpl_gui_UGUI()
}
spriteset(gui_SUAE_opengfx, "gfx/SUAE.png") {													//GUI
    tmpl_gui_gfx()
}
spriteset(gui_SUAE_ttd, "gfx/SUAE.png") {
    tmpl_gui_ttd()
}
switch (FEAT_RAILTYPES, SELF, switch_SUAE_gui, param_gui) {
    1: gui_SUAE_opengfx;
    2: gui_SUAE_UGUI;
	gui_SUAE_ttd;
}
//============================================================================
//						METRO LINE (SAA3)
//============================================================================
spriteset(switch_SAA3_overlay, "gfx/SAA3.png") {												// OVERLAY
    tmpl_overlay_type()
}

spriteset(normal_SAA3_precombined, "gfx/SAA3.png") {											// PRECOMBINED
    tmpl_precombined_type()
}
spriteset(snow_SAA3_precombined, "gfx/SAA3_1.png") {
    tmpl_precombined_type()
}
switch(FEAT_RAILTYPES, SELF, switch_SAA3_precombined, terrain_type) {
    TILETYPE_SNOW: snow_SAA3_precombined;
    normal_SAA3_precombined;
}

spriteset(normal_SAA3_underlay, "gfx/SAA3.png") {												// UNDERLAY
    tmpl_underlay_type(0)
}
spriteset(snow_SAA3_underlay, "gfx/SAA3.png") {
    tmpl_underlay_type(80)
}
switch(FEAT_RAILTYPES, SELF, switch_SAA3_underlay, terrain_type) {
    TILETYPE_SNOW: snow_SAA3_underlay;
    normal_SAA3_underlay;
}

spriteset(normal_SAA3_bridge, "gfx/SAA3.png") {													// BRIDGE
    tmpl_bridge_surfaces(0)
}
spriteset(snow_SAA3_bridge, "gfx/SAA3.png") {
    tmpl_bridge_surfaces(414)
}
switch(FEAT_RAILTYPES, SELF, switch_SAA3_bridge, terrain_type) {
    TILETYPE_SNOW: snow_SAA3_bridge;
    normal_SAA3_bridge;
}

spriteset(normal_SAA3_lc_right_townzone_edge_open, "gfx/SAA3.png") {							// LEVEL_CROSSING
    tmpl_level_crossings(0,0,0,0)
}
spriteset(normal_SAA3_lc_right_townzone_edge_closed, "gfx/SAA3.png") {
    tmpl_level_crossings(0,0,0,45)
}
spriteset(snow_SAA3_lc_right_townzone_edge_open, "gfx/SAA3.png") {
    tmpl_level_crossings(0,45,0,0)
}
spriteset(snow_SAA3_lc_right_townzone_edge_closed, "gfx/SAA3.png") {
    tmpl_level_crossings(0,45,0,45)
}
spriteset(normal_SAA3_lc_right_townzone_open, "gfx/SAA3.png") {
    tmpl_level_crossings(138,0,0,0)
}
spriteset(normal_SAA3_lc_right_townzone_closed, "gfx/SAA3.png") {
    tmpl_level_crossings(138,0,0,45)
}
spriteset(snow_SAA3_lc_right_townzone_open, "gfx/SAA3.png") {
    tmpl_level_crossings(138,45,0,0)
}
spriteset(snow_SAA3_lc_right_townzone_closed, "gfx/SAA3.png") {
    tmpl_level_crossings(138,45,0,45)
}
spriteset(normal_SAA3_lc_left_townzone_edge_open, "gfx/SAA3.png") {
    tmpl_level_crossings(0,0,276,0)
}
spriteset(normal_SAA3_lc_left_townzone_edge_closed, "gfx/SAA3.png") {
    tmpl_level_crossings(0,0,276,45)
}
spriteset(snow_SAA3_lc_left_townzone_edge_open, "gfx/SAA3.png") {
    tmpl_level_crossings(0,45,276,0)
}
spriteset(snow_SAA3_lc_left_townzone_edge_closed, "gfx/SAA3.png") {
    tmpl_level_crossings(0,45,276,45)
}
spriteset(normal_SAA3_lc_left_townzone_open, "gfx/SAA3.png") {
    tmpl_level_crossings(138,0,276,0)
}
spriteset(normal_SAA3_lc_left_townzone_closed, "gfx/SAA3.png") {
    tmpl_level_crossings(138,0,276,45)
}
spriteset(snow_SAA3_lc_left_townzone_open, "gfx/SAA3.png") {
    tmpl_level_crossings(138,45,276,0)
}
spriteset(snow_SAA3_lc_left_townzone_closed, "gfx/SAA3.png") {
    tmpl_level_crossings(138,45,276,45)
}
switch(FEAT_RAILTYPES, SELF, snow_SAA3_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_SAA3_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_SAA3_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_SAA3_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_SAA3_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_SAA3_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_SAA3_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_SAA3_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_SAA3_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_SAA3_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_SAA3_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_SAA3_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_SAA3_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_SAA3_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_SAA3_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_SAA3_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_SAA3_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_SAA3_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_SAA3_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_SAA3_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_SAA3_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_SAA3_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_SAA3_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_SAA3_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, switch_SAA3_lc_right_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_SAA3_lc_right_townzone_edge; 
	normal_SAA3_lc_right_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_SAA3_lc_right_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_SAA3_lc_right_townzone; 
	normal_SAA3_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SAA3_lc_left_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_SAA3_lc_left_townzone_edge; 
	normal_SAA3_lc_left_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_SAA3_lc_left_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_SAA3_lc_left_townzone; 
	normal_SAA3_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SAA3_lc_right, town_zone) {
	TOWNZONE_EDGE: switch_SAA3_lc_right_townzone_edge;
	switch_SAA3_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SAA3_lc_left, town_zone) {
	TOWNZONE_EDGE: switch_SAA3_lc_left_townzone_edge;
	switch_SAA3_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SAA3_level_crossings, traffic_side) {
	TRAFFIC_SIDE_LEFT: switch_SAA3_lc_left;
	switch_SAA3_lc_right;
}

spriteset(normal_SAA3_tunnel_overlay, "gfx/SAA3.png") {											// TUNNEL_OVERLAY
    tmpl_tunnel_overlay_type(0)
}
spriteset(snow_SAA3_tunnel_overlay, "gfx/SAA3.png") {
    tmpl_tunnel_overlay_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_SAA3_tunnel_overlay, terrain_type) {
    TILETYPE_SNOW: snow_SAA3_tunnel_overlay;
    normal_SAA3_tunnel_overlay;
}

spriteset(normal_SAA3_tunnel_1, "gfx/SAA3.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_SAA3_tunnel_1, "gfx/SAA3.png") {
    tmpl_tunnel_type(276)
}
spriteset(normal_SAA3_tunnel_0, "gfx/SAA3_1.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_SAA3_tunnel_0, "gfx/SAA3_1.png") {
    tmpl_tunnel_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_SAA3_tunnel_1, terrain_type) {
    TILETYPE_SNOW: snow_SAA3_tunnel_1;
    normal_SAA3_tunnel_1;
}
switch(FEAT_RAILTYPES, SELF, switch_SAA3_tunnel_0, terrain_type) {
    TILETYPE_SNOW: snow_SAA3_tunnel_0;
    normal_SAA3_tunnel_0;
}
switch(FEAT_RAILTYPES, SELF, switch_SAA3_tunnel, param_tunnel) {
	1: switch_SAA3_tunnel_1;
	switch_SAA3_tunnel_0;
}

spriteset(normal_SAA3_depots_1, "gfx/SAA3.png") {												//DEPOTS
    tmpl_depot(0)
}
spriteset(snow_SAA3_depots_1, "gfx/SAA3.png") {
    tmpl_depot(414)
}
spriteset(normal_SAA3_depots_2, "gfx/SAA3_1.png") {
    tmpl_depot(0)
}
spriteset(snow_SAA3_depots_2, "gfx/SAA3_1.png") {
    tmpl_depot(414)
}
switch(FEAT_RAILTYPES, SELF, switch_SAA3_depots_1, terrain_type) {
    TILETYPE_SNOW: snow_SAA3_depots_1;
    normal_SAA3_depots_1;
}
switch(FEAT_RAILTYPES, SELF, switch_SAA3_depots_2, terrain_type) {
    TILETYPE_SNOW: snow_SAA3_depots_2;
    normal_SAA3_depots_2;
}
switch(FEAT_RAILTYPES, SELF, switch_SAA3_depots, max(build_date - date(1959,1,1),0)) {
	0: switch_SAA3_depots_1;
	switch_SAA3_depots_2;
}

spriteset(fences_SAA3, "gfx/SAA3.png") {														//FENCES
	tmpl_fences(0)
}
spriteset(fences_SAA3_cc, "gfx/SAA3.png") {														//FENCES
	tmpl_fences(43)
}
switch(FEAT_RAILTYPES, SELF, switch_SAA3_fences, param_fences) {
    0: fences_empty;
	2: fences_empty;
	3: fences_SAA3;
	4: fences_SAA3_cc;
}

spriteset(gui_SAA3_UGUI, "gfx/SAA3.png") {														//GUI						
    tmpl_gui_UGUI()
}
spriteset(gui_SAA3_opengfx, "gfx/SAA3.png") {													//GUI
    tmpl_gui_gfx()
}
spriteset(gui_SAA3_ttd, "gfx/SAA3.png") {
    tmpl_gui_ttd()
}
switch (FEAT_RAILTYPES, SELF, switch_SAA3_gui, param_gui) {
    1: gui_SAA3_opengfx;
    2: gui_SAA3_UGUI;
	gui_SAA3_ttd;
}
//============================================================================
//					URBAN METRO LINE (SUA3)
//============================================================================
spriteset(switch_SUA3_overlay, "gfx/SUA3.png") {												// OVERLAY
    tmpl_overlay_type()
}

spriteset(normal_SUA3_precombined, "gfx/SUA3.png") {											// PRECOMBINED
    tmpl_precombined_type()
}
spriteset(snow_SUA3_precombined, "gfx/SUA3_1.png") {
    tmpl_precombined_type()
}
switch(FEAT_RAILTYPES, SELF, switch_SUA3_precombined, terrain_type) {
    TILETYPE_SNOW: snow_SUA3_precombined;
    normal_SUA3_precombined;
}

spriteset(normal_SUA3_underlay, "gfx/SUA3.png") {												// UNDERLAY
    tmpl_underlay_type(0)
}
spriteset(snow_SUA3_underlay, "gfx/SUA3.png") {
    tmpl_underlay_type(80)
}
switch(FEAT_RAILTYPES, SELF, switch_SUA3_underlay, terrain_type) {
    TILETYPE_SNOW: snow_SUA3_underlay;
    normal_SUA3_underlay;
}

spriteset(normal_SUA3_bridge, "gfx/SUA3.png") {													// BRIDGE
    tmpl_bridge_surfaces(0)
}
spriteset(snow_SUA3_bridge, "gfx/SUA3.png") {
    tmpl_bridge_surfaces(414)
}
switch(FEAT_RAILTYPES, SELF, switch_SUA3_bridge, terrain_type) {
    TILETYPE_SNOW: snow_SUA3_bridge;
    normal_SUA3_bridge;
}

spriteset(normal_SUA3_lc_right_townzone_edge_open, "gfx/SUA3.png") {							// LEVEL_CROSSING
    tmpl_level_crossings(0,0,0,0)
}
spriteset(normal_SUA3_lc_right_townzone_edge_closed, "gfx/SUA3.png") {
    tmpl_level_crossings(0,0,0,45)
}
spriteset(snow_SUA3_lc_right_townzone_edge_open, "gfx/SUA3.png") {
    tmpl_level_crossings(0,45,0,0)
}
spriteset(snow_SUA3_lc_right_townzone_edge_closed, "gfx/SUA3.png") {
    tmpl_level_crossings(0,45,0,45)
}
spriteset(normal_SUA3_lc_right_townzone_open, "gfx/SUA3.png") {
    tmpl_level_crossings(138,0,0,0)
}
spriteset(normal_SUA3_lc_right_townzone_closed, "gfx/SUA3.png") {
    tmpl_level_crossings(138,0,0,45)
}
spriteset(snow_SUA3_lc_right_townzone_open, "gfx/SUA3.png") {
    tmpl_level_crossings(138,45,0,0)
}
spriteset(snow_SUA3_lc_right_townzone_closed, "gfx/SUA3.png") {
    tmpl_level_crossings(138,45,0,45)
}
spriteset(normal_SUA3_lc_left_townzone_edge_open, "gfx/SUA3.png") {
    tmpl_level_crossings(0,0,276,0)
}
spriteset(normal_SUA3_lc_left_townzone_edge_closed, "gfx/SUA3.png") {
    tmpl_level_crossings(0,0,276,45)
}
spriteset(snow_SUA3_lc_left_townzone_edge_open, "gfx/SUA3.png") {
    tmpl_level_crossings(0,45,276,0)
}
spriteset(snow_SUA3_lc_left_townzone_edge_closed, "gfx/SUA3.png") {
    tmpl_level_crossings(0,45,276,45)
}
spriteset(normal_SUA3_lc_left_townzone_open, "gfx/SUA3.png") {
    tmpl_level_crossings(138,0,276,0)
}
spriteset(normal_SUA3_lc_left_townzone_closed, "gfx/SUA3.png") {
    tmpl_level_crossings(138,0,276,45)
}
spriteset(snow_SUA3_lc_left_townzone_open, "gfx/SUA3.png") {
    tmpl_level_crossings(138,45,276,0)
}
spriteset(snow_SUA3_lc_left_townzone_closed, "gfx/SUA3.png") {
    tmpl_level_crossings(138,45,276,45)
}
switch(FEAT_RAILTYPES, SELF, snow_SUA3_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_SUA3_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_SUA3_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_SUA3_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_SUA3_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_SUA3_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_SUA3_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_SUA3_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_SUA3_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_SUA3_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_SUA3_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_SUA3_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_SUA3_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_SUA3_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_SUA3_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_SUA3_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_SUA3_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_SUA3_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_SUA3_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_SUA3_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_SUA3_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_SUA3_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_SUA3_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_SUA3_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, switch_SUA3_lc_right_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_SUA3_lc_right_townzone_edge; 
	normal_SUA3_lc_right_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_SUA3_lc_right_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_SUA3_lc_right_townzone; 
	normal_SUA3_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SUA3_lc_left_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_SUA3_lc_left_townzone_edge; 
	normal_SUA3_lc_left_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_SUA3_lc_left_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_SUA3_lc_left_townzone; 
	normal_SUA3_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SUA3_lc_right, town_zone) {
	TOWNZONE_EDGE: switch_SUA3_lc_right_townzone_edge;
	switch_SUA3_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SUA3_lc_left, town_zone) {
	TOWNZONE_EDGE: switch_SUA3_lc_left_townzone_edge;
	switch_SUA3_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SUA3_level_crossings, traffic_side) {
	TRAFFIC_SIDE_LEFT: switch_SUA3_lc_left;
	switch_SUA3_lc_right;
}

spriteset(normal_SUA3_tunnel_overlay, "gfx/SUA3.png") {											// TUNNEL_OVERLAY
    tmpl_tunnel_overlay_type(0)
}
spriteset(snow_SUA3_tunnel_overlay, "gfx/SUA3.png") {
    tmpl_tunnel_overlay_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_SUA3_tunnel_overlay, terrain_type) {
    TILETYPE_SNOW: snow_SUA3_tunnel_overlay;
    normal_SUA3_tunnel_overlay;
}

spriteset(normal_SUA3_tunnel_1, "gfx/SUA3.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_SUA3_tunnel_1, "gfx/SUA3.png") {
    tmpl_tunnel_type(276)
}
spriteset(normal_SUA3_tunnel_0, "gfx/SUA3_1.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_SUA3_tunnel_0, "gfx/SUA3_1.png") {
    tmpl_tunnel_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_SUA3_tunnel_1, terrain_type) {
    TILETYPE_SNOW: snow_SUA3_tunnel_1;
    normal_SUA3_tunnel_1;
}
switch(FEAT_RAILTYPES, SELF, switch_SUA3_tunnel_0, terrain_type) {
    TILETYPE_SNOW: snow_SUA3_tunnel_0;
    normal_SUA3_tunnel_0;
}
switch(FEAT_RAILTYPES, SELF, switch_SUA3_tunnel, param_tunnel) {
	1: switch_SUA3_tunnel_1;
	switch_SUA3_tunnel_0;
}

spriteset(normal_SUA3_depots, "gfx/SUA3.png") {													//DEPOTS
    tmpl_depot(0)
}
spriteset(snow_SUA3_depots, "gfx/SUA3.png") {
    tmpl_depot(414)
}
switch(FEAT_RAILTYPES, SELF, switch_SUA3_depots, terrain_type) {
    TILETYPE_SNOW: snow_SUA3_depots;
    normal_SUA3_depots;
}

spriteset(fences_SUA3, "gfx/SUA3.png") {														//FENCES
	tmpl_fences(0)
}
spriteset(fences_SUA3_cc, "gfx/SUA3.png") {														//FENCES
	tmpl_fences(43)
}
switch(FEAT_RAILTYPES, SELF, switch_SUA3_fences, param_fences) {
    0: fences_empty;
	2: fences_SUA3;
	3: fences_SUA3;
	4: fences_SUA3_cc;
}

spriteset(gui_SUA3_UGUI, "gfx/SUA3.png") {														//GUI						
    tmpl_gui_UGUI()
}
spriteset(gui_SUA3_opengfx, "gfx/SUA3.png") {													//GUI
    tmpl_gui_gfx()
}
spriteset(gui_SUA3_ttd, "gfx/SUA3.png") {
    tmpl_gui_ttd()
}
switch (FEAT_RAILTYPES, SELF, switch_SUA3_gui, param_gui) {
    1: gui_SUA3_opengfx;
    2: gui_SUA3_UGUI;
	gui_SUA3_ttd;
}
//============================================================================
//						IMPROVE METRO LINE (SBA3)
//============================================================================
spriteset(switch_SBA3_overlay, "gfx/SBA3.png") {												// OVERLAY
    tmpl_overlay_type()
}

spriteset(normal_SBA3_precombined, "gfx/SBA3.png") {											// PRECOMBINED
    tmpl_precombined_type()
}
spriteset(snow_SBA3_precombined, "gfx/SBA3_1.png") {
    tmpl_precombined_type()
}
switch(FEAT_RAILTYPES, SELF, switch_SBA3_precombined, terrain_type) {
    TILETYPE_SNOW: snow_SBA3_precombined;
    normal_SBA3_precombined;
}

spriteset(normal_SBA3_underlay, "gfx/SBA3.png") {												// UNDERLAY
    tmpl_underlay_type(0)
}
spriteset(snow_SBA3_underlay, "gfx/SBA3.png") {
    tmpl_underlay_type(80)
}
switch(FEAT_RAILTYPES, SELF, switch_SBA3_underlay, terrain_type) {
    TILETYPE_SNOW: snow_SBA3_underlay;
    normal_SBA3_underlay;
}

spriteset(normal_SBA3_bridge, "gfx/SBA3.png") {													// BRIDGE
    tmpl_bridge_surfaces(0)
}
spriteset(snow_SBA3_bridge, "gfx/SBA3.png") {
    tmpl_bridge_surfaces(414)
}
switch(FEAT_RAILTYPES, SELF, switch_SBA3_bridge, terrain_type) {
    TILETYPE_SNOW: snow_SBA3_bridge;
    normal_SBA3_bridge;
}

spriteset(normal_SBA3_lc_right_townzone_edge_open, "gfx/SBA3.png") {							// LEVEL_CROSSING
    tmpl_level_crossings(0,0,0,0)
}
spriteset(normal_SBA3_lc_right_townzone_edge_closed, "gfx/SBA3.png") {
    tmpl_level_crossings(0,0,0,45)
}
spriteset(snow_SBA3_lc_right_townzone_edge_open, "gfx/SBA3.png") {
    tmpl_level_crossings(0,45,0,0)
}
spriteset(snow_SBA3_lc_right_townzone_edge_closed, "gfx/SBA3.png") {
    tmpl_level_crossings(0,45,0,45)
}
spriteset(normal_SBA3_lc_right_townzone_open, "gfx/SBA3.png") {
    tmpl_level_crossings(138,0,0,0)
}
spriteset(normal_SBA3_lc_right_townzone_closed, "gfx/SBA3.png") {
    tmpl_level_crossings(138,0,0,45)
}
spriteset(snow_SBA3_lc_right_townzone_open, "gfx/SBA3.png") {
    tmpl_level_crossings(138,45,0,0)
}
spriteset(snow_SBA3_lc_right_townzone_closed, "gfx/SBA3.png") {
    tmpl_level_crossings(138,45,0,45)
}
spriteset(normal_SBA3_lc_left_townzone_edge_open, "gfx/SBA3.png") {
    tmpl_level_crossings(0,0,276,0)
}
spriteset(normal_SBA3_lc_left_townzone_edge_closed, "gfx/SBA3.png") {
    tmpl_level_crossings(0,0,276,45)
}
spriteset(snow_SBA3_lc_left_townzone_edge_open, "gfx/SBA3.png") {
    tmpl_level_crossings(0,45,276,0)
}
spriteset(snow_SBA3_lc_left_townzone_edge_closed, "gfx/SBA3.png") {
    tmpl_level_crossings(0,45,276,45)
}
spriteset(normal_SBA3_lc_left_townzone_open, "gfx/SBA3.png") {
    tmpl_level_crossings(138,0,276,0)
}
spriteset(normal_SBA3_lc_left_townzone_closed, "gfx/SBA3.png") {
    tmpl_level_crossings(138,0,276,45)
}
spriteset(snow_SBA3_lc_left_townzone_open, "gfx/SBA3.png") {
    tmpl_level_crossings(138,45,276,0)
}
spriteset(snow_SBA3_lc_left_townzone_closed, "gfx/SBA3.png") {
    tmpl_level_crossings(138,45,276,45)
}
switch(FEAT_RAILTYPES, SELF, snow_SBA3_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_SBA3_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_SBA3_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_SBA3_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_SBA3_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_SBA3_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_SBA3_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_SBA3_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_SBA3_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_SBA3_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_SBA3_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_SBA3_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_SBA3_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_SBA3_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_SBA3_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_SBA3_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_SBA3_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_SBA3_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_SBA3_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_SBA3_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_SBA3_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_SBA3_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_SBA3_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_SBA3_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, switch_SBA3_lc_right_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_SBA3_lc_right_townzone_edge; 
	normal_SBA3_lc_right_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_SBA3_lc_right_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_SBA3_lc_right_townzone; 
	normal_SBA3_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SBA3_lc_left_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_SBA3_lc_left_townzone_edge; 
	normal_SBA3_lc_left_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_SBA3_lc_left_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_SBA3_lc_left_townzone; 
	normal_SBA3_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SBA3_lc_right, town_zone) {
	TOWNZONE_EDGE: switch_SBA3_lc_right_townzone_edge;
	switch_SBA3_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SBA3_lc_left, town_zone) {
	TOWNZONE_EDGE: switch_SBA3_lc_left_townzone_edge;
	switch_SBA3_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_SBA3_level_crossings, traffic_side) {
	TRAFFIC_SIDE_LEFT: switch_SBA3_lc_left;
	switch_SBA3_lc_right;
}

spriteset(normal_SBA3_tunnel_overlay, "gfx/SBA3.png") {											// TUNNEL_OVERLAY
    tmpl_tunnel_overlay_type(0)
}
spriteset(snow_SBA3_tunnel_overlay, "gfx/SBA3.png") {
    tmpl_tunnel_overlay_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_SBA3_tunnel_overlay, terrain_type) {
    TILETYPE_SNOW: snow_SBA3_tunnel_overlay;
    normal_SBA3_tunnel_overlay;
}

spriteset(normal_SBA3_tunnel_1, "gfx/SBA3.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_SBA3_tunnel_1, "gfx/SBA3.png") {
    tmpl_tunnel_type(276)
}
spriteset(normal_SBA3_tunnel_0, "gfx/SBA3_1.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_SBA3_tunnel_0, "gfx/SBA3_1.png") {
    tmpl_tunnel_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_SBA3_tunnel_1, terrain_type) {
    TILETYPE_SNOW: snow_SBA3_tunnel_1;
    normal_SBA3_tunnel_1;
}
switch(FEAT_RAILTYPES, SELF, switch_SBA3_tunnel_0, terrain_type) {
    TILETYPE_SNOW: snow_SBA3_tunnel_0;
    normal_SBA3_tunnel_0;
}
switch(FEAT_RAILTYPES, SELF, switch_SBA3_tunnel, param_tunnel) {
	1: switch_SBA3_tunnel_1;
	switch_SBA3_tunnel_0;
}

spriteset(fences_SBA3, "gfx/SBA3.png") {														//FENCES
	tmpl_fences(0)
}
spriteset(fences_SBA3_cc, "gfx/SBA3.png") {														//FENCES
	tmpl_fences(43)
}
switch(FEAT_RAILTYPES, SELF, switch_SBA3_fences, param_fences) {
    0: fences_empty;
	2: fences_empty;
	3: fences_SBA3;
	4: fences_SBA3_cc;
}
//============================================================================
//					IMPROVED METRO LINE (SBAZ)
//============================================================================ 
spriteset(normal_SBAZ_depots, "gfx/SBAZ.png") {
    tmpl_depot(0)
}
spriteset(snow_SBAZ_depots, "gfx/SBAZ.png") {
    tmpl_depot(414)
}
switch(FEAT_RAILTYPES, SELF, switch_SBAZ_depots, terrain_type) {								//DEPOTS
    TILETYPE_SNOW: snow_SBAZ_depots;
    normal_SBAZ_depots;
}

spriteset(gui_SBAZ_UGUI, "gfx/SBAZ.png") {														//GUI						
    tmpl_gui_UGUI()
}
spriteset(gui_SBAZ_opengfx, "gfx/SBAZ.png") {													//GUI
    tmpl_gui_gfx()
}
spriteset(gui_SBAZ_ttd, "gfx/SBAZ.png") {
    tmpl_gui_ttd()
}
switch (FEAT_RAILTYPES, SELF, switch_SBAZ_gui, param_gui) {
    1: gui_SBAZ_opengfx;
    2: gui_SBAZ_UGUI;
	gui_SBAZ_ttd;
}
//============================================================================
//					URBAN METRO LINE (SUAZ)
//============================================================================ 
spriteset(normal_SUAZ_depots, "gfx/SUAZ.png") {
    tmpl_depot(0)
}
spriteset(snow_SUAZ_depots, "gfx/SUAZ.png") {
    tmpl_depot(414)
}
switch(FEAT_RAILTYPES, SELF, switch_SUAZ_depots, terrain_type) {								//DEPOTS
    TILETYPE_SNOW: snow_SUAZ_depots;
    normal_SUAZ_depots;
}

spriteset(gui_SUAZ_UGUI, "gfx/SUAZ.png") {														//GUI						
    tmpl_gui_UGUI()
}
spriteset(gui_SUAZ_opengfx, "gfx/SUAZ.png") {													//GUI
    tmpl_gui_gfx()
}
spriteset(gui_SUAZ_ttd, "gfx/SUAZ.png") {
    tmpl_gui_ttd()
}
switch (FEAT_RAILTYPES, SELF, switch_SUAZ_gui, param_gui) {
    1: gui_SUAZ_opengfx;
    2: gui_SUAZ_UGUI;
	gui_SUAZ_ttd;
}
//============================================================================
//						STANDAR + NARROW GAUGE LINE (dAAN)
//============================================================================ 
spriteset(switch_dAAN_overlay, "gfx/dAAN.png") {												// OVERLAY
    tmpl_overlay_type()
}

spriteset(normal_dAAN_precombined, "gfx/dAAN.png") {											// PRECOMBINED
    tmpl_precombined_type()
}
spriteset(snow_dAAN_precombined, "gfx/dAAN_1.png") {
    tmpl_precombined_type()
}
switch(FEAT_RAILTYPES, SELF, switch_dAAN_precombined, terrain_type) {
    TILETYPE_SNOW: snow_dAAN_precombined;
    normal_dAAN_precombined;
}

spriteset(normal_dAAN_underlay, "gfx/dAAN.png") {												// UNDERLAY
    tmpl_underlay_type(0)
}
spriteset(snow_dAAN_underlay, "gfx/dAAN.png") {
    tmpl_underlay_type(80)
}
switch(FEAT_RAILTYPES, SELF, switch_dAAN_underlay, terrain_type) {
    TILETYPE_SNOW: snow_dAAN_underlay;
    normal_dAAN_underlay;
}

spriteset(normal_dAAN_bridge, "gfx/dAAN.png") {													// BRIDGE
    tmpl_bridge_surfaces(0)
}
spriteset(snow_dAAN_bridge, "gfx/dAAN.png") {
    tmpl_bridge_surfaces(414)
}
switch(FEAT_RAILTYPES, SELF, switch_dAAN_bridge, terrain_type) {
    TILETYPE_SNOW: snow_dAAN_bridge;
    normal_dAAN_bridge;
}

spriteset(normal_dAAN_lc_right_townzone_edge_open, "gfx/dAAN.png") {							// LEVEL_CROSSING
    tmpl_level_crossings(0,0,0,0)
}
spriteset(normal_dAAN_lc_right_townzone_edge_closed, "gfx/dAAN.png") {
    tmpl_level_crossings(0,0,0,45)
}
spriteset(snow_dAAN_lc_right_townzone_edge_open, "gfx/dAAN.png") {
    tmpl_level_crossings(0,45,0,0)
}
spriteset(snow_dAAN_lc_right_townzone_edge_closed, "gfx/dAAN.png") {
    tmpl_level_crossings(0,45,0,45)
}
spriteset(normal_dAAN_lc_right_townzone_open, "gfx/dAAN.png") {
    tmpl_level_crossings(138,0,0,0)
}
spriteset(normal_dAAN_lc_right_townzone_closed, "gfx/dAAN.png") {
    tmpl_level_crossings(138,0,0,45)
}
spriteset(snow_dAAN_lc_right_townzone_open, "gfx/dAAN.png") {
    tmpl_level_crossings(138,45,0,0)
}
spriteset(snow_dAAN_lc_right_townzone_closed, "gfx/dAAN.png") {
    tmpl_level_crossings(138,45,0,45)
}
spriteset(normal_dAAN_lc_left_townzone_edge_open, "gfx/dAAN.png") {
    tmpl_level_crossings(0,0,276,0)
}
spriteset(normal_dAAN_lc_left_townzone_edge_closed, "gfx/dAAN.png") {
    tmpl_level_crossings(0,0,276,45)
}
spriteset(snow_dAAN_lc_left_townzone_edge_open, "gfx/dAAN.png") {
    tmpl_level_crossings(0,45,276,0)
}
spriteset(snow_dAAN_lc_left_townzone_edge_closed, "gfx/dAAN.png") {
    tmpl_level_crossings(0,45,276,45)
}
spriteset(normal_dAAN_lc_left_townzone_open, "gfx/dAAN.png") {
    tmpl_level_crossings(138,0,276,0)
}
spriteset(normal_dAAN_lc_left_townzone_closed, "gfx/dAAN.png") {
    tmpl_level_crossings(138,0,276,45)
}
spriteset(snow_dAAN_lc_left_townzone_open, "gfx/dAAN.png") {
    tmpl_level_crossings(138,45,276,0)
}
spriteset(snow_dAAN_lc_left_townzone_closed, "gfx/dAAN.png") {
    tmpl_level_crossings(138,45,276,45)
}
switch(FEAT_RAILTYPES, SELF, snow_dAAN_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_dAAN_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_dAAN_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_dAAN_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_dAAN_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_dAAN_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_dAAN_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_dAAN_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_dAAN_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_dAAN_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_dAAN_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_dAAN_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_dAAN_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_dAAN_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_dAAN_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_dAAN_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_dAAN_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_dAAN_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_dAAN_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_dAAN_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_dAAN_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_dAAN_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_dAAN_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_dAAN_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, switch_dAAN_lc_right_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_dAAN_lc_right_townzone_edge; 
	normal_dAAN_lc_right_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_dAAN_lc_right_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_dAAN_lc_right_townzone; 
	normal_dAAN_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_dAAN_lc_left_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_dAAN_lc_left_townzone_edge; 
	normal_dAAN_lc_left_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_dAAN_lc_left_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_dAAN_lc_left_townzone; 
	normal_dAAN_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_dAAN_lc_right, town_zone) {
	TOWNZONE_EDGE: switch_dAAN_lc_right_townzone_edge;
	switch_dAAN_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_dAAN_lc_left, town_zone) {
	TOWNZONE_EDGE: switch_dAAN_lc_left_townzone_edge;
	switch_dAAN_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_dAAN_level_crossings, traffic_side) {
	TRAFFIC_SIDE_LEFT: switch_dAAN_lc_left;
	switch_dAAN_lc_right;
}

spriteset(normal_dAAN_tunnel_overlay, "gfx/dAAN.png") {											// TUNNEL_OVERLAY
    tmpl_tunnel_overlay_type(0)
}
spriteset(snow_dAAN_tunnel_overlay, "gfx/dAAN.png") {
    tmpl_tunnel_overlay_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_dAAN_tunnel_overlay, terrain_type) {
    TILETYPE_SNOW: snow_dAAN_tunnel_overlay;
    normal_dAAN_tunnel_overlay;
}

spriteset(normal_dAAN_tunnel_1, "gfx/dAAN.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_dAAN_tunnel_1, "gfx/dAAN.png") {
    tmpl_tunnel_type(276)
}
spriteset(normal_dAAN_tunnel_0, "gfx/dAAN_1.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_dAAN_tunnel_0, "gfx/dAAN_1.png") {
    tmpl_tunnel_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_dAAN_tunnel_1, terrain_type) {
    TILETYPE_SNOW: snow_dAAN_tunnel_1;
    normal_dAAN_tunnel_1;
}
switch(FEAT_RAILTYPES, SELF, switch_dAAN_tunnel_0, terrain_type) {
    TILETYPE_SNOW: snow_dAAN_tunnel_0;
    normal_dAAN_tunnel_0;
}
switch(FEAT_RAILTYPES, SELF, switch_dAAN_tunnel, param_tunnel) {
	1: switch_dAAN_tunnel_1;
	switch_dAAN_tunnel_0;
}

spriteset(normal_dAAN_depots, "gfx/dAAN.png") {													//DEPOTS
    tmpl_depot(0)
}
spriteset(snow_dAAN_depots, "gfx/dAAN.png") {
    tmpl_depot(414)
}
switch(FEAT_RAILTYPES, SELF, switch_dAAN_depots, terrain_type) {
    TILETYPE_SNOW: snow_dAAN_depots;
    normal_dAAN_depots;
}

spriteset(fences_dAAN, "gfx/dAAN.png") {														//FENCES
	tmpl_fences(0)
}
spriteset(fences_dAAN_cc, "gfx/dAAN.png") {														//FENCES
	tmpl_fences(43)
}
switch(FEAT_RAILTYPES, SELF, switch_dAAN_fences, param_fences) {
    0: fences_empty;
	2: fences_empty;
	3: fences_dAAN;
	4: fences_dAAN_cc;
}

spriteset(gui_dAAN_UGUI, "gfx/dAAN.png") {														//GUI						
    tmpl_gui_UGUI()
}
spriteset(gui_dAAN_opengfx, "gfx/dAAN.png") {													//GUI
    tmpl_gui_gfx()
}
spriteset(gui_dAAN_ttd, "gfx/dAAN.png") {
    tmpl_gui_ttd()
}
switch (FEAT_RAILTYPES, SELF, switch_dAAN_gui, param_gui) {
    1: gui_dAAN_opengfx;
    2: gui_dAAN_UGUI;
	gui_dAAN_ttd;
}
//============================================================================
//						STANDAR + NARROW GAUGE LINE (dBAN)
//============================================================================ 
spriteset(switch_dBAN_overlay, "gfx/dBAN.png") {												// OVERLAY
    tmpl_overlay_type()
}

spriteset(normal_dBAN_precombined, "gfx/dBAN.png") {											// PRECOMBINED
    tmpl_precombined_type()
}
spriteset(snow_dBAN_precombined, "gfx/dBAE.png") {
    tmpl_precombined_type()
}
switch(FEAT_RAILTYPES, SELF, switch_dBAN_precombined, terrain_type) {
    TILETYPE_SNOW: snow_dBAN_precombined;
    normal_dBAN_precombined;
}

spriteset(normal_dBAN_underlay, "gfx/dBAN.png") {												// UNDERLAY
    tmpl_underlay_type(0)
}
spriteset(snow_dBAN_underlay, "gfx/dBAN.png") {
    tmpl_underlay_type(80)
}
switch(FEAT_RAILTYPES, SELF, switch_dBAN_underlay, terrain_type) {
    TILETYPE_SNOW: snow_dBAN_underlay;
    normal_dBAN_underlay;
}

spriteset(normal_dBAN_bridge, "gfx/dBAN.png") {													// BRIDGE
    tmpl_bridge_surfaces(0)
}
spriteset(snow_dBAN_bridge, "gfx/dBAN.png") {
    tmpl_bridge_surfaces(414)
}
switch(FEAT_RAILTYPES, SELF, switch_dBAN_bridge, terrain_type) {
    TILETYPE_SNOW: snow_dBAN_bridge;
    normal_dBAN_bridge;
}

spriteset(normal_dBAN_lc_right_townzone_edge_open, "gfx/dBAN.png") {							// LEVEL_CROSSING
    tmpl_level_crossings(0,0,0,0)
}
spriteset(normal_dBAN_lc_right_townzone_edge_closed, "gfx/dBAN.png") {
    tmpl_level_crossings(0,0,0,45)
}
spriteset(snow_dBAN_lc_right_townzone_edge_open, "gfx/dBAN.png") {
    tmpl_level_crossings(0,45,0,0)
}
spriteset(snow_dBAN_lc_right_townzone_edge_closed, "gfx/dBAN.png") {
    tmpl_level_crossings(0,45,0,45)
}
spriteset(normal_dBAN_lc_right_townzone_open, "gfx/dBAN.png") {
    tmpl_level_crossings(138,0,0,0)
}
spriteset(normal_dBAN_lc_right_townzone_closed, "gfx/dBAN.png") {
    tmpl_level_crossings(138,0,0,45)
}
spriteset(snow_dBAN_lc_right_townzone_open, "gfx/dBAN.png") {
    tmpl_level_crossings(138,45,0,0)
}
spriteset(snow_dBAN_lc_right_townzone_closed, "gfx/dBAN.png") {
    tmpl_level_crossings(138,45,0,45)
}
spriteset(normal_dBAN_lc_left_townzone_edge_open, "gfx/dBAN.png") {
    tmpl_level_crossings(0,0,276,0)
}
spriteset(normal_dBAN_lc_left_townzone_edge_closed, "gfx/dBAN.png") {
    tmpl_level_crossings(0,0,276,45)
}
spriteset(snow_dBAN_lc_left_townzone_edge_open, "gfx/dBAN.png") {
    tmpl_level_crossings(0,45,276,0)
}
spriteset(snow_dBAN_lc_left_townzone_edge_closed, "gfx/dBAN.png") {
    tmpl_level_crossings(0,45,276,45)
}
spriteset(normal_dBAN_lc_left_townzone_open, "gfx/dBAN.png") {
    tmpl_level_crossings(138,0,276,0)
}
spriteset(normal_dBAN_lc_left_townzone_closed, "gfx/dBAN.png") {
    tmpl_level_crossings(138,0,276,45)
}
spriteset(snow_dBAN_lc_left_townzone_open, "gfx/dBAN.png") {
    tmpl_level_crossings(138,45,276,0)
}
spriteset(snow_dBAN_lc_left_townzone_closed, "gfx/dBAN.png") {
    tmpl_level_crossings(138,45,276,45)
}
switch(FEAT_RAILTYPES, SELF, snow_dBAN_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_dBAN_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_dBAN_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_dBAN_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_dBAN_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_dBAN_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_dBAN_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_dBAN_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_dBAN_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_dBAN_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_dBAN_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_dBAN_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_dBAN_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_dBAN_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_dBAN_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_dBAN_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_dBAN_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_dBAN_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_dBAN_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_dBAN_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_dBAN_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_dBAN_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_dBAN_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_dBAN_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, switch_dBAN_lc_right_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_dBAN_lc_right_townzone_edge; 
	normal_dBAN_lc_right_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_dBAN_lc_right_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_dBAN_lc_right_townzone; 
	normal_dBAN_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_dBAN_lc_left_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_dBAN_lc_left_townzone_edge; 
	normal_dBAN_lc_left_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_dBAN_lc_left_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_dBAN_lc_left_townzone; 
	normal_dBAN_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_dBAN_lc_right, town_zone) {
	TOWNZONE_EDGE: switch_dBAN_lc_right_townzone_edge;
	switch_dBAN_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_dBAN_lc_left, town_zone) {
	TOWNZONE_EDGE: switch_dBAN_lc_left_townzone_edge;
	switch_dBAN_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_dBAN_level_crossings, traffic_side) {
	TRAFFIC_SIDE_LEFT: switch_dBAN_lc_left;
	switch_dBAN_lc_right;
}

spriteset(normal_dBAN_tunnel_overlay, "gfx/dBAN.png") {											// TUNNEL_OVERLAY
    tmpl_tunnel_overlay_type(0)
}
spriteset(snow_dBAN_tunnel_overlay, "gfx/dBAN.png") {
    tmpl_tunnel_overlay_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_dBAN_tunnel_overlay, terrain_type) {
    TILETYPE_SNOW: snow_dBAN_tunnel_overlay;
    normal_dBAN_tunnel_overlay;
}

spriteset(normal_dBAN_tunnel_1, "gfx/dBAN.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_dBAN_tunnel_1, "gfx/dBAN.png") {
    tmpl_tunnel_type(276)
}
spriteset(normal_dBAN_tunnel_0, "gfx/dBAE.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_dBAN_tunnel_0, "gfx/dBAE.png") {
    tmpl_tunnel_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_dBAN_tunnel_1, terrain_type) {
    TILETYPE_SNOW: snow_dBAN_tunnel_1;
    normal_dBAN_tunnel_1;
}
switch(FEAT_RAILTYPES, SELF, switch_dBAN_tunnel_0, terrain_type) {
    TILETYPE_SNOW: snow_dBAN_tunnel_0;
    normal_dBAN_tunnel_0;
}
switch(FEAT_RAILTYPES, SELF, switch_dBAN_tunnel, param_tunnel) {
	1: switch_dBAN_tunnel_1;
	switch_dBAN_tunnel_0;
}

spriteset(fences_dBAN, "gfx/dBAN.png") {												//FENCES
	tmpl_fences(0)
}
spriteset(fences_dBAN_cc, "gfx/dBAN.png") {												//FENCES
	tmpl_fences(43)
}
switch(FEAT_RAILTYPES, SELF, switch_dBAN_fences, param_fences) {
    0: fences_empty;
	2: fences_empty;
	3: fences_dBAN;
	4: fences_dBAN_cc;
}
//============================================================================
//						NORMAL + NARROW GAUGE LINE (ELECTRIFIED) (dBAE)
//============================================================================
spriteset(normal_dBAE_depots, "gfx/dBAE.png") {													//DEPOTS
    tmpl_depot(0)
}
spriteset(snow_dBAE_depots, "gfx/dBAE.png") {
    tmpl_depot(414)
}
switch(FEAT_RAILTYPES, SELF, switch_dBAE_depots, terrain_type) {
    TILETYPE_SNOW: snow_dBAE_depots;
    normal_dBAE_depots;
}

spriteset(gui_dBAE_UGUI, "gfx/dBAE.png") {														//GUI						
    tmpl_gui_UGUI()
}
spriteset(gui_dBAE_opengfx, "gfx/dBAE.png") {													//GUI
    tmpl_gui_gfx()
}
spriteset(gui_dBAE_ttd, "gfx/dBAE.png") {
    tmpl_gui_ttd()
}
switch (FEAT_RAILTYPES, SELF, switch_dBAE_gui, param_gui) {
    1: gui_dBAE_opengfx;
    2: gui_dBAE_UGUI;
	gui_dBAE_ttd;
}
//============================================================================
//						IMPROVED NARROW LINE (NBAN)
//============================================================================
spriteset(switch_NBAN_overlay, "gfx/NBAN.png") {												// OVERLAY
    tmpl_overlay_type()
}

spriteset(normal_NBAN_precombined, "gfx/NBAN.png") {											// PRECOMBINED
    tmpl_precombined_type()
}
spriteset(snow_NBAN_precombined, "gfx/NBAE.png") {
    tmpl_precombined_type()
}
switch(FEAT_RAILTYPES, SELF, switch_NBAN_precombined, terrain_type) {
    TILETYPE_SNOW: snow_NBAN_precombined;
    normal_NBAN_precombined;
}

spriteset(normal_NBAN_underlay, "gfx/NBAN.png") {												// UNDERLAY
    tmpl_underlay_type(0)
}
spriteset(snow_NBAN_underlay, "gfx/NBAN.png") {
    tmpl_underlay_type(80)
}
switch(FEAT_RAILTYPES, SELF, switch_NBAN_underlay, terrain_type) {
    TILETYPE_SNOW: snow_NBAN_underlay;
    normal_NBAN_underlay;
}

spriteset(normal_NBAN_bridge, "gfx/NBAN.png") {													// BRIDGE
    tmpl_bridge_surfaces(0)
}
spriteset(snow_NBAN_bridge, "gfx/NBAN.png") {
    tmpl_bridge_surfaces(414)
}
switch(FEAT_RAILTYPES, SELF, switch_NBAN_bridge, terrain_type) {
    TILETYPE_SNOW: snow_NBAN_bridge;
    normal_NBAN_bridge;
}

spriteset(normal_NBAN_lc_right_townzone_edge_open, "gfx/NBAN.png") {							// LEVEL_CROSSING
    tmpl_level_crossings(0,0,0,0)
}
spriteset(normal_NBAN_lc_right_townzone_edge_closed, "gfx/NBAN.png") {
    tmpl_level_crossings(0,0,0,45)
}
spriteset(snow_NBAN_lc_right_townzone_edge_open, "gfx/NBAN.png") {
    tmpl_level_crossings(0,45,0,0)
}
spriteset(snow_NBAN_lc_right_townzone_edge_closed, "gfx/NBAN.png") {
    tmpl_level_crossings(0,45,0,45)
}
spriteset(normal_NBAN_lc_right_townzone_open, "gfx/NBAN.png") {
    tmpl_level_crossings(138,0,0,0)
}
spriteset(normal_NBAN_lc_right_townzone_closed, "gfx/NBAN.png") {
    tmpl_level_crossings(138,0,0,45)
}
spriteset(snow_NBAN_lc_right_townzone_open, "gfx/NBAN.png") {
    tmpl_level_crossings(138,45,0,0)
}
spriteset(snow_NBAN_lc_right_townzone_closed, "gfx/NBAN.png") {
    tmpl_level_crossings(138,45,0,45)
}
spriteset(normal_NBAN_lc_left_townzone_edge_open, "gfx/NBAN.png") {
    tmpl_level_crossings(0,0,276,0)
}
spriteset(normal_NBAN_lc_left_townzone_edge_closed, "gfx/NBAN.png") {
    tmpl_level_crossings(0,0,276,45)
}
spriteset(snow_NBAN_lc_left_townzone_edge_open, "gfx/NBAN.png") {
    tmpl_level_crossings(0,45,276,0)
}
spriteset(snow_NBAN_lc_left_townzone_edge_closed, "gfx/NBAN.png") {
    tmpl_level_crossings(0,45,276,45)
}
spriteset(normal_NBAN_lc_left_townzone_open, "gfx/NBAN.png") {
    tmpl_level_crossings(138,0,276,0)
}
spriteset(normal_NBAN_lc_left_townzone_closed, "gfx/NBAN.png") {
    tmpl_level_crossings(138,0,276,45)
}
spriteset(snow_NBAN_lc_left_townzone_open, "gfx/NBAN.png") {
    tmpl_level_crossings(138,45,276,0)
}
spriteset(snow_NBAN_lc_left_townzone_closed, "gfx/NBAN.png") {
    tmpl_level_crossings(138,45,276,45)
}
switch(FEAT_RAILTYPES, SELF, snow_NBAN_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_NBAN_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_NBAN_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_NBAN_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_NBAN_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_NBAN_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_NBAN_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_NBAN_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_NBAN_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_NBAN_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_NBAN_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_NBAN_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_NBAN_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_NBAN_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_NBAN_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_NBAN_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_NBAN_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_NBAN_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_NBAN_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_NBAN_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_NBAN_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_NBAN_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_NBAN_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_NBAN_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, switch_NBAN_lc_right_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_NBAN_lc_right_townzone_edge; 
	normal_NBAN_lc_right_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_NBAN_lc_right_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_NBAN_lc_right_townzone; 
	normal_NBAN_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_NBAN_lc_left_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_NBAN_lc_left_townzone_edge; 
	normal_NBAN_lc_left_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_NBAN_lc_left_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_NBAN_lc_left_townzone; 
	normal_NBAN_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_NBAN_lc_right, town_zone) {
	TOWNZONE_EDGE: switch_NBAN_lc_right_townzone_edge;
	switch_NBAN_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_NBAN_lc_left, town_zone) {
	TOWNZONE_EDGE: switch_NBAN_lc_left_townzone_edge;
	switch_NBAN_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_NBAN_level_crossings, traffic_side) {
	TRAFFIC_SIDE_LEFT: switch_NBAN_lc_left;
	switch_NBAN_lc_right;
}

spriteset(normal_NBAN_tunnel_overlay, "gfx/NBAN.png") {											// TUNNEL_OVERLAY
    tmpl_tunnel_overlay_type(0)
}
spriteset(snow_NBAN_tunnel_overlay, "gfx/NBAN.png") {
    tmpl_tunnel_overlay_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_NBAN_tunnel_overlay, terrain_type) {
    TILETYPE_SNOW: snow_NBAN_tunnel_overlay;
    normal_NBAN_tunnel_overlay;
}

spriteset(normal_NBAN_tunnel_1, "gfx/NBAN.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_NBAN_tunnel_1, "gfx/NBAN.png") {
    tmpl_tunnel_type(276)
}
spriteset(normal_NBAN_tunnel_0, "gfx/NBAE.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_NBAN_tunnel_0, "gfx/NBAE.png") {
    tmpl_tunnel_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_NBAN_tunnel_1, terrain_type) {
    TILETYPE_SNOW: snow_NBAN_tunnel_1;
    normal_NBAN_tunnel_1;
}
switch(FEAT_RAILTYPES, SELF, switch_NBAN_tunnel_0, terrain_type) {
    TILETYPE_SNOW: snow_NBAN_tunnel_0;
    normal_NBAN_tunnel_0;
}
switch(FEAT_RAILTYPES, SELF, switch_NBAN_tunnel, param_tunnel) {
	1: switch_NBAN_tunnel_1;
	switch_NBAN_tunnel_0;
}

spriteset(normal_NBAN_depots, "gfx/NBAN.png") {													//DEPOTS
    tmpl_depot(0)
}
spriteset(snow_NBAN_depots, "gfx/NBAN.png") {
    tmpl_depot(414)
}
switch(FEAT_RAILTYPES, SELF, switch_NBAN_depots, terrain_type) {
    TILETYPE_SNOW: snow_NBAN_depots;
    normal_NBAN_depots;
}

spriteset(fences_NBAN, "gfx/NBAN.png") {														//FENCES
	tmpl_fences(0)
}
spriteset(fences_NBAN_cc, "gfx/NBAN.png") {														//FENCES
	tmpl_fences(43)
}
switch(FEAT_RAILTYPES, SELF, switch_NBAN_fences, param_fences) {
    0: fences_empty;
	2: fences_empty;
	3: fences_NBAN;
	4: fences_NBAN_cc;
}

spriteset(gui_NBAN_UGUI, "gfx/NBAN.png") {														//GUI						
    tmpl_gui_UGUI()
}
spriteset(gui_NBAN_opengfx, "gfx/NBAN.png") {													//GUI
    tmpl_gui_gfx()
}
spriteset(gui_NBAN_ttd, "gfx/NBAN.png") {
    tmpl_gui_ttd()
}
switch (FEAT_RAILTYPES, SELF, switch_NBAN_gui, param_gui) {
    1: gui_NBAN_opengfx;
    2: gui_NBAN_UGUI;
	gui_NBAN_ttd;
}
//============================================================================
//						MODERN NARROW GAUGE LINE (NCAN)
//============================================================================
spriteset(switch_NCAN_overlay, "gfx/NCAN.png") {												// OVERLAY
    tmpl_overlay_type()
}

spriteset(normal_NCAN_precombined, "gfx/NCAN.png") {											// PRECOMBINED
    tmpl_precombined_type()
}
spriteset(snow_NCAN_precombined, "gfx/NCAE.png") {
    tmpl_precombined_type()
}
switch(FEAT_RAILTYPES, SELF, switch_NCAN_precombined, terrain_type) {
    TILETYPE_SNOW: snow_NCAN_precombined;
    normal_NCAN_precombined;
}

spriteset(normal_NCAN_underlay, "gfx/NCAN.png") {												// UNDERLAY
    tmpl_underlay_type(0)
}
spriteset(snow_NCAN_underlay, "gfx/NCAN.png") {
    tmpl_underlay_type(80)
}
switch(FEAT_RAILTYPES, SELF, switch_NCAN_underlay, terrain_type) {
    TILETYPE_SNOW: snow_NCAN_underlay;
    normal_NCAN_underlay;
}

spriteset(normal_NCAN_bridge, "gfx/NCAN.png") {													// BRIDGE
    tmpl_bridge_surfaces(0)
}
spriteset(snow_NCAN_bridge, "gfx/NCAN.png") {
    tmpl_bridge_surfaces(414)
}
switch(FEAT_RAILTYPES, SELF, switch_NCAN_bridge, terrain_type) {
    TILETYPE_SNOW: snow_NCAN_bridge;
    normal_NCAN_bridge;
}

spriteset(normal_NCAN_lc_right_townzone_edge_open, "gfx/NCAN.png") {							// LEVEL_CROSSING
    tmpl_level_crossings(0,0,0,0)
}
spriteset(normal_NCAN_lc_right_townzone_edge_closed, "gfx/NCAN.png") {
    tmpl_level_crossings(0,0,0,45)
}
spriteset(snow_NCAN_lc_right_townzone_edge_open, "gfx/NCAN.png") {
    tmpl_level_crossings(0,45,0,0)
}
spriteset(snow_NCAN_lc_right_townzone_edge_closed, "gfx/NCAN.png") {
    tmpl_level_crossings(0,45,0,45)
}
spriteset(normal_NCAN_lc_right_townzone_open, "gfx/NCAN.png") {
    tmpl_level_crossings(138,0,0,0)
}
spriteset(normal_NCAN_lc_right_townzone_closed, "gfx/NCAN.png") {
    tmpl_level_crossings(138,0,0,45)
}
spriteset(snow_NCAN_lc_right_townzone_open, "gfx/NCAN.png") {
    tmpl_level_crossings(138,45,0,0)
}
spriteset(snow_NCAN_lc_right_townzone_closed, "gfx/NCAN.png") {
    tmpl_level_crossings(138,45,0,45)
}
spriteset(normal_NCAN_lc_left_townzone_edge_open, "gfx/NCAN.png") {
    tmpl_level_crossings(0,0,276,0)
}
spriteset(normal_NCAN_lc_left_townzone_edge_closed, "gfx/NCAN.png") {
    tmpl_level_crossings(0,0,276,45)
}
spriteset(snow_NCAN_lc_left_townzone_edge_open, "gfx/NCAN.png") {
    tmpl_level_crossings(0,45,276,0)
}
spriteset(snow_NCAN_lc_left_townzone_edge_closed, "gfx/NCAN.png") {
    tmpl_level_crossings(0,45,276,45)
}
spriteset(normal_NCAN_lc_left_townzone_open, "gfx/NCAN.png") {
    tmpl_level_crossings(138,0,276,0)
}
spriteset(normal_NCAN_lc_left_townzone_closed, "gfx/NCAN.png") {
    tmpl_level_crossings(138,0,276,45)
}
spriteset(snow_NCAN_lc_left_townzone_open, "gfx/NCAN.png") {
    tmpl_level_crossings(138,45,276,0)
}
spriteset(snow_NCAN_lc_left_townzone_closed, "gfx/NCAN.png") {
    tmpl_level_crossings(138,45,276,45)
}
switch(FEAT_RAILTYPES, SELF, snow_NCAN_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_NCAN_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_NCAN_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_NCAN_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_NCAN_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_NCAN_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_NCAN_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_NCAN_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_NCAN_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_NCAN_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_NCAN_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_NCAN_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_NCAN_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_NCAN_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_NCAN_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_NCAN_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_NCAN_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_NCAN_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_NCAN_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_NCAN_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_NCAN_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_NCAN_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_NCAN_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_NCAN_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, switch_NCAN_lc_right_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_NCAN_lc_right_townzone_edge; 
	normal_NCAN_lc_right_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_NCAN_lc_right_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_NCAN_lc_right_townzone; 
	normal_NCAN_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_NCAN_lc_left_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_NCAN_lc_left_townzone_edge; 
	normal_NCAN_lc_left_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_NCAN_lc_left_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_NCAN_lc_left_townzone; 
	normal_NCAN_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_NCAN_lc_right, town_zone) {
	TOWNZONE_EDGE: switch_NCAN_lc_right_townzone_edge;
	switch_NCAN_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_NCAN_lc_left, town_zone) {
	TOWNZONE_EDGE: switch_NCAN_lc_left_townzone_edge;
	switch_NCAN_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_NCAN_level_crossings, traffic_side) {
	TRAFFIC_SIDE_LEFT: switch_NCAN_lc_left;
	switch_NCAN_lc_right;
}

spriteset(normal_NCAN_tunnel_overlay, "gfx/NCAN.png") {											// TUNNEL_OVERLAY
    tmpl_tunnel_overlay_type(0)
}
spriteset(snow_NCAN_tunnel_overlay, "gfx/NCAN.png") {
    tmpl_tunnel_overlay_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_NCAN_tunnel_overlay, terrain_type) {
    TILETYPE_SNOW: snow_NCAN_tunnel_overlay;
    normal_NCAN_tunnel_overlay;
}

spriteset(normal_NCAN_tunnel_1, "gfx/NCAN.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_NCAN_tunnel_1, "gfx/NCAN.png") {
    tmpl_tunnel_type(276)
}
spriteset(normal_NCAN_tunnel_0, "gfx/NCAE.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_NCAN_tunnel_0, "gfx/NCAE.png") {
    tmpl_tunnel_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_NCAN_tunnel_1, terrain_type) {
    TILETYPE_SNOW: snow_NCAN_tunnel_1;
    normal_NCAN_tunnel_1;
}
switch(FEAT_RAILTYPES, SELF, switch_NCAN_tunnel_0, terrain_type) {
    TILETYPE_SNOW: snow_NCAN_tunnel_0;
    normal_NCAN_tunnel_0;
}
switch(FEAT_RAILTYPES, SELF, switch_NCAN_tunnel, param_tunnel) {
	1: switch_NCAN_tunnel_1;
	switch_NCAN_tunnel_0;
}

spriteset(fences_NCAN, "gfx/NCAN.png") {												//FENCES
	tmpl_fences(0)
}
spriteset(fences_NCAN_cc, "gfx/NCAN.png") {												//FENCES
	tmpl_fences(43)
}
switch(FEAT_RAILTYPES, SELF, switch_NCAN_fences, param_fences) {
    0: fences_empty;
	2: fences_empty;
	3: fences_NCAN;
	4: fences_NCAN_cc;
}
//============================================================================
//					MODERN NARROW LINE EL(NCAE)
//============================================================================
spriteset(normal_NCAE_depots, "gfx/NCAE.png") {													//DEPOTS
    tmpl_depot(0)
}
spriteset(snow_NCAE_depots, "gfx/NCAE.png") {
    tmpl_depot(414)
}
switch(FEAT_RAILTYPES, SELF, switch_NCAE_depots, terrain_type) {
    TILETYPE_SNOW: snow_NCAE_depots;
    normal_NCAE_depots;
}

spriteset(switch_NCAE_pylons_catenary_1, "gfx/NCAE.png") {										// PYLONS
    tmpl_pylons_catenary(0)
}
spriteset(switch_NCAE_pylons_catenary_2, "gfx/NCAE.png") {
    tmpl_pylons_catenary(36)
}
switch (FEAT_RAILTYPES, SELF, switch_NCAE_pylons_catenary, random_bits) {
    1: switch_NCAE_pylons_catenary_2;
	switch_NCAE_pylons_catenary_1;
}

spriteset(gui_NCAE_UGUI, "gfx/NCAE.png") {														//GUI						
    tmpl_gui_UGUI()
}
spriteset(gui_NCAE_opengfx, "gfx/NCAE.png") {													//GUI
    tmpl_gui_gfx()
}
spriteset(gui_NCAE_ttd, "gfx/NCAE.png") {
    tmpl_gui_ttd()
}
switch (FEAT_RAILTYPES, SELF, switch_NCAE_gui, param_gui) {
    1: gui_NCAE_opengfx;
    2: gui_NCAE_UGUI;
	gui_NCAE_ttd;
}
//============================================================================
//						URBAN NARROW GAUGE LINE (NUAE)
//============================================================================
spriteset(switch_NUAE_overlay, "gfx/NUAE.png") {												// OVERLAY
    tmpl_overlay_type()
}

spriteset(normal_NUAE_precombined, "gfx/NUAE.png") {											// PRECOMBINED
    tmpl_precombined_type()
}
spriteset(snow_NUAE_precombined, "gfx/NUAE_1.png") {
    tmpl_precombined_type()
}
switch(FEAT_RAILTYPES, SELF, switch_NUAE_precombined, terrain_type) {
    TILETYPE_SNOW: snow_NUAE_precombined;
    normal_NUAE_precombined;
}

spriteset(normal_NUAE_underlay, "gfx/NUAE.png") {												// UNDERLAY
    tmpl_underlay_type(0)
}
spriteset(snow_NUAE_underlay, "gfx/NUAE.png") {
    tmpl_underlay_type(80)
}
switch(FEAT_RAILTYPES, SELF, switch_NUAE_underlay, terrain_type) {
    TILETYPE_SNOW: snow_NUAE_underlay;
    normal_NUAE_underlay;
}

spriteset(normal_NUAE_bridge, "gfx/NUAE.png") {													// BRIDGE
    tmpl_bridge_surfaces(0)
}
spriteset(snow_NUAE_bridge, "gfx/NUAE.png") {
    tmpl_bridge_surfaces(414)
}
switch(FEAT_RAILTYPES, SELF, switch_NUAE_bridge, terrain_type) {
    TILETYPE_SNOW: snow_NUAE_bridge;
    normal_NUAE_bridge;
}

spriteset(normal_NUAE_lc_right_townzone_edge_open, "gfx/NUAE.png") {							// LEVEL_CROSSING
    tmpl_level_crossings(0,0,0,0)
}
spriteset(normal_NUAE_lc_right_townzone_edge_closed, "gfx/NUAE.png") {
    tmpl_level_crossings(0,0,0,45)
}
spriteset(snow_NUAE_lc_right_townzone_edge_open, "gfx/NUAE.png") {
    tmpl_level_crossings(0,45,0,0)
}
spriteset(snow_NUAE_lc_right_townzone_edge_closed, "gfx/NUAE.png") {
    tmpl_level_crossings(0,45,0,45)
}
spriteset(normal_NUAE_lc_right_townzone_open, "gfx/NUAE.png") {
    tmpl_level_crossings(138,0,0,0)
}
spriteset(normal_NUAE_lc_right_townzone_closed, "gfx/NUAE.png") {
    tmpl_level_crossings(138,0,0,45)
}
spriteset(snow_NUAE_lc_right_townzone_open, "gfx/NUAE.png") {
    tmpl_level_crossings(138,45,0,0)
}
spriteset(snow_NUAE_lc_right_townzone_closed, "gfx/NUAE.png") {
    tmpl_level_crossings(138,45,0,45)
}
spriteset(normal_NUAE_lc_left_townzone_edge_open, "gfx/NUAE.png") {
    tmpl_level_crossings(0,0,276,0)
}
spriteset(normal_NUAE_lc_left_townzone_edge_closed, "gfx/NUAE.png") {
    tmpl_level_crossings(0,0,276,45)
}
spriteset(snow_NUAE_lc_left_townzone_edge_open, "gfx/NUAE.png") {
    tmpl_level_crossings(0,45,276,0)
}
spriteset(snow_NUAE_lc_left_townzone_edge_closed, "gfx/NUAE.png") {
    tmpl_level_crossings(0,45,276,45)
}
spriteset(normal_NUAE_lc_left_townzone_open, "gfx/NUAE.png") {
    tmpl_level_crossings(138,0,276,0)
}
spriteset(normal_NUAE_lc_left_townzone_closed, "gfx/NUAE.png") {
    tmpl_level_crossings(138,0,276,45)
}
spriteset(snow_NUAE_lc_left_townzone_open, "gfx/NUAE.png") {
    tmpl_level_crossings(138,45,276,0)
}
spriteset(snow_NUAE_lc_left_townzone_closed, "gfx/NUAE.png") {
    tmpl_level_crossings(138,45,276,45)
}
switch(FEAT_RAILTYPES, SELF, snow_NUAE_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_NUAE_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_NUAE_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_NUAE_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_NUAE_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_NUAE_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_NUAE_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_NUAE_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_NUAE_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_NUAE_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_NUAE_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_NUAE_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_NUAE_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_NUAE_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_NUAE_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_NUAE_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_NUAE_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_NUAE_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_NUAE_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_NUAE_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_NUAE_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_NUAE_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_NUAE_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_NUAE_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, switch_NUAE_lc_right_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_NUAE_lc_right_townzone_edge; 
	normal_NUAE_lc_right_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_NUAE_lc_right_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_NUAE_lc_right_townzone; 
	normal_NUAE_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_NUAE_lc_left_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_NUAE_lc_left_townzone_edge; 
	normal_NUAE_lc_left_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_NUAE_lc_left_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_NUAE_lc_left_townzone; 
	normal_NUAE_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_NUAE_lc_right, town_zone) {
	TOWNZONE_EDGE: switch_NUAE_lc_right_townzone_edge;
	switch_NUAE_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_NUAE_lc_left, town_zone) {
	TOWNZONE_EDGE: switch_NUAE_lc_left_townzone_edge;
	switch_NUAE_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_NUAE_level_crossings, traffic_side) {
	TRAFFIC_SIDE_LEFT: switch_NUAE_lc_left;
	switch_NUAE_lc_right;
}

spriteset(normal_NUAE_tunnel_overlay, "gfx/NUAE.png") {											// TUNNEL_OVERLAY
    tmpl_tunnel_overlay_type(0)
}
spriteset(snow_NUAE_tunnel_overlay, "gfx/NUAE.png") {
    tmpl_tunnel_overlay_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_NUAE_tunnel_overlay, terrain_type) {
    TILETYPE_SNOW: snow_NUAE_tunnel_overlay;
    normal_NUAE_tunnel_overlay;
}

spriteset(normal_NUAE_tunnel_1, "gfx/NUAE.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_NUAE_tunnel_1, "gfx/NUAE.png") {
    tmpl_tunnel_type(276)
}
spriteset(normal_NUAE_tunnel_0, "gfx/NUAE_1.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_NUAE_tunnel_0, "gfx/NUAE_1.png") {
    tmpl_tunnel_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_NUAE_tunnel_1, terrain_type) {
    TILETYPE_SNOW: snow_NUAE_tunnel_1;
    normal_NUAE_tunnel_1;
}
switch(FEAT_RAILTYPES, SELF, switch_NUAE_tunnel_0, terrain_type) {
    TILETYPE_SNOW: snow_NUAE_tunnel_0;
    normal_NUAE_tunnel_0;
}
switch(FEAT_RAILTYPES, SELF, switch_NUAE_tunnel, param_tunnel) {
	1: switch_NUAE_tunnel_1;
	switch_NUAE_tunnel_0;
}

spriteset(switch_NUAE_pylons_catenary_1, "gfx/NUAE.png") {										// PYLONS
    tmpl_pylons_catenary(0)
}
spriteset(switch_NUAE_pylons_catenary_2, "gfx/NUAE.png") {
    tmpl_pylons_catenary(36)
}
switch (FEAT_RAILTYPES, SELF, switch_NUAE_pylons_catenary, random_bits) {
    1: switch_NUAE_pylons_catenary_2;
	switch_NUAE_pylons_catenary_1;
}

spriteset(normal_NUAE_depots, "gfx/NUAE.png") {													//DEPOTS
    tmpl_depot(0)
}
spriteset(snow_NUAE_depots, "gfx/NUAE.png") {
    tmpl_depot(414)
}
switch(FEAT_RAILTYPES, SELF, switch_NUAE_depots, terrain_type) {
    TILETYPE_SNOW: snow_NUAE_depots;
    normal_NUAE_depots;
}

spriteset(fences_NUAE, "gfx/NUAE.png") {														//FENCES
	tmpl_fences(0)
}
spriteset(fences_NUAE_cc, "gfx/NUAE.png") {														//FENCES
	tmpl_fences(43)
}
switch(FEAT_RAILTYPES, SELF, switch_NUAE_fences, param_fences) {
    0: fences_empty;
	2: fences_NUAE;
	3: fences_NUAE;
	4: fences_NUAE_cc;
}

spriteset(gui_NUAE_UGUI, "gfx/NUAE.png") {														//GUI						
    tmpl_gui_UGUI()
}
spriteset(gui_NUAE_opengfx, "gfx/NUAE.png") {													//GUI
    tmpl_gui_gfx()
}
spriteset(gui_NUAE_ttd, "gfx/NUAE.png") {
    tmpl_gui_ttd()
}
switch (FEAT_RAILTYPES, SELF, switch_NUAE_gui, param_gui) {
    1: gui_NUAE_opengfx;
    2: gui_NUAE_UGUI;
	gui_NUAE_ttd;
}
//============================================================================
//						NARROW GAUGE LINE (3RD POWERED) (NAA3)
//============================================================================
spriteset(switch_NAA3_overlay, "gfx/NAA3.png") {												// OVERLAY
    tmpl_overlay_type()
}

spriteset(normal_NAA3_precombined, "gfx/NAA3.png") {											// PRECOMBINED
    tmpl_precombined_type()
}
spriteset(snow_NAA3_precombined, "gfx/NAA3_1.png") {
    tmpl_precombined_type()
}
switch(FEAT_RAILTYPES, SELF, switch_NAA3_precombined, terrain_type) {
    TILETYPE_SNOW: snow_NAA3_precombined;
    normal_NAA3_precombined;
}

spriteset(normal_NAA3_underlay, "gfx/NAA3.png") {												// UNDERLAY
    tmpl_underlay_type(0)
}
spriteset(snow_NAA3_underlay, "gfx/NAA3.png") {
    tmpl_underlay_type(80)
}
switch(FEAT_RAILTYPES, SELF, switch_NAA3_underlay, terrain_type) {
    TILETYPE_SNOW: snow_NAA3_underlay;
    normal_NAA3_underlay;
}

spriteset(normal_NAA3_bridge, "gfx/NAA3.png") {													// BRIDGE
    tmpl_bridge_surfaces(0)
}
spriteset(snow_NAA3_bridge, "gfx/NAA3.png") {
    tmpl_bridge_surfaces(414)
}
switch(FEAT_RAILTYPES, SELF, switch_NAA3_bridge, terrain_type) {
    TILETYPE_SNOW: snow_NAA3_bridge;
    normal_NAA3_bridge;
}

spriteset(normal_NAA3_lc_right_townzone_edge_open, "gfx/NAA3.png") {							// LEVEL_CROSSING
    tmpl_level_crossings(0,0,0,0)
}
spriteset(normal_NAA3_lc_right_townzone_edge_closed, "gfx/NAA3.png") {
    tmpl_level_crossings(0,0,0,45)
}
spriteset(snow_NAA3_lc_right_townzone_edge_open, "gfx/NAA3.png") {
    tmpl_level_crossings(0,45,0,0)
}
spriteset(snow_NAA3_lc_right_townzone_edge_closed, "gfx/NAA3.png") {
    tmpl_level_crossings(0,45,0,45)
}
spriteset(normal_NAA3_lc_right_townzone_open, "gfx/NAA3.png") {
    tmpl_level_crossings(138,0,0,0)
}
spriteset(normal_NAA3_lc_right_townzone_closed, "gfx/NAA3.png") {
    tmpl_level_crossings(138,0,0,45)
}
spriteset(snow_NAA3_lc_right_townzone_open, "gfx/NAA3.png") {
    tmpl_level_crossings(138,45,0,0)
}
spriteset(snow_NAA3_lc_right_townzone_closed, "gfx/NAA3.png") {
    tmpl_level_crossings(138,45,0,45)
}
spriteset(normal_NAA3_lc_left_townzone_edge_open, "gfx/NAA3.png") {
    tmpl_level_crossings(0,0,276,0)
}
spriteset(normal_NAA3_lc_left_townzone_edge_closed, "gfx/NAA3.png") {
    tmpl_level_crossings(0,0,276,45)
}
spriteset(snow_NAA3_lc_left_townzone_edge_open, "gfx/NAA3.png") {
    tmpl_level_crossings(0,45,276,0)
}
spriteset(snow_NAA3_lc_left_townzone_edge_closed, "gfx/NAA3.png") {
    tmpl_level_crossings(0,45,276,45)
}
spriteset(normal_NAA3_lc_left_townzone_open, "gfx/NAA3.png") {
    tmpl_level_crossings(138,0,276,0)
}
spriteset(normal_NAA3_lc_left_townzone_closed, "gfx/NAA3.png") {
    tmpl_level_crossings(138,0,276,45)
}
spriteset(snow_NAA3_lc_left_townzone_open, "gfx/NAA3.png") {
    tmpl_level_crossings(138,45,276,0)
}
spriteset(snow_NAA3_lc_left_townzone_closed, "gfx/NAA3.png") {
    tmpl_level_crossings(138,45,276,45)
}
switch(FEAT_RAILTYPES, SELF, snow_NAA3_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_NAA3_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_NAA3_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_NAA3_lc_right_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_NAA3_lc_right_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_NAA3_lc_right_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_NAA3_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_NAA3_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_NAA3_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_NAA3_lc_right_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_NAA3_lc_right_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_NAA3_lc_right_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_NAA3_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_NAA3_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: snow_NAA3_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_NAA3_lc_left_townzone_edge, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_NAA3_lc_left_townzone_edge_open; 
	LEVEL_CROSSING_CLOSED: normal_NAA3_lc_left_townzone_edge_closed; 
}
switch(FEAT_RAILTYPES, SELF, snow_NAA3_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: snow_NAA3_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: snow_NAA3_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, normal_NAA3_lc_left_townzone, level_crossing_status) { 
	LEVEL_CROSSING_OPEN: normal_NAA3_lc_left_townzone_open; 
	LEVEL_CROSSING_CLOSED: normal_NAA3_lc_left_townzone_closed; 
}
switch(FEAT_RAILTYPES, SELF, switch_NAA3_lc_right_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_NAA3_lc_right_townzone_edge; 
	normal_NAA3_lc_right_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_NAA3_lc_right_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_NAA3_lc_right_townzone; 
	normal_NAA3_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_NAA3_lc_left_townzone_edge, terrain_type) { 
	TILETYPE_SNOW: snow_NAA3_lc_left_townzone_edge; 
	normal_NAA3_lc_left_townzone_edge;
}
switch(FEAT_RAILTYPES, SELF, switch_NAA3_lc_left_townzone, terrain_type) { 
	TILETYPE_SNOW: snow_NAA3_lc_left_townzone; 
	normal_NAA3_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_NAA3_lc_right, town_zone) {
	TOWNZONE_EDGE: switch_NAA3_lc_right_townzone_edge;
	switch_NAA3_lc_right_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_NAA3_lc_left, town_zone) {
	TOWNZONE_EDGE: switch_NAA3_lc_left_townzone_edge;
	switch_NAA3_lc_left_townzone;
}
switch(FEAT_RAILTYPES, SELF, switch_NAA3_level_crossings, traffic_side) {
	TRAFFIC_SIDE_LEFT: switch_NAA3_lc_left;
	switch_NAA3_lc_right;
}

spriteset(normal_NAA3_tunnel_overlay, "gfx/NAA3.png") {											// TUNNEL_OVERLAY
    tmpl_tunnel_overlay_type(0)
}
spriteset(snow_NAA3_tunnel_overlay, "gfx/NAA3.png") {
    tmpl_tunnel_overlay_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_NAA3_tunnel_overlay, terrain_type) {
    TILETYPE_SNOW: snow_NAA3_tunnel_overlay;
    normal_NAA3_tunnel_overlay;
}

spriteset(normal_NAA3_tunnel_1, "gfx/NAA3.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_NAA3_tunnel_1, "gfx/NAA3.png") {
    tmpl_tunnel_type(276)
}
spriteset(normal_NAA3_tunnel_0, "gfx/NAA3_1.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_NAA3_tunnel_0, "gfx/NAA3_1.png") {
    tmpl_tunnel_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_NAA3_tunnel_1, terrain_type) {
    TILETYPE_SNOW: snow_NAA3_tunnel_1;
    normal_NAA3_tunnel_1;
}
switch(FEAT_RAILTYPES, SELF, switch_NAA3_tunnel_0, terrain_type) {
    TILETYPE_SNOW: snow_NAA3_tunnel_0;
    normal_NAA3_tunnel_0;
}
switch(FEAT_RAILTYPES, SELF, switch_NAA3_tunnel, param_tunnel) {
	1: switch_NAA3_tunnel_1;
	switch_NAA3_tunnel_0;
}

spriteset(normal_NAA3_depots, "gfx/NAA3.png") {													//DEPOTS
    tmpl_depot(0)
}
spriteset(snow_NAA3_depots, "gfx/NAA3.png") {
    tmpl_depot(414)
}
switch(FEAT_RAILTYPES, SELF, switch_NAA3_depots, terrain_type) {
    TILETYPE_SNOW: snow_NAA3_depots;
    normal_NAA3_depots;
}

spriteset(fences_NAA3, "gfx/NAA3.png") {														//FENCES
	tmpl_fences(0)
}
spriteset(fences_NAA3_cc, "gfx/NAA3.png") {														//FENCES
	tmpl_fences(43)
}
switch(FEAT_RAILTYPES, SELF, switch_NAA3_fences, param_fences) {
    0: fences_empty;
	2: fences_empty;
	3: fences_NAA3;
	4: fences_NAA3_cc;
}

spriteset(gui_NAA3_UGUI, "gfx/NAA3.png") {														//GUI						
    tmpl_gui_UGUI()
}
spriteset(gui_NAA3_opengfx, "gfx/NAA3.png") {													//GUI
    tmpl_gui_gfx()
}
spriteset(gui_NAA3_ttd, "gfx/NAA3.png") {
    tmpl_gui_ttd()
}
switch (FEAT_RAILTYPES, SELF, switch_NAA3_gui, param_gui) {
    1: gui_NAA3_opengfx;
    2: gui_NAA3_UGUI;
	gui_NAA3_ttd;
}
//============================================================================
//						MONORAIL (MONO)
//============================================================================
spriteset(switch_MONO_overlay, "gfx/MONO.png") {												// OVERLAY
    tmpl_overlay_type()
}

spriteset(normal_MONO_precombined, "gfx/MONO.png") {											// PRECOMBINED
    tmpl_precombined_type()
}
spriteset(snow_MONO_precombined, "gfx/MONO_1.png") {
    tmpl_precombined_type()
}
switch(FEAT_RAILTYPES, SELF, switch_MONO_precombined, terrain_type) {
    TILETYPE_SNOW: snow_MONO_precombined;
    normal_MONO_precombined;
}

spriteset(normal_MONO_underlay, "gfx/MONO.png") {												// UNDERLAY
    tmpl_underlay_type(0)
}
spriteset(snow_MONO_underlay, "gfx/MONO.png") {
    tmpl_underlay_type(80)
}
switch(FEAT_RAILTYPES, SELF, switch_MONO_underlay, terrain_type) {
    TILETYPE_SNOW: snow_MONO_underlay;
    normal_MONO_underlay;
}

spriteset(normal_MONO_bridge, "gfx/MONO.png") {													// BRIDGE
    tmpl_bridge_surfaces(0)
}
spriteset(snow_MONO_bridge, "gfx/MONO.png") {
    tmpl_bridge_surfaces(414)
}
switch(FEAT_RAILTYPES, SELF, switch_MONO_bridge, terrain_type) {
    TILETYPE_SNOW: snow_MONO_bridge;
    normal_MONO_bridge;
}
spriteset(switch_MONO_U_bridge, "gfx/MONO_1.png") {												// U_BRIDGE
    tmpl_bridge_surfaces(0)
}

spriteset(normal_MONO_tunnel_overlay, "gfx/MONO.png") {											// TUNNEL_OVERLAY
    tmpl_tunnel_overlay_type(0)
}
spriteset(snow_MONO_tunnel_overlay, "gfx/MONO.png") {
    tmpl_tunnel_overlay_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_MONO_tunnel_overlay, terrain_type) {
    TILETYPE_SNOW: snow_MONO_tunnel_overlay;
    normal_MONO_tunnel_overlay;
}

spriteset(normal_MONO_tunnel_1, "gfx/MONO.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_MONO_tunnel_1, "gfx/MONO.png") {
    tmpl_tunnel_type(276)
}
spriteset(normal_MONO_tunnel_0, "gfx/MONO_1.png") {												// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_MONO_tunnel_0, "gfx/MONO_1.png") {
    tmpl_tunnel_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_MONO_tunnel_1, terrain_type) {
    TILETYPE_SNOW: snow_MONO_tunnel_1;
    normal_MONO_tunnel_1;
}
switch(FEAT_RAILTYPES, SELF, switch_MONO_tunnel_0, terrain_type) {
    TILETYPE_SNOW: snow_MONO_tunnel_0;
    normal_MONO_tunnel_0;
}
switch(FEAT_RAILTYPES, SELF, switch_MONO_tunnel, param_tunnel) {
	1: switch_MONO_tunnel_1;
	switch_MONO_tunnel_0;
}

spriteset(normal_MONO_depots_1, "gfx/MONO.png") {												//DEPOTS
    tmpl_depot(0)
}
spriteset(snow_MONO_depots_1, "gfx/MONO.png") {
    tmpl_depot(414)
}
spriteset(normal_MONO_depots_2, "gfx/MONO_1.png") {
    tmpl_depot(0)
}
spriteset(snow_MONO_depots_2, "gfx/MONO_1.png") {
    tmpl_depot(414)
}
switch(FEAT_RAILTYPES, SELF, switch_MONO_depots_1, terrain_type) {
    TILETYPE_SNOW: snow_MONO_depots_1;
    normal_MONO_depots_1;
}
switch(FEAT_RAILTYPES, SELF, switch_MONO_depots_2, terrain_type) {
    TILETYPE_SNOW: snow_MONO_depots_2;
    normal_MONO_depots_2;
}
switch(FEAT_RAILTYPES, SELF, switch_MONO_depots, max(build_date - date(1999,1,1),0)) {
	0: switch_MONO_depots_1;
	switch_MONO_depots_2;
}

spriteset(fences_MONO, "gfx/MONO.png") {
	tmpl_fences(0)
}
spriteset(fences_MONO_cc, "gfx/MONO.png") {
	tmpl_fences(43)
}
switch(FEAT_RAILTYPES, SELF, switch_MONO_fences, param_fences) {								//FENCES
    0: fences_empty;
	2: fences_MONO;
	3: fences_MONO;
	4: fences_MONO_cc;
}

spriteset(gui_MONO_UGUI, "gfx/MONO.png") {														//GUI						
    tmpl_gui_UGUI()
}
spriteset(gui_MONO_opengfx, "gfx/MONO.png") {													//GUI
    tmpl_gui_gfx()
}
spriteset(gui_MONO_ttd, "gfx/MONO.png") {
    tmpl_gui_ttd()
}
switch (FEAT_RAILTYPES, SELF, switch_MONO_gui, param_gui) {
    1: gui_MONO_opengfx;
    2: gui_MONO_UGUI;
	gui_MONO_ttd;
}
//============================================================================
//						MAGLEV (MGLV)
//============================================================================
spriteset(switch_MGLV_overlay, "gfx/MGLV.png") {												// OVERLAY
    tmpl_overlay_type()
}

spriteset(normal_MGLV_precombined, "gfx/MGLV.png") {											// PRECOMBINED
    tmpl_precombined_type()
}
spriteset(snow_MGLV_precombined, "gfx/MGLV_1.png") {
    tmpl_precombined_type()
}
switch(FEAT_RAILTYPES, SELF, switch_MGLV_precombined, terrain_type) {
    TILETYPE_SNOW: snow_MGLV_precombined;
    normal_MGLV_precombined;
}

spriteset(normal_MGLV_underlay, "gfx/MGLV.png") {												// UNDERLAY
    tmpl_underlay_type(0)
}
spriteset(snow_MGLV_underlay, "gfx/MGLV.png") {
    tmpl_underlay_type(80)
}
switch(FEAT_RAILTYPES, SELF, switch_MGLV_underlay, terrain_type) {
    TILETYPE_SNOW: snow_MGLV_underlay;
    normal_MGLV_underlay;
}

spriteset(normal_MGLV_bridge, "gfx/MGLV.png") {													// BRIDGE
    tmpl_bridge_surfaces(0)
}
spriteset(snow_MGLV_bridge, "gfx/MGLV.png") {
    tmpl_bridge_surfaces(414)
}
switch(FEAT_RAILTYPES, SELF, switch_MGLV_bridge, terrain_type) {
    TILETYPE_SNOW: snow_MGLV_bridge;
    normal_MGLV_bridge;
}
spriteset(switch_MGLV_U_bridge, "gfx/MGLV_1.png") {												// U_BRIDGE
    tmpl_bridge_surfaces(0)
}

spriteset(normal_MGLV_tunnel_overlay, "gfx/MGLV.png") {											// TUNNEL_OVERLAY
    tmpl_tunnel_overlay_type(0)
}
spriteset(snow_MGLV_tunnel_overlay, "gfx/MGLV.png") {
    tmpl_tunnel_overlay_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_MGLV_tunnel_overlay, terrain_type) {
    TILETYPE_SNOW: snow_MGLV_tunnel_overlay;
    normal_MGLV_tunnel_overlay;
}

spriteset(normal_MGLV_tunnel_1, "gfx/MGLV.png") {													// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_MGLV_tunnel_1, "gfx/MGLV.png") {
    tmpl_tunnel_type(276)
}
spriteset(normal_MGLV_tunnel_0, "gfx/MGLV_1.png") {													// TUNNEL
    tmpl_tunnel_type(0)
}
spriteset(snow_MGLV_tunnel_0, "gfx/MGLV_1.png") {
    tmpl_tunnel_type(276)
}
switch(FEAT_RAILTYPES, SELF, switch_MGLV_tunnel_1, terrain_type) {
    TILETYPE_SNOW: snow_MGLV_tunnel_1;
    normal_MGLV_tunnel_1;
}
switch(FEAT_RAILTYPES, SELF, switch_MGLV_tunnel_0, terrain_type) {
    TILETYPE_SNOW: snow_MGLV_tunnel_0;
    normal_MGLV_tunnel_0;
}
switch(FEAT_RAILTYPES, SELF, switch_MGLV_tunnel, param_tunnel) {
	1: switch_MGLV_tunnel_1;
	switch_MGLV_tunnel_0;
}

spriteset(normal_MGLV_depots, "gfx/MGLV.png") {														//DEPOTS
    tmpl_depot(0)
}
spriteset(snow_MGLV_depots, "gfx/MGLV.png") {
    tmpl_depot(414)
}
switch(FEAT_RAILTYPES, SELF, switch_MGLV_depots, terrain_type) {
    TILETYPE_SNOW: snow_MGLV_depots;
    normal_MGLV_depots;
}

spriteset(fences_MGLV, "gfx/MGLV.png") {
	tmpl_fences(0)
}
spriteset(fences_MGLV_cc, "gfx/MGLV.png") {
	tmpl_fences(43)
}
switch(FEAT_RAILTYPES, SELF, switch_MGLV_fences, param_fences) {
    0: fences_empty;
	2: fences_MGLV;
	3: fences_MGLV;
	4: fences_MGLV_cc;
}

spriteset(gui_MGLV_UGUI, "gfx/MGLV.png") {															//GUI						
    tmpl_gui_UGUI()
}
spriteset(gui_MGLV_opengfx, "gfx/MGLV.png") {														//GUI
    tmpl_gui_gfx()
}
spriteset(gui_MGLV_ttd, "gfx/MGLV.png") {
    tmpl_gui_ttd()
}
switch (FEAT_RAILTYPES, SELF, switch_MGLV_gui, param_gui) {
    1: gui_MGLV_opengfx;
    2: gui_MGLV_UGUI;
	gui_MGLV_ttd;
}
//============================================================================
//							FENCES
//============================================================================
spriteset(fences_empty, "gfx/SAAN.png") {
    tmpl_fences_empty()
}
//============================================================================
//							WIRES
//============================================================================
spriteset(switch_wires_standar_rail, "gfx/WIRES/WIRES.png") {
    tmpl_wires_catenary(0)
}

spriteset(switch_wires_narrow_rail, "gfx/WIRES/WIRES.png") {
    tmpl_wires_catenary(62)
}

spriteset(switch_SUAE_wires_standar_rail, "gfx/WIRES/WIRES.png") {
    tmpl_wires_catenary(124)
}
//==================================================================================================================================
//												Rail Definitions
//==================================================================================================================================
//============================================================================
//						MODERN MAIN LINE (SCAN)
//============================================================================
	item(FEAT_RAILTYPES, RAIL, 0) {
		property {
			label:							"RAIL";
			name:                       	string(STR_NAME_SBAN);
			toolbar_caption:    			string(STR_TOOLBAR_SBAN);
			menu_text:                  	string(STR_MENU_SBAN);
			build_window_caption:			string(STR_BUILD_CAPTION_RAIL);
			autoreplace_text:           	string(STR_AUTOREPLACE_RAIL);
			new_engine_text:            	string(STR_NEW_ENGINE_RAIL);
			compatible_railtype_list:   	["RAIL", "ELRL",
												"SAAN", "SBAN", "SCAN", "SDAN",	
												"SABN", "SACN", "SADN", "SAEN",
						                        "SBAE", "SCAE", "SDAE", "SEAE", "SFAE", "SUAE",
                                                "SAAE", "SABE", "SACE", "SADE", "SAEE",
                                                "SAAD", "SABD", "SACD", "SADD", "SAED",
                                                "SAAd", "SABd", "SACd", "SADd", "SAEd",
                                                "SAAA", "SABA", "SACA", "SADA", "SAEA",
                                                "SAAa", "SABa", "SACa", "SADa", "SAEa",
												"dAAN", "dBAN", "dBAE",
												"SAA3", "SBA3", "SUA3",
												"SAAZ", "SBAZ", "SUAZ"];
			powered_railtype_list:      	["RAIL", "ELRL",
												"SAAN", "SBAN", "SCAN", "SDAN",
												"SABN", "SACN", "SADN", "SAEN",
						                        "SAAE", "SBAE", "SCAE", "SDAE", "SEAE", "SFAE", "SUAE",
			                                	"SABE", "SACE", "SADE", "SAEE",
												"dAAN", "dBAN", "dBAE"];
			alternative_railtype_list:		["RAIL",
												"SAAN", "SBAN", "SCAN", "SDAN",												//Speed limit class [*X**]
												"SABN", "SACN", "SADN", "SAEN"];                                            //Axle load class [**X*]
			railtype_flags:             	bitmask(RAILTYPE_FLAG_PRECOMBINED, RAILTYPE_FLAG_DISALLOW_90DEG);
		//curve_speed_multiplier:     	1;
			station_graphics:           	RAILTYPE_STATION_NORMAL;
			construction_cost:          	20;
			maintenance_cost:				20;
			acceleration_model:         	ACC_MODEL_RAIL;
			map_colour:						22;
			sort_order:						4;
				}
	if (param_3rd == 3) {
		property {
			powered_railtype_list:      	["SAA3", "SUA3", "SAAZ", "SUAZ"];
			}
		} else
	if (param_3rd == 2) {
		property {
			powered_railtype_list:      	["SAAZ", "SUAZ"];
			}
		} else
	if (param_3rd == 1) {
		property {
			powered_railtype_list:      	["SAA3", "SUA3"];
			}
		}
		graphics {
			track_overlay:   				switch_SCAN_overlay;
			precombined:					switch_SCAN_precombined;
			underlay:        				switch_SCAN_underlay;
			bridge_surfaces: 				switch_SCAN_bridge;
			level_crossings: 				switch_SCAN_level_crossings;
			tunnels:         				switch_SCAN_tunnel;
			depots:          				switch_SCAN_depots;
		  //signals:
			fences:          				switch_SCAN_fences;
			gui:							switch_SCAN_gui;
				}
	if (param_tunnel == 1) {
		graphics {
			tunnel_overlay:					switch_SCAN_tunnel_overlay;
				}
			}
		}
//============================================================================
//						MODERN MAIN EL (SDAE)
//============================================================================
	item(FEAT_RAILTYPES, ELRL, 1) {
		property {
			label:							"ELRL";
			name:                       	string(STR_NAME_SBAE);
			toolbar_caption:    			string(STR_TOOLBAR_SBAE);
			menu_text:                  	string(STR_MENU_SBAE);
			build_window_caption:			string(STR_BUILD_CAPTION_ELRL);
			autoreplace_text:           	string(STR_AUTOREPLACE_ELRL);
			new_engine_text:            	string(STR_NEW_ENGINE_ELRL);
			compatible_railtype_list:   	["RAIL", "ELRL",
												"SAAN", "SBAN", "SCAN", "SDAN",	
												"SABN", "SACN", "SADN", "SAEN",
						                        "SBAE", "SCAE", "SDAE", "SEAE", "SFAE", "SUAE",
                                                "SAAE", "SABE", "SACE", "SADE", "SAEE",
                                                "SAAD", "SABD", "SACD", "SADD", "SAED",
                                                "SAAd", "SABd", "SACd", "SADd", "SAEd",
                                                "SAAA", "SABA", "SACA", "SADA", "SAEA",
                                                "SAAa", "SABa", "SACa", "SADa", "SAEa",
												"dAAN", "dBAN", "dBAE",
												"SAA3", "SBA3", "SUA3",
												"SAAZ", "SBAZ", "SUAZ"];
			powered_railtype_list:   		["ELRL",
						                        "SBAE", "SCAE", "SDAE", "SEAE", "SFAE", "SUAE",
                                                "SAAE", "SABE", "SACE", "SADE", "SAEE",
                                                "SAAD", "SABD", "SACD", "SADD", "SAED",
                                                "SAAd", "SABd", "SACd", "SADd", "SAEd",
                                                "SAAA", "SABA", "SACA", "SADA", "SAEA",
                                                "SAAa", "SABa", "SACa", "SADa", "SAEa",
												"dBAE"];
			alternative_railtype_list:		["ELRL",
						                        "SBAE", "SCAE", "SDAE", "SEAE", "SFAE", "SUAE",						//Speed limit class [*X**]
			                                	"SAAE", "SABE", "SACE", "SADE", "SAEE",								//Axle load class [**X*]
                                                "SAAD", "SABD", "SACD", "SADD", "SAED",								//Energy source type class [***X]
                                                "SAAd", "SABd", "SACd", "SADd", "SAEd",
                                                "SAAA", "SABA", "SACA", "SADA", "SAEA",
                                                "SAAa", "SABa", "SACa", "SADa", "SAEa"];
			railtype_flags:             	bitmask(RAILTYPE_FLAG_PRECOMBINED, RAILTYPE_FLAG_DISALLOW_90DEG, RAILTYPE_FLAG_CATENARY);
		//curve_speed_multiplier:     	1;
			station_graphics:           	RAILTYPE_STATION_NORMAL;
			construction_cost:          	36;
			maintenance_cost:				36;
			acceleration_model:         	ACC_MODEL_RAIL;
			map_colour:						151;
			sort_order:						8;
				}
	if (param_3rd > 1) {
		property {
			powered_railtype_list:      	["SAAZ", "SUAZ"];
			}
		}
		graphics {
			track_overlay:   				switch_SDAN_overlay;
			precombined:					switch_SDAN_precombined;
			underlay:        				switch_SDAN_underlay;
			bridge_surfaces: 				switch_SDAN_bridge;
			level_crossings: 				switch_SDAN_level_crossings;
			tunnels:         				switch_SDAN_tunnel;
			depots:          				switch_SDAE_depots;
			catenary_pylons: 				switch_SDAE_pylons_catenary;
			catenary_wire: 					switch_wires_standar_rail;
		  //signals:
			fences:          				switch_SDAN_fences;
			gui:							switch_SDAE_gui;
				}
	if (param_tunnel == 1) {
		graphics {
			tunnel_overlay:					switch_SDAN_tunnel_overlay;
				}
			}
		}
//============================================================================
//						URBAN MAIN LINE EL (SUAE)
//============================================================================
if (param_urban_rail == 1 ) {
if (railtype_available("SUAE") || loading_stage == LOADING_STAGE_RESERVE) {
	item(FEAT_RAILTYPES, SUAE, 12) {
		property {
			label:							"SUAE";
			name:                       	string(STR_NAME_SUAE);
			toolbar_caption:    			string(STR_TOOLBAR_SUAE);
			menu_text:                  	string(STR_MENU_SUAE);
			build_window_caption:			string(STR_BUILD_CAPTION_ELRL);
			autoreplace_text:           	string(STR_AUTOREPLACE_ELRL);
			new_engine_text:            	string(STR_NEW_ENGINE_ELRL);
			compatible_railtype_list:   	["RAIL", "ELRL",
												"SAAN", "SBAN", "SCAN", "SDAN",	
												"SABN", "SACN", "SADN", "SAEN",
						                        "SBAE", "SCAE", "SDAE", "SEAE", "SFAE", "SUAE",
                                                "SAAE", "SABE", "SACE", "SADE", "SAEE",
                                                "SAAD", "SABD", "SACD", "SADD", "SAED",
                                                "SAAd", "SABd", "SACd", "SADd", "SAEd",
                                                "SAAA", "SABA", "SACA", "SADA", "SAEA",
                                                "SAAa", "SABa", "SACa", "SADa", "SAEa",
												"dAAN", "dBAN", "dBAE",
												"SAA3", "SBA3", "SUA3",
												"SAAZ", "SBAZ", "SUAZ"];
			powered_railtype_list:   		["ELRL",
						                        "SBAE", "SCAE", "SDAE", "SEAE", "SFAE", "SUAE",
                                                "SAAE", "SABE", "SACE", "SADE", "SAEE",
                                                "SAAD", "SABD", "SACD", "SADD", "SAED",
                                                "SAAd", "SABd", "SACd", "SADd", "SAEd",
                                                "SAAA", "SABA", "SACA", "SADA", "SAEA",
                                                "SAAa", "SABa", "SACa", "SADa", "SAEa",
												"dBAE"];
			alternative_railtype_list:		["ELRL",
						                        "SBAE", "SCAE", "SDAE", "SEAE", "SFAE", "SUAE",						//Speed limit class [*X**]
			                                	"SAAE", "SABE", "SACE", "SADE", "SAEE",								//Axle load class [**X*]
                                                "SAAD", "SABD", "SACD", "SADD", "SAED",								//Energy source type class [***X]
                                                "SAAd", "SABd", "SACd", "SADd", "SAEd",
                                                "SAAA", "SABA", "SACA", "SADA", "SAEA",
                                                "SAAa", "SABa", "SACa", "SADa", "SAEa"];
			railtype_flags:             	bitmask(RAILTYPE_FLAG_PRECOMBINED, RAILTYPE_FLAG_DISALLOW_90DEG, RAILTYPE_FLAG_CATENARY);
		//curve_speed_multiplier:     	1;
			station_graphics:           	RAILTYPE_STATION_NORMAL;
			requires_railtype_list:			["ELRL"];
			introduction_date: 				date(1960,01,01);
			construction_cost:          	58;
			maintenance_cost:				58;
			acceleration_model:         	ACC_MODEL_RAIL;
			map_colour:						66;
			sort_order:						11;
				}
	if (param_3rd > 1) {
		property {
			powered_railtype_list:      	["SAAZ", "SUAZ"];
			}
		}
		graphics {
			track_overlay:   				switch_SUAE_overlay;
			precombined:					switch_SUAE_precombined;
			underlay:        				switch_SUAE_underlay;
			level_crossings:				switch_SUAE_level_crossings;
			bridge_surfaces: 				switch_SUAE_bridge;
			tunnels:         				switch_SUAE_tunnel;
			depots:          				switch_SUAE_depots;
			catenary_pylons: 				switch_SUAE_pylons_catenary;
			catenary_wire: 					switch_SUAE_wires_standar_rail;
		  //signals:
			fences:          				switch_SUAE_fences;
			gui:							switch_SUAE_gui;
				}
	if (param_tunnel == 1) {
		graphics {
			tunnel_overlay:					switch_SUAE_tunnel_overlay;
				}
			}
		}
	}
}
//============================================================================
//						METRO LINE (SAA3)
//============================================================================
if (railtype_available("SAA3") || loading_stage == LOADING_STAGE_RESERVE) {
	item(FEAT_RAILTYPES, SAA3, 13) {
		property {
			label:							"SAA3";
			name:                       	string(STR_NAME_SAA3);
			toolbar_caption:    			string(STR_TOOLBAR_SAA3);
			menu_text:                  	string(STR_MENU_SAA3);
			build_window_caption:			string(STR_BUILD_CAPTION_3RDR);
			autoreplace_text:           	string(STR_AUTOREPLACE_3RDR);
			new_engine_text:            	string(STR_NEW_ENGINE_3RDR);
			compatible_railtype_list:   	["RAIL", "ELRL",
												"SAAN", "SBAN", "SCAN", "SDAN",	
						                        "SBAE", "SCAE", "SDAE", "SEAE", "SFAE", "SUAE",
												"dAAN", "dBAN", "dBAE",
												"SAA3", "SBA3", "SUA3",
												"SAAZ", "SBAZ", "SUAZ"];
			powered_railtype_list:      	["3RDR", "MTRO", 
												"SAA3", "SBA3", "SUA3", "SAB3", "SBB3", 
												"SAAZ", "SBAZ", "SABZ", "SBBZ", "SUAZ"];
			alternative_railtype_list:		["3RDR", "MTRO", 
												"SAA3", "SBA3", "SUA3", "SAB3", "SBB3", 
												"SAAZ", "SBAZ", "SABZ", "SBBZ", "SUAZ"];
			railtype_flags:             	bitmask(RAILTYPE_FLAG_PRECOMBINED, RAILTYPE_FLAG_DISALLOW_90DEG);
		//curve_speed_multiplier:     	1;
			station_graphics:           	RAILTYPE_STATION_NORMAL;
			construction_cost:          	20;
			maintenance_cost:				20;
			acceleration_model:         	ACC_MODEL_RAIL;
			map_colour:						93;
			sort_order:						12;
				}
		graphics {
			track_overlay:   				switch_SAA3_overlay;
			precombined:					switch_SAA3_precombined;
			underlay:        				switch_SAA3_underlay;
			bridge_surfaces: 				switch_SAA3_bridge;
			level_crossings: 				switch_SAA3_level_crossings;
			tunnels:         				switch_SAA3_tunnel;
			depots:          				switch_SAA3_depots;
		  //signals:
			fences:          				switch_SAA3_fences;
			gui:							switch_SAA3_gui;
				}
	if (param_tunnel == 1) {
		graphics {
			tunnel_overlay:					switch_SAA3_tunnel_overlay;
				}
			}
		}
	}
//============================================================================
//						URBAN METRO LINE (SUA3)
//============================================================================
if (param_urban_rail == 1) {
if (railtype_available("SUA3") || loading_stage == LOADING_STAGE_RESERVE) {
		item(FEAT_RAILTYPES, SUA3, 14) {
			property {
			label:							"SUA3";
			name:                       	string(STR_NAME_SUA3);
			toolbar_caption:    			string(STR_TOOLBAR_SUA3);
			menu_text:                  	string(STR_MENU_SUA3);
			build_window_caption:			string(STR_BUILD_CAPTION_3RDR);
			autoreplace_text:           	string(STR_AUTOREPLACE_3RDR);
			new_engine_text:            	string(STR_NEW_ENGINE_3RDR);
			compatible_railtype_list:   	["RAIL", "ELRL",
												"SAAN", "SBAN", "SCAN", "SDAN",	
						                        "SBAE", "SCAE", "SDAE", "SEAE", "SFAE", "SUAE",
												"dAAN", "dBAN", "dBAE",
												"SAA3", "SBA3", "SUA3",
												"SAAZ", "SBAZ", "SUAZ"];
			powered_railtype_list:      	["3RDR", "MTRO", 
												"SAA3", "SBA3", "SUA3", "SAB3", "SBB3", 
												"SAAZ", "SBAZ", "SABZ", "SBBZ", "SUAZ"];
			alternative_railtype_list:		["3RDR", "MTRO", 
												"SAA3", "SBA3", "SUA3", "SAB3", "SBB3", 
												"SAAZ", "SBAZ", "SABZ", "SBBZ", "SUAZ"];
			railtype_flags:             	bitmask(RAILTYPE_FLAG_PRECOMBINED, RAILTYPE_FLAG_DISALLOW_90DEG);
		  //curve_speed_multiplier:     	1;
			station_graphics:           	RAILTYPE_STATION_NORMAL;
			requires_railtype_list:			["SAA3"];
			introduction_date: 				date(1960,01,01);
			construction_cost:          	30;
			maintenance_cost:				30;
			acceleration_model:         	ACC_MODEL_RAIL;
			map_colour:						95;
			sort_order:						14;
				}
		graphics {
			track_overlay:   				switch_SUA3_overlay;
			precombined:					switch_SUA3_precombined;
			underlay:        				switch_SUA3_underlay;
			bridge_surfaces: 				switch_SUA3_bridge;
			level_crossings: 				switch_SUA3_level_crossings;
			tunnels:         				switch_SUA3_tunnel;
			depots:          				switch_SUA3_depots;
		  //signals:
			fences:          				switch_SUA3_fences;
			gui:							switch_SUA3_gui;
				}
	if (param_tunnel == 1) {
		graphics {
			tunnel_overlay:					switch_SUA3_tunnel_overlay;
				}
			}
		}
	}
}
//============================================================================
//					IMPROVE METRO LINE (ELECTRIFIED) (SBAZ)
//============================================================================
if (param_3rd > 1) {
if (railtype_available("SBAZ") || loading_stage == LOADING_STAGE_RESERVE) {
	item(FEAT_RAILTYPES, SBAZ, 29) {
		property {
			label:							"SBAZ";
			name:                       	string(STR_NAME_SAAZ);
			toolbar_caption:    			string(STR_TOOLBAR_SAAZ);
			menu_text:                  	string(STR_MENU_SAAZ);
			build_window_caption:			string(STR_BUILD_CAPTION_3RDR);
			autoreplace_text:           	string(STR_AUTOREPLACE_3RDR);
			new_engine_text:            	string(STR_NEW_ENGINE_3RDR);
			compatible_railtype_list:   	["RAIL", "ELRL",
												"SAAN", "SBAN", "SCAN", "SDAN",	
						                        "SBAE", "SCAE", "SDAE", "SEAE", "SFAE", "SUAE",
												"dAAN", "dBAN", "dBAE",
												"SAA3", "SBA3", "SUA3",
												"SAAZ", "SBAZ", "SUAZ"];
			powered_railtype_list:      	["SAAZ", "SBAZ", "SABZ", "SBBZ", "SUAZ"];
			alternative_railtype_list:		["SAAZ", "SBAZ", "SABZ", "SBBZ", "SUAZ"];
			railtype_flags:             	bitmask(RAILTYPE_FLAG_PRECOMBINED, RAILTYPE_FLAG_DISALLOW_90DEG, RAILTYPE_FLAG_CATENARY);
		//curve_speed_multiplier:     	1;
			station_graphics:           	RAILTYPE_STATION_NORMAL;
			requires_railtype_list:			["SAA3", "ELRL"];
			introduction_date: 				date(0000,01,01);
			construction_cost:          	28;
			maintenance_cost:				28;
			acceleration_model:         	ACC_MODEL_RAIL;
			map_colour:						48;
			sort_order:						16;
				}
		graphics {
			track_overlay:   				switch_SBA3_overlay;
			precombined:					switch_SBA3_precombined;
			underlay:        				switch_SBA3_underlay;
			bridge_surfaces: 				switch_SBA3_bridge;
			level_crossings: 				switch_SBA3_level_crossings;
			tunnels:         				switch_SBA3_tunnel;
			depots:          				switch_SBAZ_depots;
			catenary_pylons: 				switch_SDAE_pylons_catenary;
			catenary_wire: 					switch_wires_standar_rail;
		  //signals:
			fences:          				switch_SBA3_fences;
			gui:							switch_SBAZ_gui;
				}
	if (param_tunnel == 1) {
		graphics {
			tunnel_overlay:					switch_SBA3_tunnel_overlay;
				}
			}
		}
	}
}
//============================================================================
//						URBAN METRO LINE (SUAZ)
//============================================================================
if ((param_3rd > 1) && (param_urban_rail == 1)) {
if (railtype_available("SUAZ") || loading_stage == LOADING_STAGE_RESERVE) {
	item(FEAT_RAILTYPES, SUAZ, 30) {
		property {
			label:							"SUAZ";
			name:                       	string(STR_NAME_SUAZ);
			toolbar_caption:    			string(STR_TOOLBAR_SUAZ);
			menu_text:                  	string(STR_MENU_SUAZ);
			build_window_caption:			string(STR_BUILD_CAPTION_3RDR);
			autoreplace_text:           	string(STR_AUTOREPLACE_3RDR);
			new_engine_text:            	string(STR_NEW_ENGINE_3RDR);
			compatible_railtype_list:   	["RAIL", "ELRL",
												"SAAN", "SBAN", "SCAN", "SDAN",	
						                        "SBAE", "SCAE", "SDAE", "SEAE", "SFAE", "SUAE",
												"dAAN", "dBAN", "dBAE",
												"SAA3", "SBA3", "SUA3",
												"SAAZ", "SBAZ", "SUAZ"];
			powered_railtype_list:      	["SAAZ", "SBAZ", "SABZ", "SBBZ", "SUAZ"];
			alternative_railtype_list:		["SAAZ", "SBAZ", "SABZ", "SBBZ", "SUAZ"];
			railtype_flags:             	bitmask(RAILTYPE_FLAG_PRECOMBINED, RAILTYPE_FLAG_DISALLOW_90DEG, RAILTYPE_FLAG_CATENARY);
		//curve_speed_multiplier:     	1;
			station_graphics:           	RAILTYPE_STATION_NORMAL;
			requires_railtype_list:			["SAA3", "ELRL"];
			introduction_date: 				date(1960,01,01);
			construction_cost:          	38;
			maintenance_cost:				38;
			acceleration_model:         	ACC_MODEL_RAIL;
			map_colour:						49;
			sort_order:						17;
				}
		graphics {
			track_overlay:   				switch_SUA3_overlay;
			precombined:					switch_SUA3_precombined;
			underlay:        				switch_SUA3_underlay;
			bridge_surfaces: 				switch_SUA3_bridge;
			level_crossings: 				switch_SUA3_level_crossings;
			tunnels:         				switch_SUA3_tunnel;
			depots:          				switch_SUAZ_depots;
			catenary_pylons: 				switch_SUAE_pylons_catenary;
			catenary_wire: 					switch_SUAE_wires_standar_rail;
		//signals:		
			fences:          				switch_SUA3_fences;
			gui:							switch_SUAZ_gui;
				}
	if (param_tunnel == 1) {
		graphics {
			tunnel_overlay:					switch_SUA3_tunnel_overlay;
				}
			}
		}
	}
}
//============================================================================
//					STANDAR + NARROW GAUGE LINE (dAAN)
//============================================================================
if ((param_dual_gauge == 1) || (param_dual_gauge == 3)) {
if (railtype_available("dAAN") || loading_stage == LOADING_STAGE_RESERVE) {
	item(FEAT_RAILTYPES, dAAN, 25) {
		property {
			label:							"dAAN";
			name:                       	string(STR_NAME_dAAN);
			toolbar_caption:    			string(STR_TOOLBAR_dAAN);
			menu_text:                  	string(STR_MENU_dAAN);
			build_window_caption:			string(STR_BUILD_CAPTION_dAAN);
			autoreplace_text:          	 	string(STR_AUTOREPLACE_dAAN);
			new_engine_text:            	string(STR_NEW_ENGINE_dAAN);
			compatible_railtype_list:   	["RAIL", "ELRL",
												"SAAN", "SBAN", "SCAN", "SDAN",	
						                        "SBAE", "SCAE", "SDAE", "SEAE", "SFAE", "SUAE",
												"dAAN", "dBAN", "dBAE",
												"SAA3", "SBA3", "SUA3",
												"SAAZ", "SBAZ", "SUAZ",
												"nAAN", "NAAN", "NBAN", "NCAN", 
												"nAAE", "NAAE", "NBAE", "NCAE", "NDAE", "NUAE"];
			powered_railtype_list:      	["dAAN", "dBAN", "dBAE"];
			alternative_railtype_list:		["dAAN", "dBAN", "dBAE"];
			railtype_flags:             	bitmask(RAILTYPE_FLAG_PRECOMBINED, RAILTYPE_FLAG_DISALLOW_90DEG);
		  //curve_speed_multiplier:     	1;
			station_graphics:           	RAILTYPE_STATION_NORMAL;
			requires_railtype_list:			["RAIL", "NAAN"];
			introduction_date: 				date(0000,01,01);
			construction_cost:          	22;
			maintenance_cost:				22;
			acceleration_model:         	ACC_MODEL_RAIL;
			map_colour:						57;
			sort_order:						18;
				}
		graphics {
			track_overlay:   				switch_dAAN_overlay;
			precombined:					switch_dAAN_precombined;
			underlay:        				switch_dAAN_underlay;
			bridge_surfaces: 				switch_dAAN_bridge;
			level_crossings: 				switch_dAAN_level_crossings;
			tunnels:         				switch_dAAN_tunnel;
			depots:          				switch_dAAN_depots;
		  //signals:		
			fences:          				switch_dAAN_fences;
			gui:							switch_dAAN_gui;
				}
	if (param_tunnel == 1) {
		graphics {
			tunnel_overlay:					switch_dAAN_tunnel_overlay;
				}
			}
		}
	}
}
//============================================================================
//					STANDAR + NARROW GAUGE LINE (dBAE)
//============================================================================
if (param_dual_gauge > 1) {
if (railtype_available("dBAE") || loading_stage == LOADING_STAGE_RESERVE) {
	item(FEAT_RAILTYPES, dBAE, 32) {
		property {
			label:							"dBAE";
			name:                       	string(STR_NAME_dBAE);
			toolbar_caption:    			string(STR_TOOLBAR_dBAE);
			menu_text:                  	string(STR_MENU_dBAE);
			build_window_caption:			string(STR_BUILD_CAPTION_dAAN);
			autoreplace_text:           	string(STR_AUTOREPLACE_dAAN);
			new_engine_text:            	string(STR_NEW_ENGINE_dAAN);
			compatible_railtype_list:   	["RAIL", "ELRL",
												"SAAN", "SBAN", "SCAN", "SDAN",	
						                        "SBAE", "SCAE", "SDAE", "SEAE", "SFAE", "SUAE",
												"dAAN", "dBAN", "dBAE",
												"SAA3", "SBA3", "SUA3",
												"SAAZ", "SBAZ", "SUAZ",
												"nAAN", "NAAN", "NBAN", "NCAN", 
												"nAAE", "NAAE", "NBAE", "NCAE", "NDAE", "NUAE"];
			powered_railtype_list:      	["dBAE"];
			alternative_railtype_list:		["dBAE"];
			railtype_flags:             	bitmask(RAILTYPE_FLAG_PRECOMBINED, RAILTYPE_FLAG_DISALLOW_90DEG, RAILTYPE_FLAG_CATENARY);
		  //curve_speed_multiplier:     	1;
			station_graphics:           	RAILTYPE_STATION_NORMAL;
			requires_railtype_list:			["ELRL", "NAAE"];
			introduction_date: 				date(1900,01,01);
			construction_cost:          	44;
			maintenance_cost:				44;
			acceleration_model:         	ACC_MODEL_RAIL;
			map_colour:						59;
			sort_order:						20;
				}
		graphics {
			track_overlay:   				switch_dBAN_overlay;
			precombined:					switch_dBAN_precombined;
			underlay:        				switch_dBAN_underlay;
			bridge_surfaces: 				switch_dBAN_bridge;
			level_crossings: 				switch_dBAN_level_crossings;
			tunnels:         				switch_dBAN_tunnel;
			depots:          				switch_dBAE_depots;
			catenary_pylons: 				switch_SDAE_pylons_catenary;
			catenary_wire: 					switch_wires_standar_rail;
		//signals:
			fences:          				switch_dBAN_fences;
			gui:							switch_dBAE_gui;
				}
	if (param_tunnel == 1) {
		graphics {
			tunnel_overlay:					switch_dBAN_tunnel_overlay;
				}
			}
		}
	}
}
//============================================================================
//						IMPROVED NARROW GAUGE LINE (NBAN)
//============================================================================
if (railtype_available("NAAN") || loading_stage == LOADING_STAGE_RESERVE) {
	item(FEAT_RAILTYPES, NAAN, 15) {
		property {
			label:							"NAAN";
			name:                       	string(STR_NAME_NAAN);
			toolbar_caption:    			string(STR_TOOLBAR_NAAN);
			menu_text:                  	string(STR_MENU_NAAN);
			build_window_caption:			string(STR_BUILD_CAPTION_NGRL);
			autoreplace_text:           	string(STR_AUTOREPLACE_NGRL);
			new_engine_text:            	string(STR_NEW_ENGINE_NGRL);
			compatible_railtype_list:   	["nAAN", "NAAN", "NBAN", "NCAN", "NDAN", 
			                                    "NABN", "NACN", "NADN", "NAEN",
												"nAAE", "NAAE", "NBAE", "NCAE", "NDAE", "NUAE",
												"dAAN", "dBAN", "dBAE"];
			powered_railtype_list:      	["nAAN", "NAAN", "NBAN", "NCAN", "NDAN", "NABN", "NACN", "NAEN",
												"nAAE", "NAAE", "NBAE", "NCAE", "NDAE", "NUAE",
												"dAAN", "dBAN", "dBAE"];
			alternative_railtype_list:		["nAAN", "NAAN", "NBAN", "NCAN", "NDAN",
												"NABN", "NACN", "NADN", "NAEN"];
			railtype_flags:             	bitmask(RAILTYPE_FLAG_PRECOMBINED, RAILTYPE_FLAG_DISALLOW_90DEG);
		  //curve_speed_multiplier:     	1;
			station_graphics:           	RAILTYPE_STATION_NORMAL;
			construction_cost:          	12;
			maintenance_cost:				12;
			acceleration_model:         	ACC_MODEL_RAIL;
			map_colour:						174;
			sort_order:						22;
				}
		graphics {
			track_overlay:   				switch_NBAN_overlay;
			precombined:					switch_NBAN_precombined;
			underlay:        				switch_NBAN_underlay;
			bridge_surfaces: 				switch_NBAN_bridge;
			level_crossings: 				switch_NBAN_level_crossings;
			tunnels:         				switch_NBAN_tunnel;
			depots:          				switch_NBAN_depots;
		  //signals:
			fences:          				switch_NBAN_fences;
			gui:							switch_NBAN_gui;
				}
	if (param_tunnel == 1) {
		graphics {
			tunnel_overlay:					switch_NBAN_tunnel_overlay;
				}
			}
		}
	}
//============================================================================
//						MODERN NARROW GAUGE LINE EL (NCAE)
//============================================================================
if (railtype_available("NAAE") || loading_stage == LOADING_STAGE_RESERVE) {
	item(FEAT_RAILTYPES, NAAE, 16) {
		property {
			label:							"NAAE";
			name:                       	string(STR_NAME_NAAE);
			toolbar_caption:    			string(STR_TOOLBAR_NAAE);
			menu_text:                  	string(STR_MENU_NAAE);
			build_window_caption:			string(STR_BUILD_CAPTION_ELNG);
			autoreplace_text:          	 	string(STR_AUTOREPLACE_ELNG);
			new_engine_text:            	string(STR_NEW_ENGINE_ELNG);
			compatible_railtype_list:   	["nAAE", "NAAN", "NBAN", "NCAN", 
												"NAAE", "NBAE", "NCAE", "NDAE", "NUAE", 
												"NABE", "NACE", "NADE", "NAEE",
												"dAAN", "dBAN", "dBAE"];
			powered_railtype_list:      	["nAAE", "NAAE", "NBAE", "NCAE", "NDAE", "NUAE", 
												"NABE", "NACE", "NADE", "NAEE", 
												"dBAE"];
			alternative_railtype_list:		["nAAE", "NAAE", "NBAE", "NCAE", "NDAE", "NUAE", 
												"NABE", "NACE", "NADE", "NAEE"];
			railtype_flags:             	bitmask(RAILTYPE_FLAG_PRECOMBINED, RAILTYPE_FLAG_DISALLOW_90DEG, RAILTYPE_FLAG_CATENARY);
		  //curve_speed_multiplier:     	1;
			station_graphics:           	RAILTYPE_STATION_NORMAL;
			construction_cost:          	20;
			maintenance_cost:				20;
			acceleration_model:         	ACC_MODEL_RAIL;
			map_colour:						119;
			sort_order:						26;
				}
		graphics {
			track_overlay:   				switch_NCAN_overlay;
			precombined:					switch_NCAN_precombined;
			underlay:        				switch_NCAN_underlay;
			bridge_surfaces: 				switch_NCAN_bridge;
			level_crossings: 				switch_NCAN_level_crossings;
			tunnels:         				switch_NCAN_tunnel;
			depots:          				switch_NCAE_depots;
			catenary_pylons: 				switch_NCAE_pylons_catenary;
			catenary_wire: 					switch_wires_narrow_rail;
		  //signals:
			fences:          				switch_NCAN_fences;
			gui:							switch_NCAE_gui;
				}
	if (param_tunnel == 1) {
		graphics {
			tunnel_overlay:					switch_NCAN_tunnel_overlay;
				}
			}
		}
	}
//============================================================================
//						URBAN NARROW GAUGE LINE EL (NUAE)
//============================================================================
if (param_urban_rail == 1) {
if (railtype_available("NUAE") || loading_stage == LOADING_STAGE_RESERVE) {
	item(FEAT_RAILTYPES, NUAE, 22) {
		property {
			label:							"NUAE";
			name:                       	string(STR_NAME_NUAE);
			toolbar_caption:    			string(STR_TOOLBAR_NUAE);
			menu_text:                  	string(STR_MENU_NUAE);
			build_window_caption:			string(STR_BUILD_CAPTION_ELNG);
			autoreplace_text:           	string(STR_AUTOREPLACE_ELNG);
			new_engine_text:            	string(STR_NEW_ENGINE_ELNG);
			compatible_railtype_list:   	["nAAE", "NAAN", "NBAN", "NCAN", 
												"NAAE", "NBAE", "NCAE", "NDAE", "NUAE", 
												"NABE", "NACE", "NADE", "NAEE",
												"dAAN", "dBAN", "dBAE"];
			powered_railtype_list:      	["nAAE", "NAAE", "NBAE", "NCAE", "NDAE", "NUAE", 
												"NABE", "NACE", "NADE", "NAEE", 
												"dBAE"];
			alternative_railtype_list:		["nAAE", "NAAE", "NBAE", "NCAE", "NDAE", "NUAE", 
												"NABE", "NACE", "NADE", "NAEE"];
			railtype_flags:             	bitmask(RAILTYPE_FLAG_PRECOMBINED, RAILTYPE_FLAG_DISALLOW_90DEG, RAILTYPE_FLAG_CATENARY);
		  //curve_speed_multiplier:     	1;
			station_graphics:           	RAILTYPE_STATION_NORMAL;
			introduction_date: 				date(1960,01,01);
			requires_railtype_list:			["NAAE"];
			construction_cost:          	34;
			maintenance_cost:				34;
			acceleration_model:         	ACC_MODEL_RAIL;
			map_colour:						121;
			sort_order:						28;
				}
		graphics {
			track_overlay:   				switch_NUAE_overlay;
			precombined:					switch_NUAE_precombined;
			underlay:        				switch_NUAE_underlay;
			bridge_surfaces: 				switch_NUAE_bridge;
			level_crossings: 				switch_NUAE_level_crossings;
			tunnels:         				switch_NUAE_tunnel;
			depots:          				switch_NUAE_depots;
			catenary_pylons: 				switch_NUAE_pylons_catenary;
			catenary_wire: 					switch_wires_narrow_rail;
		  //signals:
			fences:          				switch_NUAE_fences;
			gui:							switch_NUAE_gui;
				}
	if (param_tunnel ==1) {
		graphics {
			tunnel_overlay:		    		switch_NUAE_tunnel_overlay;
				}
			}
		}
	}
}
//============================================================================
//					NARROW GAUGE LINE (3RD POWERED) (NAA3)
//============================================================================
if (railtype_available("NAA3") || loading_stage == LOADING_STAGE_RESERVE) {
	item(FEAT_RAILTYPES, NAA3, 26) {
		property {
			label:							"NAA3";
			name:                       	string(STR_NAME_NAA3);
			toolbar_caption:    			string(STR_TOOLBAR_NAA3);
			menu_text:                  	string(STR_MENU_NAA3);
			build_window_caption:			string(STR_BUILD_CAPTION_NAA3);
			autoreplace_text:           	string(STR_AUTOREPLACE_NAA3);
			new_engine_text:            	string(STR_NEW_ENGINE_NAA3);
			compatible_railtype_list:   	["NAA3", "NBA3", "NAB3"];
			powered_railtype_list:      	["NAA3", "NBA3", "NAB3"];
			alternative_railtype_list:		["NAA3", "NBA3", "NAB3"];
			railtype_flags:             	bitmask(RAILTYPE_FLAG_PRECOMBINED, RAILTYPE_FLAG_DISALLOW_90DEG);
		  //curve_speed_multiplier:     	1;
			station_graphics:           	RAILTYPE_STATION_NORMAL;
			construction_cost:          	20;
			maintenance_cost:				20;
			acceleration_model:         	ACC_MODEL_RAIL;
			map_colour:						101;
			sort_order:						29;
				}
		graphics {
			track_overlay:   				switch_NAA3_overlay;
			precombined:					switch_NAA3_precombined;
			underlay:        				switch_NAA3_underlay;
			bridge_surfaces: 				switch_NAA3_bridge;
			level_crossings: 				switch_NAA3_level_crossings;
			tunnels:         				switch_NAA3_tunnel;
			depots:          				switch_NAA3_depots;
		  //signals:
			fences:          				switch_NAA3_fences;
			gui:							switch_NAA3_gui;
				}
	if (param_tunnel == 1) {
		graphics {
			tunnel_overlay:					switch_NAA3_tunnel_overlay;
				}
			}
		}
	}
//============================================================================
//						MONORAIL (MONO)
//============================================================================
	item(FEAT_RAILTYPES, MONO, 2) {
		property {
			label:							"MONO";
			name:                       	string(STR_NAME_MONO);
			toolbar_caption:    			string(STR_TOOLBAR_MONO);
			menu_text:                  	string(STR_MENU_MONO);
			compatible_railtype_list:   	["MONO"];
			powered_railtype_list:      	["MONO"];
			alternative_railtype_list:		["MONO"];
			railtype_flags:             	bitmask(RAILTYPE_FLAG_PRECOMBINED, RAILTYPE_FLAG_NO_LEVEL_CROSSING, RAILTYPE_FLAG_DISALLOW_90DEG);
		  //curve_speed_multiplier:     	1;
			station_graphics:           	RAILTYPE_STATION_MONORAIL;
			construction_cost:          	80;
			maintenance_cost:				80;
			acceleration_model:         	ACC_MODEL_MONORAIL;
			map_colour:						165;
			sort_order:						31;
				}
		graphics {
			track_overlay:   				switch_MONO_overlay;
			precombined:					switch_MONO_precombined;
			underlay:        				switch_MONO_underlay;
			tunnels:         				switch_MONO_tunnel;
			depots:          				switch_MONO_depots;
		  //signals:
			fences:          				switch_MONO_fences;
			gui:							switch_MONO_gui;
				}
	if (grf_future_status("UFI\01")) {
		graphics {
			bridge_surfaces: 				switch_MONO_U_bridge;
				}
		} else {
		graphics {
			bridge_surfaces: 				switch_MONO_bridge;
				}
			}
	if (param_tunnel == 1) {
		graphics {
			tunnel_overlay:					switch_MONO_tunnel_overlay;
				}
			}
    	}
//============================================================================
//						MAGLEV (MGLV)
//============================================================================
	item(FEAT_RAILTYPES, MGLV, 3) {
		property {
			label:							"MGLV";
			name:                       	string(STR_NAME_MGLV);
			toolbar_caption:    			string(STR_TOOLBAR_MGLV);
			menu_text:                  	string(STR_MENU_MGLV);
			compatible_railtype_list:   	["MGLV"];
			powered_railtype_list:      	["MGLV"];
			alternative_railtype_list:		["MGLV"];
			railtype_flags:             	bitmask(RAILTYPE_FLAG_PRECOMBINED, RAILTYPE_FLAG_NO_LEVEL_CROSSING, RAILTYPE_FLAG_DISALLOW_90DEG);
		  //curve_speed_multiplier:     	1;
			station_graphics:           	RAILTYPE_STATION_MAGLEV;
			construction_cost:          	160;
			maintenance_cost:				160;
			acceleration_model:         	ACC_MODEL_MAGLEV;
			map_colour:						194;
			sort_order:						32;
				}
		graphics {
			track_overlay:   				switch_MGLV_overlay;
			precombined:					switch_MGLV_precombined;
			underlay:        				switch_MGLV_underlay;
			tunnels:         				switch_MGLV_tunnel;
			depots:          				switch_MGLV_depots;
		  //signals:
			fences:          				switch_MGLV_fences;
			gui:							switch_MGLV_gui;
				}
	if (grf_future_status("UFI\01")) {
		graphics {
			bridge_surfaces: 				switch_MGLV_U_bridge;
				}
		} else {
		graphics {
			bridge_surfaces: 				switch_MGLV_bridge;
				}
			}
	if (param_tunnel == 1) {
		graphics {
			tunnel_overlay:					switch_MGLV_tunnel_overlay;
				}
			}
		}
//==================================================================================================================================
//												END
//==================================================================================================================================